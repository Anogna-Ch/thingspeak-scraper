{"url": "https://community.thingspeak.com/forum/thingspeak-api/page-36/", "threads": [{"url": "https://community.thingspeak.com/forum/thingspeak-api/gsm-connection-to-thingspeak-null-values/", "posts": [{"date": "March 6, 2014 - 5:06 am", "content": "Hi, I am struggling to connect to thingSpeak using a GSM connection.My problem is that I am posting NULL values to my thingSpeak channel (temperature sensor)I have tested the code for a string value; that works fine. Just the value for the reading is not going up to thingSpeak.Here is the Loop() and SendData() section of the sketch:Any pointers would be greatly appreciated, thank you.//void loop(){  // read the analog sensor:  int sReading = analogRead(A0); // postingInterval))  {  sendData('field1='+sensorReading); //<==========  }  // store the state of the connection for next time through  // the loop:  lastConnected = client.connected();}/*  This method makes a HTTP connection to the server.*/void sendData(String thisData){  // if there's a successful connection:  if (client.connect(server, 80))  {    Serial.println('connecting...');    client.print('POST /update HTTP/1.1n');    client.print('Host: api.thingspeak.comn');    client.print('Connection: closen');    client.print('X-THINGSPEAKAPIKEY: ');    client.print(APIKEY);    client.print('n');    client.print('Content-Type: application/x-www-form-urlencodedn');    client.print('Content-Length: ');    client.print(thisData.length());    client.print('nn');    client.print('Temp Sensor: ');    client.print(thisData);  }  else  {    // if you couldn't make a connection:    Serial.println('connection failed');    Serial.println();    Serial.println('disconnecting.');    client.stop();  }  // note the time that the connection was made or attempted  lastConnectionTime = millis();}//", "num_user_post": " 5", "author": "Stonker"}]}, {"url": "https://community.thingspeak.com/forum/thingspeak-api/406-not-acceptable/", "posts": [{"date": "February 28, 2014 - 11:53 pm", "content": "Hi-I'm posting from a python script using urllib and the code below to update two channels every 15 seconds.   For the past month or two it's been working fine and returning response.status == 200.  It's still working fine (in that it is updating my channels) but starting yesterday it began returning response.status == 406 and response.reason 'Not Acceptable'Anyone know why suddenly ThingSpeak is returning 406?Thanks-CeCparams = urllib.urlencode({'field1': v1, 'field2': v2, 'field3' : v3, 'field4' : v4, 'field5' : v5, 'key': myKey})headers = {'Content-type': 'application/x-www-form-urlencoded','Accept': 'text/plain'}conn = httplib.HTTPConnection('api.thingspeak.com:80')conn.request('POST', '/update', params, headers)response = conn.getresponse()if response.status != 200:     print 'ThingSpeak: ', response.status, response.reasondata = response.read()conn.close()", "num_user_post": " 1", "author": "CeC"}, {"date": "March 1, 2014 - 12:33 pm", "content": "Hi,This should be fixed now, can you let us know if it's working correctly for you again?  We added JSON and XML responses, but didn't handle TEXT responses correctly in a recent update.lee", "num_user_post": " 457", "author": "lee"}]}, {"url": "https://community.thingspeak.com/forum/thingspeak-api/jsonp-response-for-update/", "posts": [{"date": "February 25, 2013 - 2:33 pm", "content": "I'm creating a generic web form with jQuery Mobile that will allow users to manually post values to a Thingspeak channel provided they know the URL of the installation and the channel's write key.  I've got a working prototype, but I'm having a little trouble making the posting AJAXy.  Since the chances are strong that the Thingspeak install will be in a different domain than the web form, AJAX will not load the response to the update POST (which is just the ID of the newly created data entry)If the response to an update were optionally wrapped in a callback (if one is provided), then the returned ID number could be seen as an integer, and processed via AJAX.  Does this kind of addition make sense to folks, or would it get in the way of the primary intended clients (things)?", "num_user_post": " 1", "author": "sekjal"}, {"date": "February 21, 2014 - 11:49 am", "content": "+1 for JSONP", "num_user_post": " 1", "author": "tamberg"}, {"date": "February 21, 2014 - 1:25 pm", "content": "Whoops, looks like we missed an old forum topic. But, JSONP was and is support since day 1 of ThingSpeak.Every API command can include a 'callback' parameter. What ever value gets sent, will be wrapped around the response.Here's an example:http://api.thingspeak.com/channels/3/feed/last.json?callback=testFunctionResponse:testFunction({'created_at':'2014-02-21T18:15:42Z','entry_id':162936,'field1':'60.6 F'})I hope that helps!", "num_user_post": " 402", "author": "Hans"}]}, {"url": "https://community.thingspeak.com/forum/thingspeak-api/help-rate-limit-seems-not-to-apply/", "posts": [{"date": "February 19, 2014 - 8:19 am", "content": "I have an arduino yun using the execute parameter on posting. I have set my test code to try to send things to thingspeak every 5 seconds assuming 1 in 3 requests will hit.within seconds of firing up the yun I have a lot of entries appearing in the thingspeak channelhttps://thingspeak.com/channels/5384#publicviewThingspeak appears to be either ignoring the rate limit when you call the execute parameter in the url or perhaps there is some internal bug which is duplicating the results as I cant see anything in my code which would try and post more than once every 5 seconds.", "num_user_post": " 54", "author": "chrisjmears"}, {"date": "February 19, 2014 - 11:57 am", "content": "Hi,Are you logging the Talkback commands to a Channel?  If so, the normal rate limits are bypassed so that you have an accurate log of executed commands.lee", "num_user_post": " 457", "author": "lee"}, {"date": "February 21, 2014 - 7:30 am", "content": "Hi LeeBasically all i've done is add    talkback_key=WHATEVER_MY TALKBACK_KEY_IS to the query string to grab the latest command.So my initial get posted the thingspeak was http://api.thingspeak.com/update?&field1=XX&field2=XX&field3=XX&statuscode=''and my post to update thingspeak and grab the latest instruction all in one readshttp://api.thingspeak.com/update?&field1=XX&field2=XX&field3=XX&statuscode=''& talkback_key=WHATEVER_MY TALKBACK_KEY_ISWith the second string, I seem to get loads of talkback entries rapidly stacking up. About one every  second or so. Have a look at this channel feed and note the timings between entries.http://api.thingspeak.com/channels/5384/feed.csvPreviously I was happily relying on the 15 second api limit. Because the chart api seems to only retrieve a maximum of 8000 records, with a 15 second interval between posts this meant that 3 days worth of data only came to 5760 records. As its now posting every second I can only get a few hours of records max.Another weird thing, but I will need to check my code. I am sure my code only tries to post every 5 seconds so 2 out of 3 attempts are meant to bounce off the rate limit. I could have made a mistake with my loop which I need to check out but I am totally bamboozled why I am getting per second posts. If its not my code, is something internal happening with the talkback code which is duplicating entried?", "num_user_post": " 54", "author": "chrisjmears"}]}, {"url": "https://community.thingspeak.com/forum/thingspeak-api/search-public-channels-by-location/", "posts": [{"date": "February 20, 2014 - 9:30 pm", "content": "Hi. Is there a way to use the API to list public channels centered around a long/lat location?  Something like http://api.thingspeak.com/channels/public?lon=123?lat=123?radius=50Thanks Aaron", "num_user_post": " 7", "author": "turboencabulator"}, {"date": "February 20, 2014 - 9:42 pm", "content": "Hi Aaron,We currently don't provide this functionality, but may implement it in the future.lee", "num_user_post": " 457", "author": "lee"}, {"date": "February 20, 2014 - 9:45 pm", "content": "Thanks.  I'll add a feature request.", "num_user_post": " 7", "author": "turboencabulator"}]}, {"url": "https://community.thingspeak.com/forum/thingspeak-api/time-between-two-consecutive-post/", "posts": [{"date": "February 19, 2014 - 11:17 am", "content": "Hello, is there a waiting time to observe between two different channels for POST, for performance reasons for example ? ie:client.post('http://127.0.0.1:3000/update?key=XXXXXXXXX&field1=' +'10'); try {Thread.sleep(1500);} catch (InterruptedException e) {e.printStackTrace();}Client.post('http://127.0.0.1:3000/update?key=XXXXXXXXX&field2=' +'20');Many thanks", "num_user_post": " 3", "author": "fred"}, {"date": "February 19, 2014 - 11:54 am", "content": "Hi,Yes  there is a rate limit of one update per Channel every 15 seconds.lee", "num_user_post": " 457", "author": "lee"}]}, {"url": "https://community.thingspeak.com/forum/thingspeak-api/results-not-working-on-thingspeak-from-github/", "posts": [{"date": "February 18, 2014 - 5:38 am", "content": "Hello,I've just installed the thingspeak iobridge from GitHub (https://github.com/iobridge/thingspeak)The 'results' option doesn't appear in menu and doesn't work with HTTP POST (ie) : http://127.0.0.1:3000/channels/1/charts/1?results=30&dynamic=trueThe database log take into account the HTTP POST but seems to not compute the 'result' option (?) :started GET '/channels/1/charts/1?results=10&dynamic=true' for 127.0.0.1 at 2014-02-18 11:36:11 +0100Processing by ChartsController#show as HTML  Parameters: {'results'=>'10', 'dynamic'=>'true', 'channel_id'=>'1', 'id'=>'1'}  User Load (0.2ms)  SELECT `users`.* FROM `users` WHERE `users`.`id` = 1 LIMIT 1  Rendered charts/show.html.erb (0.3ms)Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 0.2ms)Many thanks", "num_user_post": " 3", "author": "fred"}, {"date": "February 18, 2014 - 12:32 pm", "content": "Hi Fred,I just tested this out on my end and everything works as expected:SELECT created_at, entry_id, field1 FROM `feeds` WHERE `feeds`.`channel_id` = 1 AND (`feeds`.`created_at` BETWEEN '2010-01-01 05:00:00' AND '2014-02-18 17:27:52') ORDER BY created_at desc LIMIT 30Can you try the following:update your repository: `git pull origin master`restart your server (control-c, `rails server`)try opening the charts page againlee", "num_user_post": " 457", "author": "lee"}, {"date": "February 19, 2014 - 5:22 am", "content": "Thank you, it works fine now  Fred", "num_user_post": " 3", "author": "fred"}]}, {"url": "https://community.thingspeak.com/forum/thingspeak-api/daily-average1440-parameter-purpose-defeated-by-results-limits/", "posts": [{"date": "June 26, 2013 - 6:09 pm", "content": "When I do:http://api.thingspeak.com/channels/9/feed.json?start=2011-11-11%2010:10:10&end=2012-11-11%2011:11:11&average=1440to obtain a years worth of daily average values, only two points are returned.  This is utterly worthless.  Apparently, the 8000 point limit on results is for the raw data that the average function looks at (two days is about 12,000 points), and not the number of results it returns.  This needs to be changes so that the average function is worth using, and so that users are not forced to download the entire data set in order to make a thumbnail snapshot of the historical data.Currently, a big advantage of ThingSpeak over Xlively/Cosm/Pachtube is that the user has access to the entire data history, instead of just 30 days.  However, we need effective API tools to access this data.", "num_user_post": " 70", "author": "turgo"}, {"date": "December 20, 2013 - 3:04 pm", "content": "I thought I'd bump this request for better functionality since IO bridge appears to be monitoring the forums this month.  If you upgrade Thingspeak to provide 8000 points of AVERAGED data, I will post a Javascript HighStock webpage  that allows a user to dynamically chart any time period for multiple fields.  It's like a yahoo stock chart.  It will also export that data as CSV.", "num_user_post": " 70", "author": "turgo"}, {"date": "December 21, 2013 - 11:45 pm", "content": "Hi,Yes you are correct that the 8000 point limit applies to the raw underlying data.  If we allowed an average of every 1440 data points for a full year, at maximum we'd have to first retrieve more than 2 million records from the database and then average every 1440 points.  We aren't currently able to provide this functionality, since it would severely affect the performance of other users' data.  Unfortunately we have to place limits somewhere.One alternative that you could do is to retrieve the averaged data from our server or calculate it yourself, and then log this data back to ThingSpeak in another channel after every 1440 data points have been sent.Another alternative would be to install the open source version of ThingSpeak ( https://github.com/iobridge/thingspeak ) to your own server, since the rate limits would't apply.lee", "num_user_post": " 457", "author": "lee"}, {"date": "December 22, 2013 - 2:11 am", "content": "Hi Lee,Thanks for the quick reply. Please take a look at the kind of cool chart that  averaging would allow:http://www.highcharts.com/stock/demo/lazy-loadingNotice how you can dynamically zoom in to a time period of interest.  It's all done with averages.I think that a chart like this is the missing link to make the gigabytes of historical data you store truly useful.  Currently there are no effective tools to access all that data.  There is not enough time in the day to download a even year's worth of historical data 8000 points at a time.  (I've tried it, after a months worth of data, and half an hour downloading, the server stops working.)  Providing access to averaged data would allow a user to focus on the part of the historical record that they were interested in, and download only that part.  Your server may have to access averages of a several million point history, but would not need to download the entire record.  Additionally, the daily averages could be cashed server side for this function.   Please give historical averages some consideration.", "num_user_post": " 70", "author": "turgo"}, {"date": "January 28, 2014 - 3:42 pm", "content": "Hi,We've made some improvements to how daily calculations are made.  The first time these calculations are made we store them in the database (it will take some time to crunch the data), but subsequent requests will load up the precalculated data.  Your example of http://api.thingspeak.com/channels/9/feed.json?start=2011-11-11%2010:10:10&end=2012-11-11%2011:11:11&average=1440 should now work.lee", "num_user_post": " 457", "author": "lee"}, {"date": "January 29, 2014 - 1:59 am", "content": "Awesome, I'll see about changing the multichannel graphing web page to take advantage of this.  http://community.thingspeak.com/forum/announcements/thingspeak-live-chart-multi-channel-second-axis-historical-data-csv-export/Looking at the output:{'created_at':'2011-11-28T00:00:00Z','field1':'360.6664926931106','field2':'48.91625186347463'}I see lots of extra decimal places.  Both storage and download could be hastened with some rounding.", "num_user_post": " 70", "author": "turgo"}, {"date": "January 29, 2014 - 12:43 pm", "content": "You're right, the download can have rounding applied which will make the response shorter in length: http://api.thingspeak.com/channels/9/feed.json?start=2011-11-11%2010:10:10&end=2012-11-11%2011:11:11&average=1440&round=2 .  For storage, rounding the values wouldn't help since we're using a fixed database column size.lee", "num_user_post": " 457", "author": "lee"}, {"date": "February 10, 2014 - 1:49 am", "content": "I've started upgrading the multichannel historical data graphing tool, and see that you have only changed the 1440 parameter to look at more than 8000 records.  To be useful, the other average periods need full access as well. However, I see that storing each set of values may become cumbersome.  It would be particularly helpful to add 1, 2, and 5 minute averages.  Data recorded in 15 second intervals is great for live charts, but when viewing historical data slightly longer averages are more efficient.  Would it be possible to add 1, 2, 5 and 10 minute averages with full access?  Since these shorter averages would not require looking at most of the data set, the server performance may not be adversely affected.  Thus, you would not have to store the averaged data.  The change could be easy!", "num_user_post": " 70", "author": "turgo"}, {"date": "February 10, 2014 - 11:55 am", "content": "The 1, 2, and 5 minute averages won't be changed anytime soon, since we have to choose to make cutoffs (limit=8000) somewhere that won't adversely affect server performance.  We are trying to maintain a proper balancing act between results length (which causes more table rows to be scanned) versus storing calculated data (which causes more database storage to be used), so that we can keep this service free and as efficient as possible.lee", "num_user_post": " 457", "author": "lee"}, {"date": "February 10, 2014 - 3:57 pm", "content": "Do you plan to store averages for any periods shorter than 1440 minutes?Another way to look at this problem would be to store averages for 10 minute periods, and then calculate averages for periods greater than 10 minutes on the fly derived from the 10 minute data.I wonder if server performance could be dramatically improved by adopting a float data type, instead of fixed width characters.", "num_user_post": " 70", "author": "turgo"}, {"date": "February 10, 2014 - 5:01 pm", "content": "We may implement 10 minute calculations in the future, but don't have any immediate plans for it.Some of our users store character (and UTF8) data in the fields; changing it to floats would only affect the size of the database, but not the number of table rows that need to be scanned.lee", "num_user_post": " 457", "author": "lee"}, {"date": "February 11, 2014 - 12:59 am", "content": "Hi Lee,Adding 10 minute stored averages would be great!  With 10 minute averages, 8000 points would give a pretty detailed look at 55 days worth of 15 second data.  That would make a historical data viewer fast and useful!  Currently it requires about 40 separate requests to see 55 days and takes half an hour to load, making it impractical to see historical data.", "num_user_post": " 70", "author": "turgo"}, {"date": "February 16, 2014 - 7:50 pm", "content": "I've been working with the daily average, and found that the first time I call for it, the server gives a 504 time out after a minute.  This repeats five cycles, and then finally returns the Daily average.  That's a huge delay.", "num_user_post": " 70", "author": "turgo"}, {"date": "February 17, 2014 - 12:47 pm", "content": "Hi,We don't store the daily average data for every Channel.  Once an initial request is made for daily calculated data, then we store that information for the Channel, so the initial request may take a while as all of the calculations have to be performed.  Once this is finished however, the calculated data for those dates will never have to be recalculated, and there should be no performance problems.lee", "num_user_post": " 457", "author": "lee"}]}, {"url": "https://community.thingspeak.com/forum/thingspeak-api/any-way-to-create-a-running-text-log-along-with-my-chart/", "posts": [{"date": "January 22, 2014 - 8:17 pm", "content": "Is there any way to create a running text log with messages from my arduino to appear in another window with my temperature chart?What is this called?  I just need a lead on what to call this so I can go look at how to do it.Thanks-A", "num_user_post": " 1", "author": "awardblvr"}, {"date": "January 24, 2014 - 8:29 pm", "content": "I believe you can send text to a channel field.  In fact, if your not careful, you will send numbers with white space to ThingSpeak, and it will treat them as text.  In Arduino, use mystr.trim(); to fix the white space problem.", "num_user_post": " 70", "author": "turgo"}, {"date": "February 10, 2014 - 7:48 pm", "content": "ThingSpeak has a status field for each channel that would seem a good fit for storing your status messages.To display you may have to use something like a Google Viz annotation chart [1]  or dygraphs annotations[2].   I've posted some code using Google Viz at https://gist.github.com/rw950431/8815072 which you may be able to adapt.[1] https://developers.google.com/chart/interactive/docs/gallery/annotationchart[2]http://dygraphs.com/gallery/#g/annotations", "num_user_post": " 271", "author": "rw950431"}]}, {"url": "https://community.thingspeak.com/forum/thingspeak-api/charts-in-iframes-error-load-denied-by-x-frame-options/", "posts": [{"date": "January 31, 2014 - 4:39 am", "content": "Hi all,starting from today, charts generated with the ThinkSpeak API are not displayed anymore in an iframe of a web page. This seems to happen also on the ThinkSpeak documentation page itself (the chart is not displayed):http://community.thingspeak.com/documentation/api/#chartsThe browsers shows this error in the dev console: Load denied by X-Frame-OptionsFrom what I understand this should be caused by the ThingSpeak HTTP server configuration, in particular the X-Frame-Options settings.https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-OptionsAny of the devs here tinkered with these lately? How can we users work around this issue?Thanks Malden", "num_user_post": " 15", "author": "Malden"}, {"date": "January 31, 2014 - 11:13 am", "content": "Hi Malden,This should be fixed now.  It was a default security option in Rails 4 (we just upgraded to it) that had to be overridden.lee", "num_user_post": " 457", "author": "lee"}, {"date": "January 31, 2014 - 11:45 am", "content": "Great. This Forum has become really reponsive lately.  Thanks", "num_user_post": " 15", "author": "Malden"}, {"date": "February 2, 2014 - 3:15 am", "content": "I had the same issue in the past days on my websites, now it is solved.Thanks to ThingSpeak.Valter", "num_user_post": " 1", "author": "commsec"}]}, {"url": "https://community.thingspeak.com/forum/thingspeak-api/dynamic-charts-only-updated-when-logged-in/", "posts": [{"date": "August 29, 2013 - 4:19 am", "content": "Hello,I have been observing this issue for quite some time now. My dynamic charts on a custom web page are updated automatically only when I am logged into my ThingSpeak account.The data I am displaying with the chart are from a private channel, but I am supplying the Read-API key in the http request:https://www.thingspeak.com/channels/1111/charts/1?key=12345678&width=800&height=260&days=1;dynamic=true Am I doing anything wrong or is this an issue with the API?Thanks", "num_user_post": " 15", "author": "Malden"}, {"date": "September 13, 2013 - 3:18 am", "content": "Can someone confirm this problem or am I the only one seeing this issue?It should be easily reproducible with data from any private channel.", "num_user_post": " 15", "author": "Malden"}, {"date": "December 3, 2013 - 6:02 pm", "content": "Hi,You may have a slight syntax error in your URL, try using https://www.thingspeak.com/channels/1111/charts/1?key=12345678&width=800&height=260&days=1&dynamic=true (using the proper key).  I changed ';dynamic=true' to '&dynamic=true'.", "num_user_post": " 457", "author": "lee"}, {"date": "January 27, 2014 - 9:18 am", "content": "Hi Lee, thanks for your reply.My implementation is correct, I just pasted the code incorrectly.I just retried. As long as I am not logged into my ThingSpeak account, the chart does not update on the web page I created. As soon as I log in, the charts starts to update automatically, without reloading/refreshing the page where the chart is displayed. Can't you reproduce this issue?", "num_user_post": " 15", "author": "Malden"}, {"date": "January 27, 2014 - 11:59 am", "content": "Hi Malden,Yes I was able to reproduce this issue, and it should be fixed now.  There were some missing parameters (including the API key) when the dynamic JavaScript callback was being executed.  Sorry about that!lee", "num_user_post": " 457", "author": "lee"}, {"date": "January 28, 2014 - 5:46 am", "content": "Hi Lee,thanks a lot for fixing this issue, it is indeed working now. Good work.", "num_user_post": " 15", "author": "Malden"}]}, {"url": "https://community.thingspeak.com/forum/thingspeak-api/retrieve-first-feed-entry/", "posts": [{"date": "January 15, 2014 - 4:02 pm", "content": "Is there an easy way to retrieve the very first entry in a channel feed?I would want to use it together with the last entry to calculate the current operational lifetime of my device (defined simply as the time span between these two entries).nr", "num_user_post": " 7", "author": "nr"}, {"date": "January 16, 2014 - 12:51 pm", "content": "Hi,Yes there is an undocumented feature that allows this, in the format /channels/CHANNEL_ID/feeds/entry/ENTRY_ID .For example this is the first entry in Channel 9: http://api.thingspeak.com/channels/9/feeds/entry/1 , and this is the 99th entry: http://api.thingspeak.com/channels/9/feeds/entry/99 .lee", "num_user_post": " 457", "author": "lee"}, {"date": "January 16, 2014 - 3:41 pm", "content": "Perfect!Thanks a lot.nr", "num_user_post": " 7", "author": "nr"}, {"date": "January 26, 2014 - 8:59 pm", "content": "Is there a way to return a range of entries?", "num_user_post": " 70", "author": "turgo"}, {"date": "January 26, 2014 - 9:10 pm", "content": "Hi,There is no way to return a range of entries based on entry IDs.  The closest you can get is to get entries between start and end dates.lee", "num_user_post": " 457", "author": "lee"}]}]}