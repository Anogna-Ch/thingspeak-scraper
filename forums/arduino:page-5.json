{"url": "https://community.thingspeak.com/forum/arduino/page-5/", "threads": [{"url": "https://community.thingspeak.com/forum/arduino/missing-data-points-1/", "posts": [{"date": "February 23, 2017 - 4:09 pm", "content": "I am using an arduino uno wifi to post 4 sensors to 1 channel, and It looks like I am missing data points. why am I missing data points?", "num_user_post": " 2", "author": "BeeWare"}, {"date": "February 23, 2017 - 7:41 pm", "content": "Please post your code so someone can look into\u00a0it to provide suggestion.A few things to check in your code:Are you updating your channel faster than\u00a0the maximum update rate for your user type? Free user accounts can update a channel once every 15s,\u00a0a paid ThingSpeak license enables you to update a channel every second.\u00a0Are you\u00a0updating one field at a time for a channel, rather than updating all fields in a single shot?\u00a0If so,\u00a0there is a very\u00a0high likelihood that you are violating the above mentioned\u00a0aspectHave you tried connecting to a serial port from a computer and using serial.print() to print out the return code you get from ThingSpeak? That will usually give you a good idea of\u00a0what is going on.", "num_user_post": " 225", "author": "Vinod"}, {"date": "February 25, 2017 - 10:23 am", "content": "below is my loop code, so do i need to put a delay in between each of my uploads instead of 30 seconds t the end?\u00a0void loop() { dTemp.requestTemperatures(); String uri = '/update?api_key='; uri += APIKEY; uri += '&field1='; //populates field 1 on ThinkSpeak Website uri += String(dTemp.getTempF(Probe01)); //gets temperature from probe 1 uri += '&field2='; //populates field 2 on ThinkSpeak Website uri += String(dTemp.getTempF(Probe02)); //gets temperature from probe 2 uri += '&field3='; //populates field 3 on ThinkSpeak Website uri += String(dTemp.getTempF(Probe03)); //gets temperature from probe 3uri += '&field4='; //populates field 4 on ThinkSpeak Website uri += String(scale.get_units()); // get weight on scale in lbs Ciao.println('Send data on ThingSpeak Channel');  CiaoData data = Ciao.write(CONNECTOR, SERVER_ADDR, uri); if (!data.isEmpty()){ Ciao.println( 'State: ' + String (data.get(1)) ); Ciao.println( 'Response: ' + String (data.get(2)) ); } else{ Ciao.println('Write Error'); }  delay(30000); // 30 seconds delay}", "num_user_post": " 2", "author": "BeeWare"}, {"date": "February 25, 2017 - 2:28 pm", "content": "I'd recommend using the\u00a0library rather than roll your own.\u00a0Take a look at the tutorials here: http://community.thingspeak.com/tutorials/Take a look at the examples in the library here: https://github.com/mathworks/thingspeak-arduino/tree/master/examples", "num_user_post": " 225", "author": "Vinod"}]}, {"url": "https://community.thingspeak.com/forum/arduino/error-for-arduino-101/", "posts": [{"date": "January 29, 2017 - 6:38 pm", "content": "Hello,I am trying to compile the sketch on Arduino 101, but I get an error: `Arduino: 1.6.10 (Mac OS X), Board: 'Arduino/Genuino 101'WARNING: library ThingSpeak claims to run on [avr architecture(s) and may be incompatible with your current board which runs on esp8266 architecture(s). In file included from /Users/x/Documents/Arduino/Display_temp_LCD_RHT03_connectWiFi_uploadTS/Display_temp_LCD_RHT03_connectWiFi_uploadTS.ino:57:0: /Users/x/Documents/Arduino/libraries/ThingSpeak/src/ThingSpeak.h:61:4: error: #error Only Arduino MKR1000, Yun, Uno/Mega/Due with either WiFi101 or Ethernet shield. ESP8266 also supported. #error Only Arduino MKR1000, Yun, Uno/Mega/Due with either WiFi101 or Ethernet shield. ESP8266 also supported. ^ /Users/x/Documents/Arduino/libraries/ThingSpeak/src/ThingSpeak.h:84:3: error: #error 'Platform not supported' #error 'Platform not supported' ^ exit status 1 Error compiling for board Arduino/Genuino 101. ` I cannot understand why the board is listed as not esp8266 -> not compatible, while ESP8266 is afterwards declared as 'also suported'Any help would be appreciated \ud83d\ude42", "num_user_post": " 1", "author": "paluigi"}, {"date": "February 21, 2017 - 8:51 am", "content": "The error message you are getting is a general one. It shows up when trying to compile for a device that the library hasn't specifically been configured and tested for.The Arduino 101 is fairly new and not yet supported by this library.", "num_user_post": " 34", "author": "JasonW"}]}, {"url": "https://community.thingspeak.com/forum/arduino/strings-in-arduino-ide/", "posts": [{"date": "December 13, 2016 - 6:23 pm", "content": "Hello,From what I am seeing in the online documentation, we can write integers in the Arduino IDE using ThingSpeak.setField then ThingsSpeak.writeFields(), but can we write strings? Can we send data that doesn't need to be graphed?\u00a0Thank you,Mo", "num_user_post": " 4", "author": "mohamedali1993"}, {"date": "December 14, 2016 - 6:49 am", "content": "Hi Mo,Yes -- both setField and writeField accept both const char * and arduino String types.See line 585 in ThingSpeak.h\u00a0to see an example function signature.ThingSpeak won't plot them (obviously), and you'll need to make sure to use the 'OutputFormat' of 'timetable' when you're working in MATLAB.-Rob", "num_user_post": " 47", "author": "Rob Purser"}, {"date": "December 29, 2016 - 1:57 pm", "content": "Hey Rob,\u00a0Thank you for your response. I am now able to send strings and read it in Matlab using timetable output format in the thingSpeakRead function, but I am unable to view the same data table in the actual channel. I have tried to use thingSpeakWrite function to write the table to another channel, but that didn't work.\u00a0If I treat the table as an array and index through it, then write it to another channel, it still views it as a graph. Finally, I tried the plugin app to create a 'chart with multiple series', and still got a graph.\u00a0Is there anyway I can\u00a0create a table with multiple strings, and be able to view it in a table format on my Thing Speak channel?\u00a0Thanks again,Mo", "num_user_post": " 4", "author": "mohamedali1993"}]}, {"url": "https://community.thingspeak.com/forum/arduino/dragino-lora-iot-kit-downstream-get-data-from-iot-server-and-send-to-lora-node/", "posts": [{"date": "December 11, 2016 - 11:51 pm", "content": "In this project,we will show how to use the Dragino LoRa Kit to get data from the ThingSpeak and send to LoRa node.\u00a0Hardware preparationLoRa Gateway -- LG01-PLoRa Node -- LoRa Shield+Arduino UnoRelay\u00a0Set up Hardware\u00a0Set up the hardware as below, the LoRa Gateway will get command from IoT Server and then send the command to LoRa node, the node control the relay state according to the receive command.\u00a0\u00a0\u00a0\u00a0\u00a0Set up talkback command\u00a0Create a talkback command in ThingSpeak Apps. We can then find the talkback ID and talkback API key here:\u00a0\u00a0\u00a0\u00a0\u00a0Upload sketches\u00a0Step 1: \u00a0\u00a0 Select the example from:IDE --> File --> Examples --> Dragino --> IoTServer --> ThingSpeak --> DownstreamClientAnd upload this sketch to the LoRa Node\u00a0Step 2: \u00a0\u00a0 Select the example fromIDE --> File --> Examples --> Dragino --> IoTServer --> ThingSpeak --> DownstreamServerReplace the talkback ID & talkbackAPIKey with your infoAnd upload this sketch to the LoRa Gateway.\u00a0Check Result\u00a0In the talkback APP page, send a command 1 or 0 to trigger the relay. You can see the result from the console.\u00a0\u00a0\u00a0\u00a0\u00a0What is LoRa KiT?\u00a0\u00a0 \u00a0 \u00a0Dragino Lora IoT Kit is designed to facilitate beginners and developers to quickly learn LoRa and IoT technology. It help users to turn the idea into a practical application and make the Internet of Things a reality. It is easy to program, create and connect your things everywhere. A number of telecom operators are currently rolling out networks, but because LoRa operates in the open spectrum you can also set up your own network. The LoRa IoT kit will show how to build LoRa network, and how to use the network to send data from a LoRa sensor node to the cloud server. When used as a private LoRa network, the LoRa gateway will connect your other LoRa nodes up to 5km however expect up to 10km range (when in line of sight) when connecting your LoRa node to a LoRa gateway!\u00a0\u00a0\u00a0\u00a0\u00a0Support us!\u00a0For the past months we've worked hard to get the LoRa IoT Kit to the final stages of development. We have got some users to start using LoRa IoT Kit.To make the final step and start mass-production, we are rasing funds via a Indiegogo campaign,we need your help!!! If you back us, you will speed up the LoRa IoT Kit production and receive one of it in 01/2017, but you'll also receive one yourself in 03/2017. So to start to build your own LoRa Network and examine the IoT technology, we are trying to provide a full solution to connect LoRa to different cloud server there\u2019s nothing like what Dragino LoRa IoT Kit can provide.The link of the Dragino LoRa KiT campaign is:https://www.indiegogo.com/projects/lora-kit-for-iot-applications/x/15237796#/Please help us to promote this LoRa Kit,and let more people know the LoRa wireless technology !Thank you!", "num_user_post": " 2", "author": "David Guo"}]}, {"url": "https://community.thingspeak.com/forum/arduino/aquaponics-sensor-send-to-thingspeak-what-is-wrong/", "posts": [{"date": "December 4, 2016 - 1:27 am", "content": "Dear all,\u00a0\u00a0I try to post my arduino uno sensor results to thingspeak, and I try differnt options, and cannot figure it out. Any help possible? I might give up on thingspeak.\u00a0\u00a0Geert\u00a0sketch :/* a sketch to make sensors work and let them post to thingspeak (probably)Sensors used: 1 EC conductivity sensor 'el cheapo' pin A0 (A1:GND; A2:5v) DS18B20 water temperature pin D2 2 BMP085 Air pressure and temp in box: pin A4, A5 3 Rain sensor pin A3, D3 4 DHT22 air and humidity pin D6 Sending data: ESP8266 pin D9, D10 D11; Streaming service: ThingspeakRelays: to be implemented\u00a0This sketch is compiled from individual sketches for each part.ElCheapo Arduino EC-PPM/water temperature measurment Parts: -Arduino - Uno/Mega -Standard American two prong plug -1 kohm resistor -DS18B20 Waterproof Temperature SensorSee http://www.MichaelRatcliffe.com/Projects for a Pinout and user guide or consult the Zip you got this code fromwrite to thingspeak, from library example writemultiplevoltages ThingSpeak ( https://www.thingspeak.com ) is an analytic IoT platform service that allows you to aggregate, visualize and analyze live data streams in the cloud.Copyright 2016, The MathWorks, Inc.*///************************** Libraries Needed To Compile The Script [See Read me In Download] ***************//// Both below Library are custom ones [ SEE READ ME In Downloaded Zip If You Dont Know how To install] Use them or add a pull up resistor to the temp probe#include <OneWire.h>#include <DallasTemperature.h>// DHT variables#include 'DHT.h'#define DHTPIN 6 // what digital pin we're connected to#define DHTTYPE DHT22 // DHT 22 (AM2302), AM2321// Connect pin 1 (on the left) of the sensor to +5V// NOTE: If using a board with 3.3V logic like an Arduino Due connect pin 1// to 3.3V instead of 5V!// Connect pin 2 of the sensor to whatever your DHTPIN is// Connect pin 4 (on the right) of the sensor to GROUND// Connect a 10K resistor from pin 2 (data) to pin 1 (power) of the sensor// Initialize DHT sensor.// Note that older versions of this library took an optional third parameter to// tweak the timings for faster processors. This parameter is no longer needed// as the current DHT reading algorithm adjusts itself to work on faster procs.DHT dht(DHTPIN, DHTTYPE);// BMP pressure declare#include <Wire.h>#define BMP085_ADDRESS 0x77 // I2C address of BMP085const unsigned char OSS = 0; // Oversampling Setting// Calibration valuesint ac1;int ac2;int ac3;unsigned int ac4;unsigned int ac5;unsigned int ac6;int b1;int b2;int mb;int mc;int md;// b5 is calculated in bmp085GetTemperature(...), this variable is also used in bmp085GetPressure(...)// so ...Temperature(...) must be called before ...Pressure(...).long b5;short temperature;long pressure;// Use these for altitude conversionsconst float p0 = 101325; // Pressure at sea level (Pa)float altitude;// BMP declare finish// WIFI VARIABLES#include <SoftwareSerial.h>#define SSID 'ESW-Apartment 709'#define PASS 'merlinsbeard'#define DST_IP '184.106.153.149'SoftwareSerial espSerial(10, 11); // RX, TX// reset on pin9 (LOW to reset)//*-- IoT Information// myChannelNumber = 147606; myWriteAPIKey = 'UIAY9F4A7J1KTQ3S';// GET /update?key=IPYZZQG01957FQ42String GET = 'GET /update?key=IPYZZQG01957FQ42';// WiFi variables end//************************* User Defined Variables ********************************************************////##################################################################################//----------- Do not Replace R1 with a resistor lower than 300 ohms ------------//##################################################################################int R1 = 1000;int Ra = 25; //Resistance of powering Pinsint ECPin = A0;int ECGround = A1;int ECPower = A2; // originally A4 is used by air pressure measurement//*********** Converting to ppm [Learn to use EC it is much better**************//// Hana [USA] PPMconverion: 0.5// Eutech [EU] PPMconversion: 0.64//Tranchen [Australia] PPMconversion: 0.7// Why didnt anyone standardise this?float PPMconversion = 0.64;//*************Compensating for temperature ************************************////The value below will change depending on what chemical solution we are measuring//0.019 is generaly considered the standard for plant nutrients [google 'Temperature compensation EC' for more infofloat TemperatureCoef = 0.019; //this changes depending on what chemical we are measuring\u00a0//********************** Cell Constant For Ec Measurements *********************////Mine was around 2.9 with plugs being a standard size they should all be around the same//But If you get bad readings you can use the calibration script and fluid to get a better estimate for Kfloat K = 2.88;\u00a0//************ Temp Probe Related *********************************************//#define ONE_WIRE_BUS 2 // Data wire For Temp Probe is plugged into pin 10 on the Arduino // with me on 2const int TempProbePossitive = 8; //Temp Probe power connected to pin 9 // I don' have that?const int TempProbeNegative = 9; //Temp Probe Negative connected to pin 8 //should I do that?\u00a0//***************************** END Of Recomended User Inputs *****************************************************************//OneWire oneWire(ONE_WIRE_BUS);// Setup a oneWire instance to communicate with any OneWire devicesDallasTemperature sensors(&oneWire);// Pass our oneWire reference to Dallas Temperature.float Temperature = 10;float EC = 0;float EC25 = 0;int ppm = 0;float raw = 0;float Vin = 5;float Vdrop = 0;float Rc = 0;float buffer = 0;/*Arduino Rain Sensor sketch*/int rainsense = 3; // analog sensor input pin 0//int buzzerout= 10; // digital output pin 10 - buzzer outputint countval = 0; // counter value starting from 0 and goes up by 1 every secondvoid bmp085Calibration();boolean connectWiFi();void GetEC();//*********************************Setup - runs Once and sets pins etc ******************************************************//void setup(){ //EC and water temp Serial.begin(9600); pinMode(TempProbeNegative , OUTPUT ); //seting ground pin as output for tmp probe digitalWrite(TempProbeNegative , LOW );//Seting it to ground so it can sink current pinMode(TempProbePossitive , OUTPUT );//ditto but for positive digitalWrite(TempProbePossitive , HIGH ); pinMode(ECPin, INPUT); pinMode(ECPower, OUTPUT); //Setting pin for sourcing current pinMode(ECGround, OUTPUT); //setting pin for sinking current digitalWrite(ECGround, LOW); //We can leave the ground connected permanantly// wifi setup pinMode(10, INPUT); // softserial RX for ESP pinMode(11, OUTPUT); // softserial TX for ESP pinMode(9, OUTPUT); // ESP reset\u00a0espSerial.begin(9600); // for ESP, can't be faster than 19200 for softserial espSerial.setTimeout(2000);// wifi setup enddelay(100);// gives sensor time to settle sensors.begin(); delay(100); //** Adding Digital Pin Resistance to [25 ohm] to the static Resistor *********// // Consule Read-Me for Why, or just accept it as true R1 = (R1 + Ra); // Taking into acount Powering Pin Resitance// Serial.println('ElCheapo Arduino EC-PPM measurments'); //Serial.println('By: Michael Ratcliffe Mike@MichaelRatcliffe.com'); //Serial.println('Free software: you can redistribute it and/or modify it under GNU '); //Serial.println(''); // Serial.println('Make sure Probe and Temp Sensor are in Solution and solution is well mixed'); // Serial.println(''); // Serial.println('Measurments at 5's Second intervals [Dont read Ec morre than once every 5 seconds]:');//rainsensor pinMode(rainsense, INPUT);//BMP pressure Wire.begin(); bmp085Calibration();/* //WIFI debug.begin( _baudrate ); pinMode(9, OUTPUT); //ESP reset sendDebug('AT'); debug.println('AT+RST');// added delay(5000); if (Serial.find('OK')) { Serial.println('RECEIVED: OKData ready to sent!'); connectWiFi(); }*/ //******************************************* End of Setup **********************************************************************//}//************************************* Main Loop - Runs Forever ***************************************************************// //Moved Heavy Work To subroutines so you can call them from main loop without cluttering the main loop void loop() {// ec-watertemp sensor GetEC(); //Calls Code to Go into GetEC() Loop [Below Main Loop] dont call this more that 1/5 hhz [once every five seconds] or you will polarise the water//rainsensorint rainSenseReading = analogRead(rainsense); Serial.print('rain intensity 0 (hard) - 1023 (no rain) : '); Serial.println(rainSenseReading); // serial monitoring message delay(250);// rain sensing value from 0 to 1023. // from heavy rain - no rain. if (countval >= 35) { Serial.print('Heavy rain'); // digitalWrite(buzzerout, HIGH); //raise an alert after x time } //raining for long duration rise buzzer sound // there is no rain then reset the counter value if (rainSenseReading < 350) { countval++; // increment count value } else if (rainSenseReading > 350) { // if not raining // digitalWrite(buzzerout, LOW); // turn off buzzer countval = 0; // reset count to 0 } delay(1000); // finish rainsensor //BMP pressure temperature = bmp085GetTemperature(bmp085ReadUT()); pressure = bmp085GetPressure(bmp085ReadUP()); altitude = (float)44330 * (1 - pow(((float) pressure / p0), 0.190295));Serial.print('Temperature: '); Serial.print(temperature, DEC); Serial.println(' *0.1 deg C'); Serial.print('Pressure: '); Serial.print(pressure, DEC); Serial.println(' Pa'); Serial.print('Altitude: '); Serial.print(altitude, 2); Serial.println(' m'); Serial.println();// BMP finish //dht sensor // get, calculate and print temperature and humity to serial// Reading temperature or humidity takes about 250 milliseconds! // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor) float h = dht.readHumidity(); // Read temperature as Celsius (the default) float t = dht.readTemperature(); // Read temperature as Fahrenheit (isFahrenheit = true) float f = dht.readTemperature(false);// Check if any reads failed and exit early (to try again). if (isnan(h) || isnan(t) || isnan(f)) { Serial.println('Failed to read from DHT sensor!'); return; } Serial.print('Humidity: '); Serial.print(h); Serial.print(' %t'); Serial.print('Temperature: '); Serial.print(t);\u00a0//printing everything PrintReadings(); // Cals Print routine [below main loop]\u00a0// delay from ec // delay(60000);// original is 5000, now 1 minute to bottom loop // SEND DATA OVER WIFI boolean sent=false; for(int i=0;i<7;i++) //try 7 times 20 08 { if(sendData(Temperature, EC25, rainSenseReading, t, h, temperature, pressure)) //perhaps? { sent = true; break; } } if (!sent){ Serial.println(F('failed 7 times to send')); }// delay from ec delay(60000);// original is 5000, now 1 minute  } boolean sendData(int W, int C, int S, int A, int H, int B, int P){ Serial.print(F('reset ESP8266..')); //test if the module is readydigitalWrite(9, LOW); // reset the ESP module delay(100); digitalWrite(9, HIGH); espSerial.println('AT+RST');// espSerial.print('AT+UART_DEF=9600,8,1,0,0'); delay(500);//if(espSerial.find('ready'))//// { //Serial.print(F('module is ready..'));// }// else //{// Serial.println(F('module has no response.')); //return false; //}//connect to the wifi boolean connected=false;for(int i=0;i<7;i++) // 7 times 20 08 { if(connectWiFi()) { connected = true; break; } } if (!connected){ Serial.println(F('tried 7 times to connect, please reset')); return false; } delay(500); //set the single connection mode espSerial.println('AT+CIPMUX=0'); delay(2000); // double delay here 20 08espSerial.flush();String cmd; cmd = 'AT+CIPSTART='TCP',''; cmd += DST_IP; cmd += '',80'; espSerial.println(cmd);Serial.println(cmd);delay(2000); // insert delay here 10/11 if(espSerial.find('Error')) return false;//'&field1=' + W + '&field2=' + C + '&field3=' + S + '&field4=' + A + '&field5=' + H + '&field6=' + B + '&field7=' + P+ ''String action ; action = 'GET /update?key=IPYZZQG01957FQ42'; //int W, int C, int S, int A, int H, int B, int P //action += '&field1='; //'&field2='+ C + '&field3=' + S +'&field4=' + A +'&field5='+ H + '&field6=' + B +'&field7=' + P +''; action += '&field1='; action += W; action += '&field2='; action += C; action += '&field3='; action += S; action += '&field4='; action += A; action += '&field5='; action += H;action += '&field6='; action += B; action += '&field7='; action += P; action += '';\u00a0espSerial.print('AT+CIPSEND=');// espSerial.println('GET /update?key=IPYZZQG01957FQ42&field1=', W,'&field2=', C,'&field3=',S ,'&field4=',A,'&field5=',H ,'&field6=',B,'&field7=', P,'');espSerial.println(action.length());Serial.println(action);//delay(2000); // insert delay here 10/11 if(espSerial.find('>')) { Serial.print('>'); } else { espSerial.println('AT+CIPCLOSE'); Serial.println(F('connect timeout')); return false; }//espSerial.println(action);// Serial.println(action); delay(2000); //tried 5000 instead of 1000 no difference 30 08if (espSerial.find('SEND OK')) { Serial.print(F('send OK..')); } if (espSerial.find('200 OK')) { Serial.println(F(' receive OK!')); return true; } else { return false; } }boolean connectWiFi() { espSerial.println('AT+CWMODE=1'); delay(3000);//increased from 2000 to 3000, no difference String cmd='AT+CWJAP=''; cmd+=SSID; cmd+='',''; cmd+=PASS; cmd+=''';// Serial.println(cmd); espSerial.println(cmd); delay(5000);//increased from 5000 to 10000 20 08if(espSerial.find('OK')) { Serial.print(F('connected to wifi..')); return true; } else { Serial.println(F('cannot connect to wifi')); return false; }}/* // Thingspeak send String wtemp = String(Temperature); // water temp turn integer to string String cond = String(EC25); // conductivity turn integer to string String splash = String(rainSenseReading); // splash turn integer to string String atemp = String(t); // air temp turn integer to string String hum = String(h); // humidity turn integer to string String btemp = String(temperature); // box temp turn integer to string String pres = String(pressure); // press turn integer to string updateTS(wtemp, cond, splash, atemp, hum, btemp, pres); };*/ //************************************** End Of Main Loop **********************************************************************//\u00a0 //************ This Loop Is called From Main Loop************************// void GetEC() { //*********Reading Temperature Of Solution *******************// sensors.requestTemperatures();// Send the command to get temperatures Temperature = sensors.getTempCByIndex(0); //Stores Value in Variable\u00a0 //************Estimates Resistance of Liquid ****************// digitalWrite(ECPower, HIGH); raw = analogRead(ECPin); raw = analogRead(ECPin); // This is not a mistake, First reading will be low beause if charged a capacitor digitalWrite(ECPower, LOW);\u00a0 //***************** Converts to EC **************************// Vdrop = (Vin * raw) / 1024.0; Rc = (Vdrop * R1) / (Vin - Vdrop); Rc = Rc - Ra; //acounting for Digital Pin Resitance EC = 1000 / (Rc * K); //*************Compensating For Temperaure********************// EC25 = EC / (1 + TemperatureCoef * (Temperature - 25.0)); ppm = (EC25) * (PPMconversion * 1000); ; } //************************** End OF EC Function ***************************//\u00a0 //***This Loop Is called From Main Loop- Prints to serial usefull info ***// void PrintReadings() { Serial.print('Rc: '); Serial.print(Rc); Serial.print(' EC: '); Serial.print(EC25); Serial.print(' Siemens '); Serial.print(ppm); Serial.print(' ppm '); Serial.print(Temperature); Serial.println(' *C '); /* //********** Usued for Debugging ************ Serial.print('Vdrop: '); Serial.println(Vdrop); Serial.print('Rc: '); Serial.println(Rc); Serial.print(EC); Serial.println('Siemens'); //********** end of Debugging Prints ********* */ }; /* // updateTS(wtemp, cond, splash, atemp, hum, btemp, pres); void updateTS(String W, String C , String S, String A, String H , String B, String P) { // ESP8266 Client String cmd = 'AT+CIPSTART='TCP','';// Setup TCP connection cmd += IP; cmd += '',80'; sendDebug(cmd); debug.println(cmd);// added delay(2000); if ( Serial.find( 'Error' ) ) { debug.print( 'RECEIVED: ErrorExit1' ); return; }cmd = GET + '&field1=' + W + '&field2=' + C + '&field3=' + S + '&field4=' + A + '&field5=' + H + '&field6=' + B + '&field7=' + P+ ''; Serial.print( 'AT+CIPSEND=' ); Serial.println( cmd.length() ); if (Serial.find( '>' ) ) { debug.print('>'); debug.print(cmd); Serial.print(cmd); } else { sendDebug( 'AT+CIPCLOSE' );//close TCP connection } if ( Serial.find('OK') ) { debug.println( 'RECEIVED: OK' ); } else { debug.println( 'RECEIVED: ErrorExit2' ); } }void sendDebug(String cmd) { debug.print('SEND: '); debug.println(cmd); Serial.println(cmd); }/* boolean connectWiFi() { Serial.print(F('reset ESP8266..')); //test if the module is readydigitalWrite(9, LOW); // reset the ESP module delay(100); digitalWrite(9, HIGH); debug.println('AT+RST'); delay(500); Serial.println('AT+CWMODE=1');//WiFi STA mode - if '3' it is both client and AP delay(2000); //Connect to Router with AT+CWJAP='SSID','Password'; // Check if connected with AT+CWJAP? String cmd = 'AT+CWJAP=''; // Join accespoint cmd += SSID; cmd += '',''; cmd += PASS; cmd += '''; sendDebug(cmd); delay(5000); if (Serial.find('OK')) { Serial.println('RECEIVED: OK'); return true; } else { Serial.println('RECEIVED: Error'); return false; }cmd = 'AT+CIPMUX=0';// Set Single connection sendDebug( cmd ); if ( Serial.find( 'Error') ) { debug.print( 'RECEIVED: Error' ); return false; } };\u00a0*/ // Stores all of the bmp085's calibration values into global variables // Calibration values are required to calculate temp and pressure // This function should be called at the beginning of the program void bmp085Calibration() { ac1 = bmp085ReadInt(0xAA); ac2 = bmp085ReadInt(0xAC); ac3 = bmp085ReadInt(0xAE); ac4 = bmp085ReadInt(0xB0); ac5 = bmp085ReadInt(0xB2); ac6 = bmp085ReadInt(0xB4); b1 = bmp085ReadInt(0xB6); b2 = bmp085ReadInt(0xB8); mb = bmp085ReadInt(0xBA); mc = bmp085ReadInt(0xBC); md = bmp085ReadInt(0xBE); }// Calculate temperature given ut. // Value returned will be in units of 0.1 deg C short bmp085GetTemperature(unsigned int ut) { long x1, x2;x1 = (((long)ut - (long)ac6) * (long)ac5) >> 15; x2 = ((long)mc << 11) / (x1 + md); b5 = x1 + x2;return ((b5 + 8) >> 4); }// Calculate pressure given up // calibration values must be known // b5 is also required so bmp085GetTemperature(...) must be called first. // Value returned will be pressure in units of Pa. long bmp085GetPressure(unsigned long up) { long x1, x2, x3, b3, b6, p; unsigned long b4, b7;b6 = b5 - 4000; // Calculate B3 x1 = (b2 * (b6 * b6) >> 12) >> 11; x2 = (ac2 * b6) >> 11; x3 = x1 + x2; b3 = (((((long)ac1) * 4 + x3) << OSS) + 2) >> 2;// Calculate B4 x1 = (ac3 * b6) >> 13; x2 = (b1 * ((b6 * b6) >> 12)) >> 16; x3 = ((x1 + x2) + 2) >> 2; b4 = (ac4 * (unsigned long)(x3 + 32768)) >> 15;b7 = ((unsigned long)(up - b3) * (50000 >> OSS)); if (b7 < 0x80000000) p = (b7 << 1) / b4; else p = (b7 / b4) << 1;x1 = (p >> 8) * (p >> 8); x1 = (x1 * 3038) >> 16; x2 = (-7357 * p) >> 16; p += (x1 + x2 + 3791) >> 4;return p; }// Read 1 byte from the BMP085 at 'address' char bmp085Read(unsigned char address) { unsigned char data;Wire.beginTransmission(BMP085_ADDRESS); Wire.write(address); Wire.endTransmission();Wire.requestFrom(BMP085_ADDRESS, 1); while (!Wire.available()) ;return Wire.read(); }// Read 2 bytes from the BMP085 // First byte will be from 'address' // Second byte will be from 'address'+1 int bmp085ReadInt(unsigned char address) { unsigned char msb, lsb;Wire.beginTransmission(BMP085_ADDRESS); Wire.write(address); Wire.endTransmission();Wire.requestFrom(BMP085_ADDRESS, 2); while (Wire.available() < 2) ; msb = Wire.read(); lsb = Wire.read();return (int) msb << 8 | lsb; }// Read the uncompensated temperature value unsigned int bmp085ReadUT() { unsigned int ut;// Write 0x2E into Register 0xF4 // This requests a temperature reading Wire.beginTransmission(BMP085_ADDRESS); Wire.write(0xF4); Wire.write(0x2E); Wire.endTransmission();// Wait at least 4.5ms delay(5);// Read two bytes from registers 0xF6 and 0xF7 ut = bmp085ReadInt(0xF6); return ut; }// Read the uncompensated pressure value unsigned long bmp085ReadUP() { unsigned char msb, lsb, xlsb; unsigned long up = 0;// Write 0x34+(OSS<<6) into register 0xF4 // Request a pressure reading w/ oversampling setting Wire.beginTransmission(BMP085_ADDRESS); Wire.write(0xF4); Wire.write(0x34 + (OSS << 6)); Wire.endTransmission();// Wait for conversion, delay time dependent on OSS delay(2 + (3 << OSS));// Read register 0xF6 (MSB), 0xF7 (LSB), and 0xF8 (XLSB) Wire.beginTransmission(BMP085_ADDRESS); Wire.write(0xF6); Wire.endTransmission(); Wire.requestFrom(BMP085_ADDRESS, 3);// Wait for data to become available while (Wire.available() < 3) ; msb = Wire.read(); lsb = Wire.read(); xlsb = Wire.read();up = (((unsigned long) msb << 16) | ((unsigned long) lsb << 8) | (unsigned long) xlsb) >> (8 - OSS);return up; }", "num_user_post": " 3", "author": "Geert"}, {"date": "December 4, 2016 - 6:51 pm", "content": "Geert,Have you tried going through the tutorial here: http://community.thingspeak.com/tutorials/arduino/send-data-to-thingspeak-with-arduino/I would recommend starting with one of the\u00a0simpler examples in the ThingSpeak library. See tutorial here: http://community.thingspeak.com/2015/10/official-thingspeak-library-for-arduino-and-particle/Once you are able to get one of the simple examples working with your Arduino,\u00a0you will\u00a0be able to build your project using ThingSpeak.", "num_user_post": " 225", "author": "Vinod"}, {"date": "December 5, 2016 - 9:35 am", "content": "For my setup, an arduino UNO with ESP, these sketches don't compile.\u00a0I tried that for a long time, without success, without getting any further.\u00a0Moreover, it seems nobody with arduino uno and wifi seems to use these examples nor\u00a0the thingspeak library to build on (based on different googles). \u00a0Instead they try to post with GET.\u00a0With the above only the posting itself just doeas not happen.\u00a0No help in the tutorial, nor in the examples, only a week of lost time.\u00a0\u00a0Geert", "num_user_post": " 3", "author": "Geert"}, {"date": "December 5, 2016 - 7:42 pm", "content": "PS, honestly, a tutorial explains things, not just gives a list of\u00a0the sketches, more confusing than solving.Splitting the examples by architecture\u00a0instead of having sketches existing mostly of routines selecting the hardware without any real clarity what architecture you talk about would definitely help. I suspect the one including the esp is actually only an esp, not arduino\u00a0uno with esp.\u00a0Geert", "num_user_post": " 3", "author": "Geert"}]}, {"url": "https://community.thingspeak.com/forum/arduino/unable-to-update-more-than-4-fields-of-data-on-thinkspeak-with-sim900a-and-arduino/", "posts": [{"date": "November 20, 2016 - 2:39 am", "content": "Hi Folks,I have connected SIM900A module with Arduino MEGA and sending some Temperature and other data to my Think Speak Channels, but I am facing problem when I was trying to send data to all 8 fields in one Think speak call. It sends 1 entry to all \u00a08 fields just stuck \u00a0 at AT+CIPSEND gives SEND OK and stops\u00a0, Also even if I am sending data of 4 fields with increase in data size still facing the same problem.\u00a0I have check with TCP configurations on SIM900A \u00a0seems no issues.//Transparent or non-transparent IP conenction modeAT+CIPMODE?+CIPMODE: 0OKTCP conenction is configured for transparent mode//TCP transfer configuration settingsAT+CIPCCFG?+CIPCCFG: 5,2,1024,1OKTCP transfer configuration:Number of retries->5WaitTime->2SendSize->1024Escape Sequence->1HTTP configuration parameters:\u00a0Is there any limitations on Think Speak for uploading all 8 fields in one GET request\u00a0 or any chance of having issues with my SIM Card operator .please\u00a0let me know if any one has face the same issue. I have to update all 8 fields in one GET request only.\u00a0ThanksVikas", "num_user_post": " 1", "author": "vksgaikwad3"}, {"date": "November 29, 2016 - 2:36 pm", "content": "There is no limitation on the api.thingspeak.com side to updating all 8 fields at once.I don't have a SIM900A module to test with, but I was just able to test updating all 8 fields with a Mega and WiFi-101 shield using our library available on GitHub.This issue has come up once or twice before with other hardware configuration. \u00a0In the past the problem was that the TCP buffer wasn't large enough to hold the entire outgoing message when all 8 fields were being updated. \u00a0\u00a0", "num_user_post": " 34", "author": "JasonW"}]}, {"url": "https://community.thingspeak.com/forum/arduino/cant-upload-serially-recieved-data-to-thingspeak/", "posts": [{"date": "November 20, 2016 - 12:41 pm", "content": "hello guys...!I'm trying to upload the serially received data from aurdino to esp8266 and display it on thingspeak. Data is available on serially(COM port) but not uploading to thingspeak would you please help me here's my code:#ifdef SPARK \u00a0 #include 'ThingSpeak/ThingSpeak.h' #else \u00a0 #include 'ThingSpeak.h' #endif\u00a0#ifdef ARDUINO_ARCH_ESP8266 \u00a0 #include \u00a0 #include \u00a0 SoftwareSerial mySerial(9, 10); // RX, TX \u00a0 char ssid[] = 'myssid';\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u00a0 your network SSID (name) \u00a0 char pass[] = 'mypasscode';\u00a0\u00a0 // your network password \u00a0 int status = WL_IDLE_STATUS; \u00a0 WiFiClient\u00a0 client; \u00a0#endif unsigned long myChannelNumber = xxxxxx; //instead of x their is my channel no. const char * myWriteAPIKey = 'xxxxxxxxxxx'; //instead of x their is my write api key. const int updateThingSpeakInterval = 20 * 1000; // 20 second interval at which to update ThingSpeak //long lastConnectionTime = 0; // Variable Setup //boolean lastConnected = false; void setup() { \u00a0 Serial.begin(9600); \u00a0 WiFi.begin(ssid, pass); \u00a0 Serial.print('Connected to '); \u00a0 Serial.println(ssid); \u00a0 Serial.print('IP address: '); \u00a0 Serial.println(WiFi.localIP()); \u00a0 delay(500); \u00a0 ThingSpeak.begin(client);// put your setup code here, to run once: }void loop() { \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // float sensorValue; \u00a0\u00a0 while (mySerial.available()>0) \u00a0 { \u00a0\u00a0\u00a0\u00a0\u00a0 int sensorValue = mySerial.read(); \u00a0\u00a0\u00a0\u00a0\u00a0 ThingSpeak.setField(1,sensorValue); \u00a0\u00a0\u00a0\u00a0\u00a0 ThingSpeak.setField(2,mySerial.read()); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u00a0\u00a0 int myValue = sensorValue(sensorValue.toInt); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // int sensorValue = 10; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(15000); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Serial.print('Sensor data='); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(10); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Serial.println(sensorValue); \u00a0 \u00a0}//this code is to just verify data sending & it works promblem is with above loop... \u00a0float voltage= 0; \u00a0ThingSpeak.writeField(myChannelNumber, 1, voltage, myWriteAPIKey); \u00a0 ThingSpeak.writeField(myChannelNumber, 2, voltage, myWriteAPIKey); \u00a0Serial.print('no_data'); \u00a0delay(1000); }\u00a0", "num_user_post": " 1", "author": "shubham_ingle"}, {"date": "November 20, 2016 - 7:38 pm", "content": "Are you sure you are reading valid values from the serial port?\u00a0 I wonder if you are sending blanks.What happens if you add a 3rd constant value in your read loop to make sure you are sending at least one known value.Egwhile (mySerial.available()>0) \u00a0 { \u00a0\u00a0\u00a0\u00a0\u00a0 int sensorValue = mySerial.read(); \u00a0\u00a0\u00a0\u00a0\u00a0 ThingSpeak.setField(1,sensorValue); \u00a0\u00a0\u00a0\u00a0\u00a0 ThingSpeak.setField(2,mySerial.read());\u00a0\u00a0\u00a0\u00a0\u00a0 ThingSpeak.setField(3,10); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u00a0\u00a0 int myValue = sensorValue(sensorValue.toInt); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // int sensorValue = 10; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(15000); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Serial.print('Sensor data='); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(10); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Serial.println(sensorValue); \u00a0 \u00a0}", "num_user_post": " 271", "author": "rw950431"}]}, {"url": "https://community.thingspeak.com/forum/arduino/no-data-on-graph/", "posts": [{"date": "November 17, 2016 - 6:33 am", "content": "\u00a0Hello,I'm trying to monitor my solar system usage with arduino, i can see that thingspeak is getting data by number on enteries, but there are no dots on graphs?\u00a0What might be wrong, here is the code:\u00a0#include <SPI.h>#include <Ethernet.h>byte mac[] = { 0xD4, 0x28, 0xB2, 0xFF, 0xA0, 0xA1 };char thingSpeakAddress[] = 'api.thingspeak.com';String writeAPIKey = '*************************;const int updateThingSpeakInterval = 20 * 1000;long lastConnectionTime = 0;boolean lastConnected = false;int failedCounter = 0;EthernetClient client;//Amprite lugemine ACS712const int analogIn = A9;int mVperAmp = 66;int RawValue= 0;int ACSoffset = 2500;double Voltage = 0;double Amps = 0;//Voltide lugemine 68k/10k dividerint analogInput = A8;float vout = 0.0;int vin = 0.0;float R1 = 68600.0;float R2 = 10000.0;int value = 0;//Watidint watid = 0;/////////////////////////////////////////////////////////////////void setup(){pinMode(analogInput, INPUT);Serial.begin(9600);startEthernet();}/////////////////////////////////////////////////////////////////void loop(){watid = (Amps * vin);RawValue = analogRead(analogIn);Voltage = (RawValue / 1024.0) * 5000;Amps = ((Voltage - ACSoffset) / mVperAmp);if (Amps<0.1){Amps=0;}value = analogRead(analogInput);vout = (value * 5.0) / 1024.0;vin = vout / (R2/(R1+R2));if (vin<0.09) {vin=0.0;}if (client.available()) { char c = client.read(); Serial.print(c); }// Disconnect from ThingSpeak if (!client.connected() && lastConnected) { Serial.println('...disconnected'); Serial.println(); client.stop(); } // Update ThingSpeak if(!client.connected() && (millis() - lastConnectionTime > updateThingSpeakInterval)) { updateThingSpeak('field1='+vin); updateThingSpeak('field3='+watid); } // Check if Arduino Ethernet needs to be restarted if (failedCounter > 3 ) {startEthernet();} lastConnected = client.connected();}void updateThingSpeak(String tsData){ if (client.connect(thingSpeakAddress, 80)) { client.print('POST /update HTTP/1.1'); client.print('Host: api.thingspeak.com'); client.print('Connection: close'); client.print('X-THINGSPEAKAPIKEY: '+writeAPIKey+''); client.print('Content-Type: application/x-www-form-urlencoded'); client.print('Content-Length: '); client.print(tsData.length()); client.print('');client.print(tsData); lastConnectionTime = millis(); if (client.connected()) { Serial.println('Connecting to ThingSpeak...'); Serial.println(); failedCounter = 0; } else { failedCounter++; Serial.println('Connection to ThingSpeak failed ('+String(failedCounter, DEC)+')'); Serial.println(); } } else { failedCounter++; Serial.println('Connection to ThingSpeak Failed ('+String(failedCounter, DEC)+')'); Serial.println(); lastConnectionTime = millis(); }}void startEthernet(){ client.stop();Serial.println('Connecting Arduino to network...'); Serial.println();delay(1000); // Connect to network amd obtain an IP address using DHCP if (Ethernet.begin(mac) == 0) { Serial.println('DHCP Failed, reset Arduino to try again'); Serial.println(); } else { Serial.println('Arduino connected to network using DHCP'); Serial.println(); } delay(1000);}", "num_user_post": " 1", "author": "SolarEst"}, {"date": "November 18, 2016 - 10:16 am", "content": "What is your channel number?\u00a0", "num_user_post": " 225", "author": "Vinod"}]}, {"url": "https://community.thingspeak.com/forum/arduino/implementing-aes-in-arduino/", "posts": [{"date": "November 15, 2016 - 5:08 am", "content": "Hi ,\u00a0 I would like to implement AES algorithm in C language on Arduino and I want to see the performance of the Arduino board in thingspeak website by means of time and speed. Let me know the code and the proceding.", "num_user_post": " 1", "author": "prabhu702"}]}, {"url": "https://community.thingspeak.com/forum/arduino/channel-not-updating/", "posts": [{"date": "November 7, 2016 - 7:11 pm", "content": "Arduino Uno and wifi shield sending temp and humidity data to thingspeak channel which is not updating. According to serial, everything is connected correctly. Occasionally (minimum 6 hours) one data point gets plottedAny help would be appreciated and any additional info requested shall be forwarded,Thanks in advance", "num_user_post": " 1", "author": "Oscarb"}]}, {"url": "https://community.thingspeak.com/forum/arduino/how-to-read-the-digital-pin/", "posts": [{"date": "October 5, 2016 - 6:56 am", "content": "Hi Guys,\u00a0I have the capacitive type Proximity sensor that sensor operates at 12volts and output only NO and NC (digital Output ). How to send the Thinkspeak Fields... Already I send the temprature data pressure data fileds using Arduino Uno .... Please guide me\u00a0", "num_user_post": " 2", "author": "Karthikraja Nagendran"}, {"date": "October 21, 2016 - 1:06 pm", "content": "You can directly send the states 'NO' and 'NC' to the ThingSpeak channel field as they are. ThingSpeak fields accept non-numeric entries too, however you may see that the field visualization does not update. To see the field value you can send a GET request to get the field value as shown here: Get a Channel Field Feed.Alternatively, you can encode these two states as either 0 and 1 and send the numeric value to the ThingSpeak field, so that now you can see how the field visualization updates between these two states.\u00a0", "num_user_post": " 12", "author": "jvasudev"}]}, {"url": "https://community.thingspeak.com/forum/arduino/thingspeak-communication-library-for-arduino/", "posts": [{"date": "August 22, 2015 - 3:44 pm", "content": "We've created a Arduino library to connect your Arduino to ThingSpeak.  You can set up the new ThingSpeak Communication Library for Arduino in about 60 seconds from within the Arduino IDE, and try out the examples right away!  You can read and write with just 1 line of code!See the 60 second video: Send us your feedback!-Rob", "num_user_post": " 47", "author": "Rob Purser"}, {"date": "August 28, 2015 - 8:49 am", "content": "Hello Rob!Great that there is a Library for Arduino that connect to ThingSpeak! But when I try to add the library in 'manage library' I can't find ThingSpeak  when  I use the filter?  I follow every step in the video but still nothing.. Will try again later!Best regardsMattias", "num_user_post": " 10", "author": "mdahlb"}, {"date": "August 28, 2015 - 12:22 pm", "content": "I've found that sometimes the Arduino IDE caches this info, and then doesn't always update.  Assuming you're using windows, if you go to the AppData/Arduino15 directory, there's a file called library_index.json.  Quit the Arduino IDE, delete that file, and start it up again, and you should be all set.On my computer, this file is at:C:UserspurserAppDataRoamingArduino15-Rob", "num_user_post": " 47", "author": "Rob Purser"}, {"date": "August 30, 2015 - 2:57 pm", "content": "Thank you for your reply! I will check this tomorrow and get back to you regarding the library! Thank you very much! =))RegardsMattias, Sweden", "num_user_post": " 10", "author": "mdahlb"}, {"date": "September 10, 2015 - 8:20 am", "content": "Hello again!I actually haven't had any success with the ThingSpeak library for Arduino yet. I have installed the library and trying the 'WriteVoltage' example. I'm using an Arduino Uno R3 with a Wifi Shield. I started by  'uncomment the line below' in order to use the Wifi Shield. I have checked the ssid and password and the Arduino connects to my network. The channelnumber and writeAPIkey is correct and I even tried to change between 'public channel' and 'private channel' in ThingSpeak but without any succes. I have attached a 3 V to A0 but there is no reaction at my ThingSpeak Channel. I can update the channel by a HTTP Post request but not from my Arduino.Any suggestions? Best RegardsMattias", "num_user_post": " 10", "author": "mdahlb"}, {"date": "September 10, 2015 - 9:42 am", "content": "Mattias,The 'WriteVoltage' example is hard coded to read analog input from pin 0. See line 89:https://github.com/mathworks/thingspeak-arduino/blob/master/examples/WriteVoltage/WriteVoltage.ino#L89You can add a print statement after this line to determine if the sensor value is being read correctly.", "num_user_post": " 4", "author": "hans"}, {"date": "September 10, 2015 - 11:48 am", "content": "Have you gotten the standard wi-fi shield examples working?  I have found that I had to get them working, first, and I found I had to upgrade the firmware on the wi-fi shield as well.  To say the least, my experience with it has been mixed.-Rob", "num_user_post": " 47", "author": "Rob Purser"}, {"date": "September 30, 2015 - 4:43 am", "content": "The problem is solved! Thanks for the help! I updated the firmware for the Wifi shield and now it works perfectly! The Library is great, just one line of code to update the ThingSpeak channel! Perfect! =)", "num_user_post": " 10", "author": "mdahlb"}, {"date": "October 10, 2015 - 11:27 am", "content": "Is there support for writing to the Status field?  I had a quick look through the library/tech reference but didn't see any mention.Brad", "num_user_post": " 9", "author": "AYAduino"}, {"date": "October 10, 2015 - 7:32 pm", "content": "Hi Brad,There's no direct support for the status field, but now that you've asked for it, I'll work on that.  For now, you can use the 'writeRaw'function to write fields that aren't directly supported.-Rob", "num_user_post": " 47", "author": "Rob Purser"}, {"date": "October 13, 2015 - 8:19 pm", "content": "Thanks Rob!", "num_user_post": " 9", "author": "AYAduino"}, {"date": "November 5, 2015 - 10:46 am", "content": "I am the new user with the Arduino and want to learn more and more about it.Can you please tell me something more about this library?I want to know which type of library is it and which type of data type and keywords it contains?Also is it compatible with all the Arduino hardware?", "num_user_post": " 1", "author": "JolynLaub"}, {"date": "November 9, 2015 - 1:44 pm", "content": "Rob,I am interested in using thingspeak and twitter to send me a tweet when a condition changes (Trigger a reaction-Turn off that Humidifier! It's above 60). I have been trying to follow along with the community ThingTweet here;http://community.thingspeak.com/tutorials/arduino/update-twitter-with-thingtweet-and-arduino-ethernet-shield/I downloaded the code here;https://github.com/iobridge/ThingSpeak-Arduino-Examples/blob/master/Ethernet/Arduino_to_ThingTweet.inoand replaced String thingtweetAPIKey = 'XXXMX2WYYR0EV68M'; with the API key that was generated when I linked my twitter account to thingspeak. I have also added the thingspeak library to the sketch, #include The sketch compiles and loads. However when I open the serial monitor I seeConnecting Arduino to network...Arduino connected to network using DHCPConnecting to ThingSpeak...and then that's it. According to the sketch I would expect to see that the connection failed. No matter what I have tried, I get the same results! Possibly you could offer some insight? I am using an arduino mega 2560 r3, with an arduino PoE ether shield (although I am not using a PoE port) using Arduino 1.6.5. I am able to connect to the web with a different sketch using Temboo and the same hardware and am able to send myself an email (via gmail). Any help you can provide would be appreciated.SincerelyBrian", "num_user_post": " 1", "author": "mpo881"}, {"date": "November 10, 2015 - 1:33 pm", "content": "mpo881,The 'ThingSpeak and MATLAB Tutorial' Documentation section covers a similar workflow to what you have described. The tutorial covers how to create a Channel, how to write data to the Channel, how to analyze the Channel data using MATLAB and how to perform actions when data conditions are matched. From the description, it appears that data from the Arduino is being sent to ThingSpeak. If so, you can skip to the 'Act' section of the tutorial which 'shows how to send a tweet when your dew point data exceeds 60\u00b0F using ThingTweet and React apps.'https://thingspeak.com/docs/tutorials#actTo summarize the major points:1. Attach Twitter Account using the ThingTweet app2. Create a React app with the appropriate condition and the action 'ThingTweet' with the message to tweet.", "num_user_post": " 4", "author": "hans"}, {"date": "December 28, 2015 - 8:07 am", "content": "Hi all,Version 1.1.0 of these libraries now supports ESP8226 devices, the Particle Electron (coming soon!).You can use these libraries directly from within the Arduino and Particle IDEs.All the best,-Rob", "num_user_post": " 47", "author": "Rob Purser"}, {"date": "January 23, 2016 - 11:19 am", "content": "hello esp8266 real name Module", "num_user_post": " 8", "author": "homerruma"}, {"date": "February 3, 2016 - 10:02 am", "content": "Hi, I couldn't find information what pins are defined by your library for RX and TX pins of ESP8266? I am using ESP8266 breakout (ESP-01).", "num_user_post": " 1", "author": "pljevljak"}, {"date": "February 24, 2016 - 11:43 pm", "content": "As a new user I need help in finding an appropriate Example for Aurdino with an Ethernet Shield. My intended application is to use ThingSpeak to log the exact time and date of pulses that are created by my water flow rate sensor. Each pulse from my sensor indicates one gallon of flow. I intend to use the reed switch in the meter to trigger an interrupt in the Aurdino and to have the Sketch write a one digit field representing one gallon of flow to my channel. I assume the exact Time  and Date will be appended to the channels log file. The maximum pulses rate will be 10/minute and up to 400 per day and 15,000/month.  Are there are Sketch examples for Aurdino with Ethernet Shield and Interrupt initiated writes?  Larry", "num_user_post": " 8", "author": "wheato22"}, {"date": "February 25, 2016 - 1:04 am", "content": "Which ethernet shield?Also you will find that Thingspeak has a hard limit of 15 seconds between channel updates (max 4/minute) so you may need to rethink your design slightly.   Count your pulses then send the count to thingspeak every minute or so.", "num_user_post": " 271", "author": "rw950431"}, {"date": "March 12, 2016 - 9:37 pm", "content": "Hi I've had an early developer edition Due+Ethernet/wiznet shield running connected to xively for a couple of years and decide to switch to thingspeakSeems like it would be wired Ethernet shield and be transparent to the upper layer.I tried the example first, and I wonder if anybody can shed some light on the errorArduino: 1.6.8 (Windows 8.1), Board: 'Arduino Due (Programming Port)'WARNING: library ThingSpeak claims to run on [avr architecture(s) and may be incompatible with your current board which runs on esp8266] architecture(s).In file included from C:..DocumentsArduinolibrariesThingSpeakexamplesReadWeatherStationReadWeatherStation.ino:19:0:C:..DocumentsArduinolibrariesThingSpeaksrc/ThingSpeak.h:86:8: error: #error Only Arduino Yun, Uno/Mega/Due with either Wired or wi-fi Ethernet shield, ESP8266, and Spark Core/Photon/Electron are supported.       #error Only Arduino Yun, Uno/Mega/Due with either Wired or wi-fi Ethernet shield, ESP8266, and Spark Core/Photon/Electron are supported.        ^", "num_user_post": " 3", "author": "neilh"}]}]}