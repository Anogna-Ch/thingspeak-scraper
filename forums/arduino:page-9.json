{"url": "https://community.thingspeak.com/forum/arduino/page-9/", "threads": [{"url": "https://community.thingspeak.com/forum/arduino/posting-from-arduino-via-xbee-wifi-on-softwareserial/", "posts": [{"date": "July 16, 2015 - 9:51 pm", "content": "Hello everyone.Like many people I've made a distributed sensor network via XB Series 2 modules, sending back to a central base unit Arduino, and now want to send this data to Thingspeak.The base station Arduino has an XBee Wifi module running through SoftwareSerial.The XBee is configured with the appropriate SSID, passphrase, destination ip 184.106.153.149 for thingspeak, port 80, via XCTU.I can't successfully post the update string suggested on the Data Import/Export tab: https://api.thingspeak.com/update?key=xxxMY KEYxxx&field1=0After days and hours of futile searching and different attempts, I haven't found anyone addressing this scenario.  I thought this setup would be quite common.  I came to believe this would be the easy bit.I can paste that update string into the address bar of my browser, and the relevant feed updates - but nothing happens when I send the same text through the XBee Wifi.What is the format for the arduino code?This is what I've tried: WiFiSerial.print('https://api.thingspeak.com/update?key=xxxxxxxxxxx&field1=0') WiFiSerial.print('POST https://api.thingspeak.com/update?key=xxxxxxxxxxx&field1=0') WiFiSerial.print('GET https://api.thingspeak.com/update?key=xxxxxxxxxxx&field1=0') WiFiSerial.print('POST /https://api.thingspeak.com/update?key=xxxxxxxxxxx&field1=0') WiFiSerial.print('GET /https://api.thingspeak.com/update?key=xxxxxxxxxxx&field1=0')I'm obviously missing something fundamental.Thanks in advance.Andy.", "num_user_post": " 2", "author": "Campbell St"}, {"date": "July 17, 2015 - 8:39 am", "content": "Hi,Try using http instead of https.  I think the Arduino may have problems with TLS.lee", "num_user_post": " 457", "author": "lee"}, {"date": "July 18, 2015 - 8:28 am", "content": "Thanks Lee for the prompt attention.I had already tried that, and have done so again, to no avail.I also tried the broken down request, vis.      WiFiSerial.print('POST /update HTTP/1.1');      WiFiSerial.print('Host: api.thingspeak.com');      WiFiSerial.print('Connection: close');      WiFiSerial.print('X-THINGSPEAKAPIKEY: xxxxxxxxxxxxxxx');      WiFiSerial.print('Content-Type: application/x-www-form-urlencoded');      WiFiSerial.print('Content-Length: ');      WiFiSerial.print(tsData.length());      WiFiSerial.print('');      WiFiSerial.print(tsData);Am going through the XB WiFi documentation again, looking for nuggets.  I have the module in AT transparent mode.  Perhaps API will be better...  Perhaps via SPI rather than serial.....  I'll keep trying.I'm still surprised by the total absence of this as a live topic anywhere.  Doesn't anyone else want to get online with a WiFi XBee?Thanks again.Andy.", "num_user_post": " 2", "author": "Campbell St"}, {"date": "October 14, 2015 - 1:28 pm", "content": "Hi Campbell,      Did you succeed in posting to thingspeak via xbee? I have a similar problem. I have tried various combinations of post method but with no success. http://api.thingspeak.com/update?key=XXXXXXXXXXX&field1=12This works on my browser but does not work when sent through an xbee. I tried arduino codes and also serial port emulators. I see the data being sent out to be consistent, yet i keep getting the 400 bad request error. I am pretty sure that I am missing something basic here. Could someone help me out?", "num_user_post": " 2", "author": "Sabeethan"}]}, {"url": "https://community.thingspeak.com/forum/arduino/sketch-sends-data-only-once-and-stops/", "posts": [{"date": "December 1, 2014 - 8:32 am", "content": "Hi everybody,I am currently working with an Intel Edison and I connecting it to ThingSpeak was successful.Sadly it just sends data once. After that the sketch stops working. I hope somebody can help me solving these issues.Sketch:#include#include // Local Network Settingsbyte mac[] = { 0xD4, 0x28, 0xB2, 0xFF, 0xA0, 0xA1 }; // Must be unique on local networkchar ssid[] = '***';     //  your network SSID (name)char pass[] = '***';  // your network passwordint status = WL_IDLE_STATUS;     // the Wifi radio's status// ThingSpeak Settingschar thingSpeakAddress[] = 'api.thingspeak.com';String writeAPIKey = '****';const int updateThingSpeakInterval = 16 * 1000;      // Time interval in milliseconds to update ThingSpeak (number of seconds * 1000 = interval)// Variable Setuplong lastConnectionTime = 0;boolean lastConnected = false;int failedCounter = 0;//sensorsconst int pinTemp = A0;      // pin of temperature sensorfloat temperature;               //temperature gets stored in hereint B=3975;                      // B value of the thermistorfloat resistance;// Initialize Arduino Ethernet ClientWiFiClient client;void setup(){  // Start Serial for debugging on the Serial Monitor  Serial.begin(9600);  // Start Ethernet on Arduino  startWiFi();}void loop(){  // Read value from Analog Input Pin 0  int val = analogRead(pinTemp);                             // get analog temp value  resistance = (float)(1023-val)*10000/val;                    // get resistance  temperature = 1/(log(resistance/10000)/B+1/298.15)-273.15;   // calc temperature  char buffer[10];  String tem = dtostrf(temperature, 5, 1, buffer);  String analogPin0 = (tem);  // Print Update Response to Serial Monitor  if (client.available())  {    char c = client.read();    Serial.print(c);  }  // Disconnect from ThingSpeak  if (!client.connected() && lastConnected)  {    Serial.println('...disconnected');    Serial.println();    client.stop();  }  // Update ThingSpeak  if(!client.connected() && (millis() - lastConnectionTime > updateThingSpeakInterval))  {    updateThingSpeak('field1='+analogPin0);  }  // Check if Arduino Ethernet needs to be restarted  if (failedCounter > 3 ) {startWiFi();}  lastConnected = client.connected();}void updateThingSpeak(String tsData){  if (client.connect(thingSpeakAddress, 80))  {    client.print('POST /update HTTP/1.1');    client.print('Host: api.thingspeak.com');    client.print('Connection: close');    client.print('X-THINGSPEAKAPIKEY: '+writeAPIKey+'');    client.print('Content-Type: application/x-www-form-urlencoded');    client.print('Content-Length: ');    client.print(tsData.length());    client.print('');    client.print(tsData);    lastConnectionTime = millis();    if (client.connected())    {      Serial.println('Connecting to ThingSpeak...');      Serial.println();      failedCounter = 0;    }    else    {      failedCounter++;      Serial.println('Connection to ThingSpeak failed ('+String(failedCounter, DEC)+')');      Serial.println();    }  }  else  {    failedCounter++;    Serial.println('Connection to ThingSpeak Failed ('+String(failedCounter, DEC)+')');    Serial.println();    lastConnectionTime = millis();  }}void startWiFi(){  client.stop();  Serial.println('Connecting Arduino to network...');  Serial.println();    delay(1000);  while (!Serial) {    ; // wait for serial port to connect. Needed for Leonardo only  }  // check for the presence of the shield:  if (WiFi.status() == WL_NO_SHIELD) {    Serial.println('WiFi shield not present');    // don't continue:    while(true);  }   String fv = WiFi.firmwareVersion();  if( fv != '1.1.0' )    Serial.println('Please upgrade the firmware'); // attempt to connect to Wifi network:  while ( status != WL_CONNECTED) {    Serial.print('Attempting to connect to WPA SSID: ');    Serial.println(ssid);    // Connect to WPA/WPA2 network:    status = WiFi.begin(ssid, pass);    // wait 10 seconds for connection:    delay(10000);  }  // you're connected now, so print out the data:  Serial.print('You're connected to the network');  printCurrentNet();  printWifiData();  /*  // Connect to network amd obtain an IP address using DHCP  if (Ethernet.begin(mac) == 0)  {    Serial.println('DHCP Failed, reset Arduino to try again');    Serial.println();  }  else  {    Serial.println('Arduino connected to network using DHCP');    Serial.println();  }  */  delay(1000);}void printWifiData() {  // print your WiFi shield's IP address:  IPAddress ip = WiFi.localIP();    Serial.print('IP Address: ');  Serial.println(ip);  Serial.println(ip);  // print your MAC address:  byte mac[6];  WiFi.macAddress(mac);  Serial.print('MAC address: ');  Serial.print(mac[5],HEX);  Serial.print(':');  Serial.print(mac[4],HEX);  Serial.print(':');  Serial.print(mac[3],HEX);  Serial.print(':');  Serial.print(mac[2],HEX);  Serial.print(':');  Serial.print(mac[1],HEX);  Serial.print(':');  Serial.println(mac[0],HEX);}void printCurrentNet() {  // print the SSID of the network you're attached to:  Serial.print('SSID: ');  Serial.println(WiFi.SSID());  // print the MAC address of the router you're attached to:  byte bssid[6];  WiFi.BSSID(bssid);  Serial.print('BSSID: ');  Serial.print(bssid[5],HEX);  Serial.print(':');  Serial.print(bssid[4],HEX);  Serial.print(':');  Serial.print(bssid[3],HEX);  Serial.print(':');  Serial.print(bssid[2],HEX);  Serial.print(':');  Serial.print(bssid[1],HEX);  Serial.print(':');  Serial.println(bssid[0],HEX);  // print the received signal strength:  long rssi = WiFi.RSSI();  Serial.print('signal strength (RSSI):');  Serial.println(rssi);  // print the encryption type:  byte encryption = WiFi.encryptionType();  Serial.print('Encryption Type:');  Serial.println(encryption,HEX);  Serial.println();}char *dtostrf (double val, signed char width, unsigned char prec, char *sout) {  char fmt[20];  sprintf(fmt, '%%%d.%df', width, prec);  sprintf(sout, fmt, val);  return sout;}______________________________________________________________Serial monitor:Connecting Arduino to network...Attempting to connect to WPA SSID: ***You're connected to the networkSSID: ***BSSID: 8D:3E:F5:11:1A:2signal strength (RSSI):-19Encryption Type:4IP Address: 192.168. 43.207192.168. 43.207MAC address: C5:D8:A8:87:4B:78Connecting to ThingSpeak...HTTP/1.1 200 OKServer: nginx/1.7.5Date: Mon, 01 Dec 2014 13:21:03 GMTContent-Type: text/html; charset=utf-8Transfer-Encoding: chunkedConnection: closeVary: Accept-EncodingStatus: 200 OKX-Frame-Options: ALLOWALLAccess-Control-Allow-Origin: *Access-Control-Allow-Methods: GET, POST, PUT, OPTIONS, DELETE, PATCHAccess-Control-Allow-Headers: origin, content-type, X-Requested-WithAccess-Control-Max-Age: 1800ETag: 'c9f0f895fb98ab9159f51fd0297e236d'Cache-Control: max-age=0, private, must-revalidateSet-Cookie: request_method=POST; path=/X-Request-Id: ffd320e0-f6bc-4013-8e33-bfbe8ec64caf180_______________________________________________________________Thanks for your help!", "num_user_post": " 1", "author": "MrMarv"}, {"date": "July 1, 2015 - 6:37 am", "content": "hey,i have similar problem that thingspeak update data only once.If you done with it,please give me suggestion about it", "num_user_post": " 3", "author": "prabhjeet"}, {"date": "October 11, 2015 - 5:04 pm", "content": "Similar here only getting maybe two sends to thingspeak and then nothing.Hitting the arduino reset starts it again. Been doing that most of the day while playing around looking for the issue.Will post code if requested.UPDATE...Turns out my issue was related to delays and timers in my sketch and too many print statements for debug to the serial monitor.", "num_user_post": " 19", "author": "BSB"}]}, {"url": "https://community.thingspeak.com/forum/arduino/sending-float-data/", "posts": [{"date": "April 3, 2012 - 8:22 am", "content": "Hi,\u00a0How do I send float data using \u00a0updateThingSpeak?\u00a0\u00a0// Read value from Analog Input Pin 0\u00a0 int lightresistor = analogRead(A0);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float vout= lightresistor *0.0048828125;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float lux = 500/(10*((5 - vout)/vout));\u00a0updateThingSpeak('field1='+???????????????);\u00a0Ailton", "num_user_post": " 1", "author": "ailtonfacanha"}, {"date": "April 4, 2012 - 9:31 am", "content": "I found a post on the Arduino forum:\u00a0#include<stdlib.h>dtostrf(FLOAT,WIDTH, PRECISION,BUFFER);\u00a0http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl?num=1205038401(At the bottom of the post, that may help...) \u00a0If this works, please let us know and I will add it the Arduino tutorials.", "num_user_post": " 402", "author": "Hans"}, {"date": "June 27, 2013 - 10:57 am", "content": "Here's how I have done it:        char  buffer2[14]; //make buffer large enough for 7 digits        String tempStr = dtostrf(allSensors[i].averageTemp, 7,2,buffer2);        //'7' digits including '-' negative, decimal and white space. '2' decimal places        tempStr.trim(); //trim whitespace, important so ThingSpeak will treat it as a numberThe std lib.h is included by default.", "num_user_post": " 70", "author": "turgo"}, {"date": "January 25, 2014 - 3:56 pm", "content": "I used this: -updateThingSpeak('field1='+ String(sensors.getTempC(Thermometer),DEC));This takes the float value from my DS18B20 temp sensor.", "num_user_post": " 3", "author": "gadjet"}, {"date": "January 25, 2014 - 4:29 pm", "content": "Thanks, gadjet, thats very cool.  That led me to read all the String object methods:http://arduino.cc/en/Reference/StringObject", "num_user_post": " 70", "author": "turgo"}, {"date": "October 11, 2015 - 1:52 pm", "content": "gadjet said I used this: -updateThingSpeak('field1='+ String(sensors.getTempC(Thermometer),DEC));This takes the float value from my DS18B20 temp sensor.If anyone is around I used a slightly different take to get decimal values to two decimal places.I needed 3 values passed to thingspeak. Most of the code below is just debug stuff but I left it in.The lines that do the work are the FLOAT. Yes I borrowed the code from another thingspeak member and just tweaked it a little as it seemed slightly more modular and easier to add sensor routines see http://community.thingspeak.com/forum/arduino/ds18b20-temp-sensor/   Raklinks post  //Print Temperatures  Serial.print('Getting temperatures...');  sensors.requestTemperatures(); float WT = sensors.getTempC(WaterTemp);   // was int  Serial.print('INVALID: ');  Serial.print(WT);  Serial.print('C: ');  Serial.print(''); float OT = sensors.getTempC(OutsideTemp);  // was int  Serial.print('Room Temp is: ');  Serial.print(OT);  Serial.print('C: ');  Serial.print('');// read value of 5V solar panel 0 to 500 float LT = (analogRead(A0));  // was int  //String AP = String(analogRead(A0), DEC);  Serial.print('light: ');  Serial.print(LT/100); // divide by 100 to get voltage produced  Serial.print('V: ');  Serial.print('');   // Update ThingSpeak  if(!client.connected() && (millis() - lastConnectionTime > updateThingSpeakInterval))  { updateThingSpeak('field1='+String(WT, DEC) +'&field2='+String(OT, DEC)+'&field3='+String(LT, DEC));", "num_user_post": " 19", "author": "BSB"}]}, {"url": "https://community.thingspeak.com/forum/arduino/ds18b20-temp-sensor/", "posts": [{"date": "April 6, 2012 - 1:45 am", "content": "I have been trying to get temperature posted from multiple DS18B20 sensors, with no luck so far.Here is the .pde for the onewire sensor// This Arduino sketch reads DS18B20 '1-Wire' digital// temperature sensors.// Tutorial:// http://www.hacktronics.com/Tutorials/arduino-1-wire-tutorial.html#include <OneWire.h>#include <DallasTemperature.h>// Data wire is plugged into pin 3 on the Arduino#define ONE_WIRE_BUS 3// Setup a oneWire instance to communicate with any OneWire devicesOneWire oneWire(ONE_WIRE_BUS);// Pass our oneWire reference to Dallas Temperature.DallasTemperature sensors(&oneWire);// Assign the addresses of your 1-Wire temp sensors.// See the tutorial on how to obtain these addresses:// http://www.hacktronics.com/Tutorials/arduino-1-wire-address-finder.htmlDeviceAddress ambient = { 0x28, 0x91, 0x9B, 0x49, 0x03, 0x00, 0x00, 0xC8 };DeviceAddress ac = { 0x28, 0x27, 0xB2, 0x49, 0x03, 0x00, 0x00, 0x76 };DeviceAddress seagate = { 0x28, 0x14, 0x9A, 0x49, 0x03, 0x00, 0x00, 0x04 };void setup(void){\u00a0 // start serial port\u00a0 Serial.begin(9600);\u00a0 // Start up the library\u00a0 sensors.begin();\u00a0 // set the resolution to 10 bit (good enough?)\u00a0 sensors.setResolution(ambient, 10);\u00a0 sensors.setResolution(ac, 10);\u00a0 sensors.setResolution(seagate, 10);}void printTemperature(DeviceAddress deviceAddress){\u00a0 float tempC = sensors.getTempC(deviceAddress);\u00a0 if (tempC == -127.00) {\u00a0\u00a0\u00a0 Serial.print('Error getting temperature');\u00a0 } else {\u00a0\u00a0\u00a0 Serial.print('C: ');\u00a0\u00a0\u00a0 Serial.print(tempC);\u00a0\u00a0\u00a0 Serial.print(' F: ');\u00a0\u00a0\u00a0 Serial.print(DallasTemperature::toFahrenheit(tempC));\u00a0 }}void loop(void){\u00a0 delay(2000);\u00a0 Serial.print('Getting temperatures...nr');\u00a0 sensors.requestTemperatures();\u00a0\u00a0 Serial.print('ambient is: ');\u00a0 printTemperature(ambient);\u00a0 Serial.print('nr');\u00a0 Serial.print('ac temp is: ');\u00a0 printTemperature(ac);\u00a0 Serial.print('nr');\u00a0 Serial.print('seagate temperature is: ');\u00a0 printTemperature(seagate);\u00a0 Serial.print('nrnr');}\u00a0I pasted that in the basic thingspeak api like/*\u00a0ThingSpeak Client to Update Channel Feeds\u00a0\u00a0The ThingSpeak Client sketch is designed for the Arduino + Ethernet Shield.\u00a0This sketch updates a channel feed with an analog input reading via the\u00a0ThingSpeak API (http://community.thingspeak.com/documentation/)\u00a0using HTTP POST.\u00a0\u00a0Getting Started with ThingSpeak:\u00a0\u00a0\u00a0\u00a0 * Sign Up for New User Account - https://www.thingspeak.com/users/new\u00a0\u00a0\u00a0 * Create a New Channel by selecting Channels and then Create New Channel\u00a0\u00a0\u00a0 * Enter the Write API Key in this sketch under 'ThingSpeak Settings'\u00a0\u00a0Created: January 25, 2011 by Hans Scharler (http://www.iamshadowlord.com)\u00a0\u00a0Additional Credits: Example sketches from Tom Igoe and David A. Mellis\u00a0*/#include <OneWire.h>#include <DallasTemperature.h>#include <SPI.h>#include <Ethernet.h>// Data wire is plugged into pin 3 on the Arduino#define ONE_WIRE_BUS 3// Setup a oneWire instance to communicate with any OneWire devicesOneWire oneWire(ONE_WIRE_BUS);// Pass our oneWire reference to Dallas Temperature.DallasTemperature sensors(&oneWire);// Assign the addresses of your 1-Wire temp sensors.// See the tutorial on how to obtain these addresses:// http://www.hacktronics.com/Tutorials/arduino-1-wire-address-finder.htmlDeviceAddress ambient = { 0x28, 0x91, 0x9B, 0x49, 0x03, 0x00, 0x00, 0xC8 };DeviceAddress ac = { 0x28, 0x27, 0xB2, 0x49, 0x03, 0x00, 0x00, 0x76 };DeviceAddress seagate = { 0x28, 0x14, 0x9A, 0x49, 0x03, 0x00, 0x00, 0x04 };// Local Network Settingsbyte mac[]\u00a0\u00a0\u00a0\u00a0 = { 0xD4, 0x28, 0xB2, 0xFF, 0xA0, 0xA1 }; // Must be unique on local networkbyte ip[]\u00a0\u00a0\u00a0\u00a0\u00a0 = { 192, 168,\u00a0\u00a0 5,\u00a0 249 };\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Must be unique on local networkbyte gateway[] = { 192, 168,\u00a0\u00a0 5,\u00a0\u00a0 1 };byte subnet[]\u00a0 = { 255, 255, 255,\u00a0\u00a0 0 };// ThingSpeak Settingsbyte server[]\u00a0 = { 184, 106, 153, 149 }; // IP Address for the ThingSpeak APIString writeAPIKey = 'C1SR65D8UOQZZMR8';\u00a0\u00a0\u00a0 // Write API Key for a ThingSpeak Channelconst int updateInterval = 3000;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Time interval in milliseconds to update ThingSpeak\u00a0 \u00a0Client client(server, 80);// Variable Setuplong lastConnectionTime = 0;boolean lastConnected = false;int resetCounter = 0;void setup(){\u00a0 Ethernet.begin(mac, ip, gateway, subnet);\u00a0 Serial.begin(9600);\u00a0\u00a0 // Start up the library\u00a0 sensors.begin();\u00a0 // set the resolution to 10 bit (good enough?)\u00a0 sensors.setResolution(ambient, 10);\u00a0 sensors.setResolution(ac, 10);\u00a0 sensors.setResolution(seagate, 10);\u00a0 delay(1000);}void printTemperature(DeviceAddress deviceAddress){\u00a0 float tempC = sensors.getTempC(deviceAddress);\u00a0 if (tempC == -127.00) {\u00a0\u00a0\u00a0 Serial.print('Error getting temperature');\u00a0 } else {\u00a0\u00a0\u00a0 Serial.print('C: ');\u00a0\u00a0\u00a0 Serial.print(tempC);\u00a0\u00a0\u00a0 Serial.print(' F: ');\u00a0\u00a0\u00a0 Serial.print(DallasTemperature::toFahrenheit(tempC));\u00a0 }}void loop(){\u00a0 sensors.requestTemperatures();\u00a0\u00a0 // Print Update Response to Serial Monitor\u00a0 if (client.available())\u00a0 {\u00a0\u00a0\u00a0 char c = client.read();\u00a0\u00a0\u00a0 Serial.print(c);\u00a0 }\u00a0\u00a0 // Disconnect from ThingSpeak\u00a0 if (!client.connected() && lastConnected)\u00a0 {\u00a0\u00a0\u00a0 Serial.println();\u00a0\u00a0\u00a0 Serial.println('...disconnected.');\u00a0\u00a0\u00a0 Serial.println();\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 client.stop();\u00a0 }\u00a0\u00a0 // Update ThingSpeak\u00a0 if(!client.connected() && (millis() - lastConnectionTime > updateInterval))\u00a0 {\u00a0\u00a0\u00a0 updateThingSpeak('field1'=+String(ambient, DEC));\u00a0 }\u00a0\u00a0 lastConnected = client.connected();}void updateThingSpeak(String tsData){\u00a0 if (client.connect())\u00a0 {\u00a0\u00a0\u00a0 Serial.println('Connected to ThingSpeak...');\u00a0\u00a0\u00a0 Serial.println();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 client.print('POST /update HTTP/1.1n');\u00a0\u00a0\u00a0 client.print('Host: api.thingspeak.comn');\u00a0\u00a0\u00a0 client.print('Connection: closen');\u00a0\u00a0\u00a0 client.print('X-THINGSPEAKAPIKEY: '+writeAPIKey+'n');\u00a0\u00a0\u00a0 client.print('Content-Type: application/x-www-form-urlencodedn');\u00a0\u00a0\u00a0 client.print('Content-Length: ');\u00a0\u00a0\u00a0 client.print(tsData.length());\u00a0\u00a0\u00a0 client.print('nn');\u00a0\u00a0\u00a0 client.print(tsData);\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 lastConnectionTime = millis();\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 resetCounter = 0;\u00a0\u00a0 \u00a0\u00a0 }\u00a0 else\u00a0 {\u00a0\u00a0\u00a0 Serial.println('Connection Failed.');\u00a0 \u00a0\u00a0\u00a0\u00a0 Serial.println();\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 resetCounter++;\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 if (resetCounter >=5 ) {resetEthernetShield();}\u00a0\u00a0\u00a0 lastConnectionTime = millis();\u00a0 }}void resetEthernetShield(){\u00a0 Serial.println('Resetting Ethernet Shield.');\u00a0 \u00a0\u00a0 Serial.println();\u00a0\u00a0 client.stop();\u00a0 delay(1000);\u00a0\u00a0 Ethernet.begin(mac, ip, gateway, subnet);\u00a0 delay(1000);}and i getthings_speak_issues.cpp: In function 'void loop()':things_speak_issues:111: error: call of overloaded 'String(uint8_t [8], int)' is ambiguousC:UsersScottyDesktoparduino-0023hardwarearduinocoresarduino/WString.h:39: note: candidates are: String::String(long unsigned int, int) <near match>C:UsersScottyDesktoparduino-0023hardwarearduinocoresarduino/WString.h:38: note:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 String::String(long int, int) <near match>C:UsersScottyDesktoparduino-0023hardwarearduinocoresarduino/WString.h:37: note:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 String::String(unsigned int, int) <near match>C:UsersScottyDesktoparduino-0023hardwarearduinocoresarduino/WString.h:36: note:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 String::String(int, int) <near match>\u00a0any help would be nice?", "num_user_post": " 1", "author": "scottyratcliffe"}, {"date": "April 17, 2012 - 6:16 pm", "content": "The 'updateThingSpeak' function is expecting a string.\u00a0Based on the error you are getting, the 'String(uint8_t [8], int)' is not converting to a string.The output of the one wire sensor function may not be a DEC, so you can't just convert it to a string like you have it.I hope this points you in the right direction. I do not have any 1-wire experience and was hoping that the forum members had some input for you. What parts did you purchase to do the 1-wire? I might get them so I can replicate this and see what I find.Another idea is that the sketch you are using is for Arduino 22. This might help to:https://github.com/iobridge/ThingSpeak-Arduino-ExamplesLet us know what you find out.", "num_user_post": " 402", "author": "Hans"}, {"date": "June 4, 2012 - 6:22 am", "content": "Hi ScottyI have a couple of DS18B20\u2032s uploading my Solar Hot Water plus outside temps to ThingSpeak via Arduino. Code here:https://sites.google.com/site/aussiepilot/Two%2018b20%20upload%20to%20thingspeak.txt?attredirects=0&d=1External ThingSpeak linkhttps://www.thingspeak.com/channels/909?public=trueAs per Han\u2019s comment, I convert the DS18B20 output to integer value before I upload to ThingSpeak. As I am measuring from 0 Deg C through to 100 deg, I am happy rounding. This makes life easy !As per code link above, to get Water Temp, I useint WT = sensors.getTempC(WaterTemp);Outside Tempint OT = sensors.getTempC(OutsideTemp);Then upload viaupdateThingSpeak(\u201cfield1=\u201d+String(WT, EC)+\u201d&field2=\u201d+String(OT, DEC));You can see charts etc herehttp://klinkfamilyadventures.blogspot.com.au/Hope this helpsRegardsRick", "num_user_post": " 2", "author": "raklink"}, {"date": "June 4, 2012 - 11:53 pm", "content": "Rick,Great project! Thanks for providing your source code and the 'how-to' part.I went ahead and added your project to our blog:http://community.thingspeak.com/2012/06/solar-hot-water-temperature-monitoring-with-arduino-thingspeak/Let me know if you have any other info that you want to add or subtract.Thanks again!Hans", "num_user_post": " 402", "author": "Hans"}, {"date": "June 5, 2012 - 2:41 am", "content": "Hey, no problems Hans.Hopefully it will make it easier for others to get their Temperature/Arduino/Thingspeak projects up and running.\u00a0\u00a0One small change to your blog post.The blog code link you posted is for the small snippet of code to determine the ds18b20 unique address.\u00a0Probably worth changing to the link to the text file with full code listinghttps://sites.google.com/site/aussiepilot/Two%2018b20%20upload%20to%20thingspeak.txt?attredirects=0&d=1\u00a0Thanks again for a great service in regards to ThingSpeak !!!\u00a0Rick", "num_user_post": " 2", "author": "raklink"}, {"date": "June 5, 2012 - 9:51 am", "content": "Updated... Thanks!", "num_user_post": " 402", "author": "Hans"}, {"date": "June 16, 2013 - 1:41 am", "content": "Here is how to convert a float to a string:float temperature = 98.6;char  buffer[12];String tempStr = dtostrf(temperature, 6,2,buffer);", "num_user_post": " 70", "author": "turgo"}, {"date": "October 11, 2015 - 12:11 am", "content": "@ RaklinkIf you are still around just want to thank you for posting link to your code. It was almost what I wanted and needed only a minor tweak to get what i needed out of it.", "num_user_post": " 19", "author": "BSB"}]}, {"url": "https://community.thingspeak.com/forum/arduino/can-arduino-yun-be-used-for-real-time-sensor-data-logging-wirelessly/", "posts": [{"date": "August 12, 2015 - 12:45 pm", "content": "Hi everyone.I wish to do a robotics project where I plan to equip my robot with various sensors like Gas Sensor, Temp Sensor, PIR Sensors and many more. I wish to know whether I can transit my real time sensor data wirelessly and use thingspeak to display online charts. Request advice.....12", "num_user_post": " 1", "author": "abhinay_shukla"}, {"date": "August 13, 2015 - 8:38 am", "content": "Hi,You can transmit your sensor data and display online charts with ThingSpeak, however there is a 15 second rate limit between updates on a per channel basis.lee", "num_user_post": " 457", "author": "lee"}]}, {"url": "https://community.thingspeak.com/forum/arduino/project-arduino-bmp180-dht11-thingspeak/", "posts": [{"date": "August 6, 2015 - 10:58 am", "content": "Hello everyone! I am doing project for course on my faculty. Here is little description:Components for the project:Arduino Mega ADK boardArduino Ethernet shieldDHT11 humidity sensorBMP180 temperature and air pressure sensorThe program should do next. The sensors have to measure the temperature, pressure and humidity of air in the room, every measured data is saved to its variable which would later be updated to ThingSpeak channel. Also, Arduino would take information for outside temperature, pressure and humidity of air from some website with those data for a certain city (Ljubljana), and these data would also be sent to ThingSpeak so we could see and compare graphs for indoor and outdoor data. I wrote 3 codes (one for sensors, one for Ethernet and one for ThingSpeak), and now I have combined them, but I have two error messages, and I need help to get rid of them. Every measured data is saved to its variable. Downloaded data from website is also saved to its variable. Here is code:#include#include#include#include#include #define dht_apin A0 // Analog Pin sensor is connected toAdafruit_BMP085 bmp;dht DHT;float localTemp;float localPress;float localHumid;float FMF;//------------ETHERNET--------------byte mac[] = { 0xD4, 0x28, 0xB2, 0xFF, 0xA0, 0x73 };IPAddress ip(193, 2, 68, 140);// fill in your Domain Name Server address here:IPAddress myDns(1, 1, 1, 1);// initialize the library instance:EthernetClient client;char server[] = 'meteo.fmf.uni-lj.si/';unsigned long lastConnectionTime = 0;const unsigned long postingInterval = 60L * 1000L;//-----------THINGSPEAK---------------byte server1[]  = { 184, 106, 153, 149 }; // IP Address for the ThingSpeak APIString writeAPIKey = '5NK4YXIIHW0KCLT7';const unsigned long updateInterval = 60000;boolean lastConnected = false;void setup() {  Serial.begin(9600);  bmp.begin();  delay(1000); // Delay to let system boot  startEthernetDHCP();  //-------------ETHERNET  while (!Serial) {    ;  }  Ethernet.begin(mac, ip, myDns);}void loop() {  // BMP180 - temperature and pressure measurement  Serial.print('Current Temperature is: '); // temperature  Serial.print(bmp.readTemperature());  Serial.println(' Celsius');  localTemp=bmp.readTemperature();  Serial.print('Current Pressure is: '); // pressure  Serial.print(bmp.readPressure());  Serial.println(' Pa');  localPress=bmp.readPressure();  // DHT11 - humidity measurement  DHT.read11(dht_apin);  Serial.print('Current Humidity is: '); // humidity  Serial.print(DHT.humidity);  Serial.println(' %');  Serial.println(' '); // space between next group measurement  localHumid=DHT.humidity;      delay(60000); // Wait 60 seconds before new measurement  //--------------ETHERNET---------------  if (client.available()) {    char c = client.read();    Serial.write(c);    FMF=client.read();  }  if (millis() - lastConnectionTime > postingInterval) {    httpRequest();  }}// this method makes a HTTP connection to the server:void httpRequest() {  client.stop();  // if there's a successful connection:  if (client.connect(server, 80)) {    Serial.println('connecting...');    // send the HTTP PUT request:    client.println('GET /latest.txt HTTP/1.1');    client.println('Host: http://www.arduino.cc');    client.println('User-Agent: arduino-ethernet');    client.println('Connection: close');    client.println();    // note the time that the connection was made:    lastConnectionTime = millis();  }  else {    // if you couldn't make a connection:    Serial.println('connection failed');  }  //----------THINGSPEAK--------------  if (client.available())  {    char c = client.read();    Serial.print(c);  }  if (!client.connected() && lastConnected)  {    Serial.println('...disconnected.');    client.stop();  }   if(!client.connected() && (millis() - lastConnectionTime > updateInterval))    updateThingSpeak('field1='+localTemp+'&field2='+localPress+'&field3='+localHumid+'&field4='+FMF);     lastConnected = client.connected();}void updateThingSpeak(String tsData){  if (client.connect(server,80))  {    Serial.println('Connected to ThingSpeak...');    Serial.println();    client.print('POST /update HTTP/1.1');    client.print('Host: api.thingspeak.com');    client.print('Connection: close');    client.print('X-THINGSPEAKAPIKEY: ' + writeAPIKey + '');    client.print('Content-Type: application/x-www-form-urlencoded');    client.print('Content-Length: ');    client.print(tsData.length());    client.print('');    client.print(tsData);    lastConnectionTime = millis();  }  else  {    Serial.println('Connection Failed.');    Serial.println();    lastConnectionTime = millis();  }}void startEthernetDHCP(){  while (Ethernet.begin(mac) != 1)  {    Serial.println('Error getting IP address via DHCP, trying again...');    delay(10000);  }  Serial.print('Moj naslov IP: ');  for (byte thisByte = 0; thisByte < 4; thisByte++)    {    Serial.print(Ethernet.localIP()[thisByte], DEC);    Serial.print('.');    }  Serial.println();}Errors:PROGRAM.ino: In function 'void httpRequest()':PROGRAM:131: error: invalid operands of types 'const char [8]' and 'float' to binary 'operator+'invalid operands of types 'const char [8]' and 'float' to binary 'operator+'I already removed one error which was here://----------ETHERNET--------char server[] = 'meteo.fmf.uni-lj.si/';unsigned long lastConnectionTime = 0;const unsigned long postingInterval = 60L * 1000L;//-----------THINGSPEAK---------------byte server[]  = { 184, 106, 153, 149 };I had to change name for one of servers, so I changed byte server[] to byte server1[].Can You help me with other two errors?Thank You all!", "num_user_post": " 1", "author": "Igor_Klc"}]}, {"url": "https://community.thingspeak.com/forum/arduino/arduino-dht22ethercard/", "posts": [{"date": "January 3, 2015 - 1:04 pm", "content": "Just wondering if anyone's worked on this.. I have an ethernet module, a ENC28J60 that uses the ethercard lib, and a DHT22 sensor, which uses Adafruit's DHT lib. I have it all working on my LAN, but have no idea how to upload it to Thingspeak. Anyone already done this, or would be willing to help me write it?", "num_user_post": " 1", "author": "myeeth22"}, {"date": "February 3, 2015 - 2:26 am", "content": "See what was posted on teensy forum :https://forum.pjrc.com/threads/25887-Arduino-code-example-for-ENC28J60-Ethernet-upload-to-ThingspeakNot many persons interested there either. Please report any progress you do. I studied Ethercard, but it's quite complex, only a few people understand how to use it.", "num_user_post": " 9", "author": "tochinet"}, {"date": "February 11, 2015 - 10:44 am", "content": "Have you tried using the UIPEthernet library instead?  I had this working briefly before I switched to a W5100 ethernet solution.  Unfortunately I don't appear to have saved that code & the few snippets I have left aren't ringing any bells but I do know I quickly abandoned the ethercard library in favour of UIPEthernet.  I think it was memory issues that finally drove me to swapping out ENC in favour of the W5100 but again, it's all a bit fuzzy.Brad", "num_user_post": " 9", "author": "AYAduino"}, {"date": "July 31, 2015 - 12:16 pm", "content": "hi ,there is already a program in the arduino software examples with the name of pachubeclient.just modify it a little bit and you are done. you can also see the data in a mobile app. after it has been uploaded in the thingspeak channel.this is the mobile app with alarm featureshttps://www.youtube.com/watch?v=PeeTdZXMWvA", "num_user_post": " 5", "author": "Infinity"}]}, {"url": "https://community.thingspeak.com/forum/arduino/email-for-esp8266/", "posts": [{"date": "June 8, 2015 - 11:52 pm", "content": "All the notes are in the code[code]//Adapted from SurferTim's Ethernet email program by Ty Tower May 2015Register at smtp2go.com --easy. Encode user and password for smtp2go.com in base 64 utf8--go here    'https://www.base64encode.org/'.Put those in the right places in code and change the IP details to yoursPut in where you want to send the email and who it is from.Change the mac address to the one from your ESP8266 module#include//#include const char* ssid = '----------HOME';const char* password = '-------------';// Create an instance of the server// specify the port to listen on as an argumentWiFiServer server(80);WiFiClient client;// this must be unique put yours in herebyte mac[] = { 0x18, 0xFE, 0x34, 0xA1 ,0x5C, 0x44 }; //from ESP8266// change network settings to yoursIPAddress ip( 192, 168, 0, 3 );IPAddress gateway( 192, 168, 0, 1 );IPAddress subnet( 255, 255, 255, 0 );//IPAddress server(?,?,?,?);  // numeric IP for smtpcorp.com (no DNS)char smptcorp[] = 'smtpcorp.com';int port = 2525;void setup(){  Serial.begin(115200);  pinMode(13,OUTPUT);  digitalWrite(13,HIGH);  server.begin();  delay(10000);  Serial.println(F('Ready. Press 'e' to send.'));}void loop(){  byte inChar;  inChar = Serial.read();  if(inChar == 'e')      if(sendEmail()) Serial.println(F('Email sent'));      else Serial.println(F('Email failed'));  } byte sendEmail(){  WiFi.begin(ssid, password);  while (WiFi.status() != WL_CONNECTED) {    delay(500);    Serial.print('.');  }  Serial.println('');  Serial.println('WiFi connected');  Serial.println('IP address: ');  Serial.println(WiFi.localIP());  byte thisByte = 0;  byte respCode;  if(client.connect( smtpcorp,port) == 1) {    Serial.println(F('connected smtp2go'));  } else {    Serial.println(F('connection failed smtp2go'));    return 0;  }  if(!eRcv()) {Serial.println('before ehlo');return 0 ;}  Serial.println(F('Sending ehlo'));// replace 192.168.0.3 with your ESP8266's ip  client.println('EHLO 192.168.0.3');  if(!eRcv()) {Serial.println('ehlo');return 0 ;}  Serial.println(F('Sending auth login'));  client.println('auth login');  if(!eRcv()) {Serial.println('auth');return 0 ;}  Serial.println('Sending User');// Change to your base64 encoded user  client.println('------------------------------------');//  if(!eRcv()) {Serial.println('user');return 0 ;}  Serial.println(F('Sending Password'));// change to your base64 encoded password  client.println('----------------------------------');//  if(!eRcv()) {Serial.println('ehlo');return 0;}// change to your email address (sender)  Serial.println(F('Sending From'));  client.println('MAIL From: ');  if(!eRcv()) {Serial.println('email');return 0 ;}// change to recipient address  Serial.println(F('Sending To'));  client.println('RCPT To: ');  if(!eRcv()) {Serial.println('email');return 0 ;}  Serial.println(F('Sending DATA'));  client.println('DATA');  if(!eRcv()) {Serial.println('email');return 0 ;}  Serial.println(F('Sending email'));// change to recipient address  client.println('To: Ty Tower ');// change to your address  client.println('From: Weather ');  client.println('Subject: ESP8266 email test');  client.println('This is from my ESP8266-12 Module 3!');  client.println('.');  if(!eRcv()) {Serial.println('aftersending');return 0 ;}  Serial.println(F('Sending QUIT')); //Serial.println(F('Sending QUIT'));  client.println('QUIT');  if(!eRcv()) {Serial.println('afterQuit');return 0 ;}  client.stop();  Serial.println(F('disconnected'));  return 1;}byte eRcv(){  byte respCode;  byte thisByte;  int loopCount = 0;  while(!client.available()) {    delay(1);    loopCount++;    // if nothing received for 10 seconds, timeout    if(loopCount > 10000) {      client.stop();      Serial.println(F('10 secTimeout'));      return 0;    }  }  respCode = client.peek();  while(client.available())  {    thisByte = client.read();    Serial.write(thisByte);  }  if(respCode >= '4')  {    efail();    return 0;  }  return 1;}void efail(){  byte thisByte = 0;  int loopCount = 0;  client.println(F('QUIT'));  while(!client.available()) {    delay(1);    loopCount++;    // if nothing received for 10 seconds, timeout    if(loopCount > 10000) {      client.stop();      Serial.println(F('efailTimeout'));      return;    }  }  while(client.available())  {    thisByte = client.read();    Serial.write(thisByte);  }  client.stop();  Serial.println(F('disconnected'));}[/code]", "num_user_post": " 4", "author": "tytower"}]}, {"url": "https://community.thingspeak.com/forum/arduino/beginners-networking-literature-sought/", "posts": [{"date": "June 8, 2015 - 8:11 am", "content": "Having gained some exposure to the subject with tweaking Ps3 settings, and also having dabbled a bit in WEP key auditing with Backtrack, I find that this is not enough knowledge to carry me through my learning curve to successfully build a suitable network for my Arduino project.  I believe I have Googled nearly every possible word combination on Arduino.cc to find what would be the best way for my project to be easily remotely accessed, and for what I want, all leads come here to ThingSpeak, and since this is my first post, 'Hello All!!'My project is simple.  It's just a Freetronics EtherMega (Mega 2650 w/Ethernet) that I soldered my Chronodot (DS3231) RTC to, on pin A2 is a DHT22 climate sensor and pins 30-37 control relays.  The relays actuate in accordance with time or climatic conditions as per my sketch.I want the RTC time, sensor data and relay states sent over the internet to a website.  I also want the website to have clickable buttons to also actuate those relays so the site would need to be the server, rendering the Arduino as client?  Ultimately I want this to connect to a website that I own and control, but I need to learn a bunch more, and aside from finding my way here, I am still having the same problems in locating good descriptive or foundational materials relating to the networking aspect of my project.  To give a bit more background, I am a jack of all trades type, but am relatively new to micro electronics.  I've been learning Arduino stuff for about a year now, and following the circuitry has been relatively easy for me thus far.  Coding I am struggling, but have put together a somewhat functioning sketch that has just one more bug to work out.  I learned a lot, but not yet enough and am hoping for links to explanations of the networking sketch code, the various files that may need to be loaded to the microSD, files that are saved in the website's registry, and how they all communicate back and forth.  I have been avidly researching this topic and have made little headway.Please help a hungry newb take it to the next level.TYIA", "num_user_post": " 1", "author": "sky"}]}, {"url": "https://community.thingspeak.com/forum/arduino/arduino-ethernet-updating-only-once-every-5-minutes/", "posts": [{"date": "May 27, 2015 - 4:31 pm", "content": "Hello!I followed the Thingspeak tutorial for connecting an arduino with Thingspeak, but instead of sending the data every 30 seconds like it says in the code, it's only sending it once every 5 minutes. Is there anything that might be causing that? I'm just using the code from the tutorial.Thanks for the help!", "num_user_post": " 6", "author": "Coolio11"}, {"date": "May 27, 2015 - 7:10 pm", "content": "Nevermind. When I comment out the lines for reading my sensor data, then it's able to connect to Thingspeak and update on time. Something about my sensor data code must be somehow causing the program to act strangely.The strange thing is that it connects successfully to Thingspeak once every 5 minutes, even though there's nothing about a 5-minute interval anywhere in the code.", "num_user_post": " 6", "author": "Coolio11"}, {"date": "May 27, 2015 - 9:01 pm", "content": "It looks like it was related to the DHT11 sensor and code, and it looks like other people on this forum have had similar problems with the DHT11 or DHT22.I tried this alternative code (http://forum.arduino.cc/index.php/topic,155800.0.html) that's supposed to work better for timing, but it still didn't work.", "num_user_post": " 6", "author": "Coolio11"}]}, {"url": "https://community.thingspeak.com/forum/arduino/arduino-with-cc3000-wifi-shield/", "posts": [{"date": "May 16, 2015 - 4:03 pm", "content": "I purchased one of these WiFi shields featuring the CC3000 chip.http://www.ebay.com/itm/CC3000-WiFi-Shield-for-Arduino-15-/381257381022?pt=LH_DefaultDomain_0&hash=item58c4b5f49eAll the tutorials I have found are for the CC3000 Aadafruit WiFi should which uses a different library from this.Has anyone hooked an Arduino up to thingspeak with one of these and save me having to rewrite the sketch here?http://community.thingspeak.com/tutorials/arduino/using-an-arduino-ethernet-shield-to-update-a-thingspeak-channel/", "num_user_post": " 1", "author": "shuntera"}]}, {"url": "https://community.thingspeak.com/forum/arduino/using-yun-with-talkback-and-thinghttp-same-time/", "posts": [{"date": "February 18, 2015 - 12:13 pm", "content": "Example for a Yun Code which has an integrated TalkBack and a Post.With this code you can Switch on a light on PIN13 and measure it with a light sensor on PIN A0.This is a mix of two codes i found here on thingspeak CODE:#include 'Bridge.h'#include 'HttpClient.h'//ThingSpeak TalkBack SettingsString thingSpeakAPI = 'api.thingspeak.com';String talkBackAPIKey = 'XXXXXXXXXXXX';String talkBackID = 'XXXX';const int checkTalkBackInterval = 15 * 1000;    // Time interval in milliseconds to check TalkBack (number of seconds * 1000 = interval)//ThingSpeak Post SettingsString thingSpeakAddress = 'http://api.thingspeak.com/update?';String writeAPIKey = 'key=XXXXXXXXXXXXXXX'; //Enter the write API Key for your ThingSpeak ChannelString tsfield1Name = '&field1=';HttpClient client;// Variable Setuplong lastConnectionTime = 0;int Sensor = A0;int x = 0; //Licht Sensorvoid setup(){  // Setup On-board LED  pinMode(13, OUTPUT);  digitalWrite(13, LOW);  delay(500);  digitalWrite(13, HIGH);  delay(1000);  digitalWrite(13, LOW);  delay(1000);  digitalWrite(13, HIGH);  delay(500);  digitalWrite(13, LOW);  // Initialize Bridge  Bridge.begin();  // Initialize Serial  Serial.begin(9600);}void loop(){  // Check ThingSpeak for TalkBack Commands  checkTalkBack();  delay(checkTalkBackInterval);}void checkTalkBack(){  String talkBackCommand;  char charIn;  String talkBackURL =  'http://' + thingSpeakAPI + '/talkbacks/' + talkBackID + '/commands/execute?api_key=' + talkBackAPIKey;  // Make a HTTP GET request to the TalkBack API:  client.get(talkBackURL);  while (client.available()) {    charIn = client.read();    talkBackCommand += charIn;  }  // Turn On/Off the On-board LED  if (talkBackCommand == 'TURN_ON')  {    Serial.println(talkBackCommand);    digitalWrite(13, HIGH);  }  else if (talkBackCommand == 'TURN_OFF')  {    Serial.println(talkBackCommand);    digitalWrite(13, LOW);  }  Serial.flush();  delay(1000);  //Sensor auslesen  x = analogRead(Sensor);  //Generate Post to ThingSpeak API  // Create string for ThingSpeak post  String request_string = thingSpeakAddress + writeAPIKey + tsfield1Name + String(x, DEC);  // Make a HTTP request  client.get(request_string);  delay (2000);}", "num_user_post": " 1", "author": "xking3"}, {"date": "April 24, 2015 - 10:46 am", "content": "can you upload the code for arduino uno with ESP8266 or/W5100, thanks", "num_user_post": " 4", "author": "hanguyen"}]}]}