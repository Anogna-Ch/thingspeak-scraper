{"url": "https://community.thingspeak.com/forum/arduino/page-2/", "threads": [{"url": "https://community.thingspeak.com/forum/arduino/senor-data-showing-on-the-serial-monitor-but-not-uploading-to-thingspeak-channel/", "posts": [{"date": "March 14, 2018 - 8:17 am", "content": "I tried to connect the atlas ph sensor to the arduino since it has been connnected succcessfully and showing on value on serial monitor but while sending the value through gsm sim900 its not able to send\u00a0\u00a0#include <SoftwareSerial.h> //we have to include the SoftwareSerial library, or else we can't use it#define rx 2 //define what pin rx is going to be#define tx 3 //define what pin tx is going to be#include <String.h>SoftwareSerial myserial(rx, tx); //define how the soft serial port is going to workSoftwareSerial mySerial(7, 8);String inputstring = ''; //a string to hold incoming data from the PCString sensorstring = ''; //a string to hold the data from the Atlas Scientific productboolean input_string_complete = false; //have we received all the data from the PCboolean sensor_string_complete = false; //have we received all the data from the Atlas Scientific productboolean pin2=LOW,pin3=LOW,pin4=LOW,pin5=LOW,pin6=LOW;float pH; //used to hold a floating point number that is the pHvoid setup(void){ //set up the hardware pinMode(0,INPUT); pinMode(1,INPUT); pinMode(4,INPUT); pinMode(5,INPUT); pinMode(6,INPUT); Serial.begin(9600); //set baud rate for the hardware serial port_0 to 9600 myserial.begin(9600); //set baud rate for the software serial port to 9600 inputstring.reserve(10); //set aside some bytes for receiving data from the PC sensorstring.reserve(30); //set aside some bytes for receiving data from Atlas Scientific product}void serialEvent() { //if the hardware serial port_0 receives a char inputstring = Serial.readStringUntil(13); //read the string until we see a <CR> input_string_complete = true; //set the flag used to tell if we have received a completed string from the PC }void loop(void) { //here we go... if (input_string_complete) //if a string from the PC has been received in its entirety { myserial.print(inputstring); //send that string to the Atlas Scientific product myserial.print(''); //add a <CR> to the end of the string inputstring = ''; //clear the string input_string_complete = false; //reset the flag used to tell if we have received a completed string from the PC } if (myserial.available() > 0) //if we see that the Atlas Scientific product has sent a character { char inchar = (char)myserial.read(); //get the char we just received sensorstring += inchar; //add the char to the var called sensorstring if (inchar == '') //if the incoming character is a <CR> { sensor_string_complete = true; //set the flag } } if (sensor_string_complete == true) //if a string from the Atlas Scientific product has been received in its entirety { Serial.println(sensorstring); //send that string to the PC's serial monitor delay(1000); sensorstring = ''; //clear the string sensor_string_complete = false; //reset the flag used to tell if we have received a completed string from the Atlas Scientific product delay(100); Send2niraj(); if (mySerial.available()) Serial.write(mySerial.read()) ; } }void Send2niraj() { mySerial.println('AT'); delay(1000); mySerial.println('AT+CPIN?'); delay(1000); mySerial.println('AT+CREG?'); delay(1000); mySerial.println('AT+CGATT?'); delay(1000); mySerial.println('AT+CIPSHUT'); delay(1000); mySerial.println('AT+CIPSTATUS'); delay(2000); mySerial.println('AT+CIPMUX=0'); delay(2000); ShowSerialData(); mySerial.println('AT+CSTT='internet'');//start task and setting the APN, delay(3000); ShowSerialData(); mySerial.println('AT+CIICR');//bring up wireless connection delay(3000); ShowSerialData(); mySerial.println('AT+CIFSR');//get local IP adress delay(2000); ShowSerialData(); mySerial.println('AT+CIPSPRT=0'); delay(3000); ShowSerialData(); mySerial.println('AT+CIPSTART='TCP','api.thingspeak.com','80'');//start up the connection delay(6000); ShowSerialData(); mySerial.println('AT+CIPSEND');//begin send data to remote server delay(4000); ShowSerialData(); String str='GET https://api.thingspeak.com/update?api_key=CY8K1V00EZ5W26ZX&field1=0' + String(sensorstring); mySerial.println(str);//begin send data to remote server delay(4000); ShowSerialData(); mySerial.println((char)26);//sending delay(5000);//waitting for reply, important! the time is base on the condition of internet mySerial.println(); ShowSerialData(); mySerial.println('AT+CIPSHUT');//close the connection delay(100); ShowSerialData(); }void ShowSerialData(){ while(mySerial.available()!=0) Serial.write(mySerial.read());}", "num_user_post": " 2", "author": "Niraj"}, {"date": "March 14, 2018 - 2:17 pm", "content": "i got the answer i was wrong with string(sensorstring)...", "num_user_post": " 2", "author": "Niraj"}]}, {"url": "https://community.thingspeak.com/forum/arduino/upload-dht11-sensor-values-using-gsm-900/", "posts": [{"date": "February 13, 2018 - 6:18 pm", "content": "Good day folks, I am currently building a smart irrigation project using the Arduino UNO.\u00a0Basically, a soil moisture sensor starts and stop a 12V DC water pump. A DHT 11 temperature sensor is just used for indication. I was able to get this part functioning correctly.\u00a0I would like to upload these values to thingspeak\u00a0using a GSM 900 sim. I am able to get a connection to thingspeak\u00a0and update the channel field but the temperature values are not accurate that is they are 1020 on the channel graph and 29, 28 etc on my Arduino serial monitor. Any help rectifying this would be greatly appreciated. Below is the code I tried thus far.#include <SoftwareSerial.h>#include <String.h>#include <dht.h>int sensorPin = 0;\u00a0 \u00a0 // set the input pin for the potentiometerint sensorValue = 0;dht DHT;#define DHT11_PIN A0\u00a0SoftwareSerial gprsSerial(7,8);float temp=0.0;void setup(){\u00a0 gprsSerial.begin(9600);\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// the GPRS baud rate\u00a0 \u00a0\u00a0 Serial.begin(9600);\u00a0 \u00a0 // the GPRS baud rate\u00a0\u00a0 delay(1000);}\u00a0void loop(){\u00a0 \u00a0 \u00a0 int chk = DHT.read11(DHT11_PIN);\u00a0 \u00a0 \u00a0 temp=analogRead(A0);\u00a0 \u00a0 \u00a0 delay(2);\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\u00a0 \u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0 if (gprsSerial.available())\u00a0 \u00a0 Serial.write(gprsSerial.read());\u00a0 gprsSerial.println('AT');\u00a0 delay(1000);\u00a0 gprsSerial.println('AT+CPIN?');\u00a0 delay(1000);\u00a0 gprsSerial.println('AT+CREG?');\u00a0 delay(1000);\u00a0 gprsSerial.println('AT+CGATT?');\u00a0 delay(1000);\u00a0 gprsSerial.println('AT+CIPSHUT');\u00a0 delay(1000);\u00a0 gprsSerial.println('AT+CIPSTATUS');\u00a0 delay(2000);\u00a0 gprsSerial.println('AT+CIPMUX=0');\u00a0 delay(2000);\u00a0\u00a0 ShowSerialData();\u00a0\u00a0 gprsSerial.println('AT+CSTT='myAPN'');//start task and setting the APN,\u00a0 delay(1000);\u00a0\u00a0 ShowSerialData();\u00a0\u00a0 gprsSerial.println('AT+CIICR');//bring up wireless connection\u00a0 delay(3000);\u00a0\u00a0 ShowSerialData();\u00a0\u00a0 gprsSerial.println('AT+CIFSR');//get local IP adress\u00a0 delay(2000);\u00a0\u00a0 ShowSerialData();\u00a0\u00a0 gprsSerial.println('AT+CIPSPRT=0');\u00a0 delay(3000);\u00a0\u00a0 ShowSerialData();\u00a0\u00a0\u00a0 gprsSerial.println('AT+CIPSTART='TCP','api.thingspeak.com','80'');//start up the connection\u00a0 delay(6000);\u00a0\u00a0 ShowSerialData();\u00a0\u00a0 gprsSerial.println('AT+CIPSEND');//begin send data to remote server\u00a0 delay(4000);\u00a0 ShowSerialData();\u00a0\u00a0\u00a0 \u00a0 String str='GET https://api.thingspeak.com/update?api_key=QT7O3U5O8HFEFBY8&field1=0' + String(temp);\u00a0 gprsSerial.println(temp);//begin send data to remote server\u00a0 delay(4000);\u00a0 ShowSerialData();\u00a0 gprsSerial.println((char)26);//sending\u00a0 delay(5000);//waitting for reply, important! the time is base on the condition of internet\u00a0\u00a0 gprsSerial.println();\u00a0\u00a0 ShowSerialData();\u00a0\u00a0 gprsSerial.println('AT+CIPSHUT');//close the connection\u00a0 delay(100);\u00a0 ShowSerialData();}\u00a0void ShowSerialData(){\u00a0 while(gprsSerial.available()!=0)\u00a0 \u00a0 Serial.write(gprsSerial.read());}", "num_user_post": " 10", "author": "seales"}, {"date": "February 13, 2018 - 7:36 pm", "content": "Should this line\u00a0gprsSerial.println(temp);//begin send data\u00a0to\u00a0remote serverbe\u00a0gprsSerial.println(str);//begin send data\u00a0to\u00a0remote server\u00a0and I think\u00a0String\u00a0str='GET https://api.thingspeak.com/update?api_key=QT7O3U5O8HFEFBY8&field1=0'\u00a0+\u00a0String(temp);should beString\u00a0str='GET https://api.thingspeak.com/update?api_key=QT7O3U5O8HFEFBY8&field1='\u00a0+\u00a0String(temp);Although a leading zero probably wont make a difference.If that doesn't help, please post the serial output too.", "num_user_post": " 401", "author": "cstapels"}, {"date": "February 14, 2018 - 10:13 am", "content": "\u00a0 \u00a0 String str='GET https://api.thingspeak.com/update?api_key=421TXMLMB71W7Q3G&field1=0' + String(temp);\u00a0 mySerial.println(temp);//begin send data to remote serverThanks for the reply. I realized that change had to be made and thanks for pointing that out.String\u00a0str='GET\u00a0https://api.thingspeak.com/update?api_key=QT7O3U5O8HFEFBY8&field1='\u00a0+\u00a0String(temp);Tried this but still no change. I am using a DHT 11 temperature sensor connected to digital pin 2", "num_user_post": " 10", "author": "seales"}, {"date": "February 14, 2018 - 2:31 pm", "content": "Can you show what the serial monitor says for this line?gprsSerial.println(temp);//begin send data\u00a0to\u00a0remote serveror do something like Serial.println(temp) so we can see what the format of the request is exactly when it is sent?Do you get no update at all on your channel, or still just incorrect numbers?", "num_user_post": " 401", "author": "cstapels"}, {"date": "February 14, 2018 - 3:43 pm", "content": "SEND OK347AT+CIPSHUTSHUT OKAT+CREG?+CREG: 0,1OKAT+CGATT?AT+CSTT='myApn'OKAT+CIICROKAT+CIFSR10.224.152.203AT+CIPSPRT=0OKAT+CIPSTART='TCP','api.thingspeak.com','80'OKCONNECT OKAT+CIPSENDGET https://api.thingspeak.com/update?api_key=QT7O3U5O8HFEFBY8&amp;SEND OK348\u00a0This is what the serial monitor says. And yes I get an update on the channel but incorrect values.", "num_user_post": " 10", "author": "seales"}, {"date": "February 14, 2018 - 3:47 pm", "content": "ATAT+CPIN?AT+CREG?AT+CGATT?AT+CIPSHUTAT+CIPSTATUSATAT+CSTT='myApn'AT+CIICRAT+CIFSRAT+CIPSPRT=0AT+CIPSTART='TCP','api.thingspeak.com','80'AT+CIPSENDTemperature = 23.00GET https://api.thingspeak.com/update?api_key=QT7O3U5O8HFEFBY8&amp;SEND OK359This is what I am seeing on the serial monitor as I added:Serial.print('Temperature = ');Serial.println(DHT.temperature);But the value I am seeing on thingspeak is 325.", "num_user_post": " 10", "author": "seales"}, {"date": "February 14, 2018 - 4:57 pm", "content": "Sorry, I repeated the same mistake I pointed out in your code above!I meant for you to print str, not temp.Can you add Serial.println(str) and share the output?My concern is that I don't see the value, or even field1= at the end of the string you showed.GET\u00a0https://api.thingspeak.com/update?api_key=XXXXXXXXXXXXXXXX&amp;I am looking for something similar to this:GET\u00a0https://api.thingspeak.com/update?api_key=XXXXXXXXXXXXXXXX&field1=23;If the buffer is getting filled, you can try it in shorter segments.\u00a0perhapsgprsSerial.print('GET\u00a0https://api.thingspeak.com/update');//begin send data\u00a0to\u00a0remote servergprsSerial.println('?api_key=XXXXXXXXXXXXXXXX&field1=23');", "num_user_post": " 401", "author": "cstapels"}, {"date": "February 14, 2018 - 7:17 pm", "content": "cstapels said  Sorry, I repeated the same mistake I pointed out in your code above! I meant for you to print str, not temp. Can you add Serial.println(str) and share the output?Hello no need to apologize, I am really grateful for the help and advice.I added the\u00a0Serial.println(str) and this is what I got on the serial monitor:CONNECT OKAT+CIPSENDGET https://api.thingspeak.com/update?api_key=QT7O3U5O8HFEFBY8&field1=01.00Temperature = 25.00GET https://api.thingspeak.com/update?api_key=QT7O3U5O8HFEFBY8&amp;", "num_user_post": " 10", "author": "seales"}, {"date": "February 15, 2018 - 9:53 am", "content": "Does that code result in the value 1.00 being added to ThingSpeak? I realize that 25.00 is the value you want, but what you showed was requesting a value of 1.00 to be written.\u00a0\u00a0If all that is true, then either temp is not being updated before it gets added to str or there may be a memory problem using the string class.I would try just hard coding a number and making sure it writes correctly to ThingSpeak first.\u00a0\u00a0you can write\u00a0str='GET\u00a0https://api.thingspeak.com/update?api_key=QT7O3U5O8HFEFBY8&field1=123'\u00a0then\u00a0gprsSerial.println(str);and make sure you see the value 123.\u00a0I am also curious about this line after you write the GET request:gprsSerial.println((char)26);//sending\u00a0why are you sending the value 26?", "num_user_post": " 401", "author": "cstapels"}, {"date": "February 15, 2018 - 10:07 am", "content": "#include <SoftwareSerial.h> #include <String.h> #include <dht.h> int sensorPin = 0; // set the input pin for the potentiometer int sensorValue = 0;dht DHT;#define DHT11_PIN A0 SoftwareSerial gprsSerial(7,8);\u00a0float temp=0.0;void setup() { gprsSerial.begin(9600); // the GPRS baud rate Serial.begin(9600); // the GPRS baud ratedelay(1000); } void loop() { temp=analogRead(A0); temp=temp*0.4887; delay(2);  if (gprsSerial.available()) Serial.write(gprsSerial.read());gprsSerial.println('AT'); delay(1000);gprsSerial.println('AT+CPIN?'); delay(1000);gprsSerial.println('AT+CREG?'); delay(1000);gprsSerial.println('AT+CGATT?'); delay(1000);gprsSerial.println('AT+CIPSHUT'); delay(1000);gprsSerial.println('AT+CIPSTATUS'); delay(2000);gprsSerial.println('AT+CIPMUX=0'); delay(2000); ShowSerialData(); gprsSerial.println('AT+CSTT='myApn'');//start task and setting the APN, delay(1000); ShowSerialData(); gprsSerial.println('AT+CIICR');//bring up wireless connection delay(3000); ShowSerialData(); gprsSerial.println('AT+CIFSR');//get local IP adress delay(2000); ShowSerialData(); gprsSerial.println('AT+CIPSPRT=0'); delay(3000); ShowSerialData(); gprsSerial.println('AT+CIPSTART='TCP','api.thingspeak.com','80'');//start up the connection delay(6000); ShowSerialData(); gprsSerial.println('AT+CIPSEND');//begin send data to remote server delay(4000); ShowSerialData(); String str='GET https://api.thingspeak.com/update?api_key=QT7O3U5O8HFEFBY8&field1=0' + String(temp); Serial.println(str); gprsSerial.println(str);//begin send data to remote server delay(4000); ShowSerialData();gprsSerial.println((char)26);//sending delay(5000);//waitting for reply, important! the time is base on the condition of internet gprsSerial.println(); ShowSerialData(); gprsSerial.println('AT+CIPSHUT');//close the connection delay(100); ShowSerialData(); } void ShowSerialData() { while(gprsSerial.available()!=0) Serial.write(gprsSerial.read());\u00a0int chk = DHT.read11(DHT11_PIN); Serial.print('Temperature = '); Serial.println(DHT.temperature); Serial.print('Humidity = '); Serial.println(DHT.humidity); delay(5000); sensorValue = analogRead(sensorPin); delay(1000); Serial.print('sensor = ' ); Serial.println(sensorValue); sensorValue = analogRead(sensorPin); delay(5000); Serial.print('sensor = ' ); Serial.println(sensorValue); }This is the new code I uploaded and I placed the Serial.print('Temperature = '); code lines to the end of the code.After using this code, the serial monitor shows this:OKCONNECT OKTemperature = 28.00Humidity = 74.00sensor = 1023sensor = 1023AT+CIPSENDTemperature = 28.00Humidity = 75.00sensor = 1023sensor = 1023GET https://api.thingspeak.com/update?api_key=QT7O3U5O8HFEFBY8&field1=0499.94GET https://api.thingspeak.com/update?api_key=QT7O3U5O8HFEFBY8&Temperature = 28.00Humidity = 74.00sensor = 1023sensor = 1023SEND OK523Temperature = 28.00Humidity = 74.00sensor = 1023sensor = 1023CLOSEDTemperature = -999.00Humidity = -999.00\u00a0Based on what you said you were not seeing, I am now able to see:GET https://api.thingspeak.com/update?api_key=QT7O3U5O8HFEFBY8&field1=0499.94GET https://api.thingspeak.com/update?api_key=QT7O3U5O8HFEFBY8&Temperature = 28.00as shown above. The problem is that the 28 value is not uploaded to thingspeak but the value I am seeing seems to be the 499.94.", "num_user_post": " 10", "author": "seales"}, {"date": "February 15, 2018 - 10:32 am", "content": " why are you sending the value 26?\u00a0\u00a0This line came with the code I sampled and made my adjustment too. I am yet to figure out what exactly it does", "num_user_post": " 10", "author": "seales"}, {"date": "February 16, 2018 - 9:44 am", "content": "At the top of your loop, you havetemp=analogRead(A0);temp=temp*0.4887;If you want the value written to ThingSpeak to be 28, then set these lines to betemp=(DHT.temperature);\u00a0 ,\u00a0The value of 26 (gprsSerial.println((char)26);//sending ) may be a number of bytes sent.\u00a0 I would try removing it and then investigating the difference.", "num_user_post": " 401", "author": "cstapels"}, {"date": "February 17, 2018 - 3:17 pm", "content": "cstapels said  The value of 26 (gprsSerial.println((char)26);//sending ) may be a number of bytes sent.\u00a0 I would try removing it and then investigating the difference.\u00a0\u00a0Based on research this char 26 indicated the end of data.Thanks again for your feedback. Based on your last reply I made some adjustments to the code and Eureka I got it to work. I removed the following code lines altogether:float temp=0.0temp=analogRead(A0);temp=temp*0.4887;and just replaced\u00a0 (temp) with (dht.temperature) in code line:String str='GET https://api.thingspeak.com/update?api_key=QT7O3U5O8HFEFBY8&field1=' + String(DHT.temperature);With this, the temperature value is uploaded to thingspeak\u00a0correctly. The sensor also has a humidity value and I would\u00a0like to upload that to a second field on the channel, so I would get both temperature and humidity uploaded on two fields. I tried several adjustments to the code but no luck with the two values upload. Advice with this would be appreciated.", "num_user_post": " 10", "author": "seales"}, {"date": "February 18, 2018 - 6:39 pm", "content": "String str='GET https://api.thingspeak.com/update?api_key=QT7O3U5O8HFEFBY8&field1='+String(DHT.temperature)+'?api_key=QT7O3U5O8HFEFBY8&field2='+String(DHT.humidity) ;With more trial and error I got the two values to upload simultaneously. thanks once again for all the advice", "num_user_post": " 10", "author": "seales"}, {"date": "February 20, 2018 - 3:22 pm", "content": "Thanks for posting the solution.\u00a0 If you want to make it a little shorter, you can actually skip the second repeated API key.String str='GET\u00a0https://api.thingspeak.com/update?api_key=XXXXXXXXXXXXXXXX&field1='+String(DHT.temperature)+'&field2='+String(DHT.humidity);Should work as well.", "num_user_post": " 401", "author": "cstapels"}, {"date": "February 20, 2018 - 6:31 pm", "content": "Ok thanks, I will give the shorter version a try.", "num_user_post": " 10", "author": "seales"}]}, {"url": "https://community.thingspeak.com/forum/arduino/sensor-data-not-uploading-to-thingspeakchannel-but-it-show-on-the-serial-monitor/", "posts": [{"date": "February 16, 2018 - 4:45 am", "content": "Your help will be appreciated.Thanks in advance.I tried to send soil moisture data on the thingspeak channel but I didn't. The code is given below#include <SoftwareSerial.h>#include <ThingSpeak.h>#include <stdlib.h>String apikey='X';\u00a0 \u00a0 \u00a0 // write api key of the channel#define ssid 'connectify'#define PASS '1234567890'SoftwareSerial softser(11,10); // Rx connected at digitalpin 10 and tx at 11void setup(){ delay(2000); Serial.begin(9600); softser.begin(9600); softser.println('AT+RST');}void loop(){ String join='AT+CWJAP='';join+=ssid;join+='','';join+=PASS;join+=''';softser.println(join);delay(5000);float val=analogRead(A0); // Soil moisture sensor readingfloat t=val*5.0f/1023.0f; char buf[16]; String strtemp=dtostrf(t,4,1,buf); Serial.println(strtemp); String cmd='AT+CIPSTART='TCP',''; cmd+='184.106.153.149'; cmd+='',80'; softser.println(cmd); if(softser.find('Error')) { Serial.println('AT+CIPSTART error '); return; } String getstr='GET https://api.thingspeak.com/update?api_key='; getstr+=apikey; getstr+='&field1='; getstr+=String(strtemp); getstr+=''; Serial.println(getstr); cmd='AT+CIPSEND='; cmd+=String(getstr.length()); softser.println(cmd); if (softser.find('>')) { softser.print(getstr); } else { softser.println('AT+CIPCLOSE'); Serial.println('AT+CIPCLOSE'); } softser.println('AT+RST'); delay(20000);}", "num_user_post": " 3", "author": "deokumardas"}, {"date": "February 16, 2018 - 8:48 am", "content": "Looks like a good start.\u00a0 Lets eliminate the easy things.\u00a0 If you use your web browser and the REST command to Write Data, can you successfully update the channel?i.e. paste this in the address bar :\u00a0https://api.thingspeak.com/update?api_key=XXXXXXXXXXXXXXXX&field1=321\u00a0Does your hardware indicate that it is connecting to the network appropriately?If all that works, can you try hard coding this lineString getstr='GET\u00a0https://api.thingspeak.com/update?api_key=';to the full commandString getstr='GET\u00a0https://api.thingspeak.com/update?api_key=XXXXXXXXXXXXXXXX&field1=123';(replacing your API key, of course)Then see if 123 gets populated to the channel from the device.If all that is successful, please describe your hardware and we can scrutinize the code closer.", "num_user_post": " 401", "author": "cstapels"}, {"date": "February 16, 2018 - 11:05 am", "content": "By pasting in the address bar, the channel is updated with the given value.I tried with this\u00a0 (String getstr='GET\u00a0https://api.thingspeak.com/update?api_key=XXXXXXXXXXXXXXXX&field1=123';) by replaying 'X' with apikey but problem still exist.The hardware connection is shown in the image file and drive link is shared below.https://drive.google.com/open?id=1lc2zRm9XzDiKnCgULxWRA5-mmxSXNSd0\u00a0How to test whether the hardware is connected to a network or not?", "num_user_post": " 3", "author": "deokumardas"}, {"date": "February 16, 2018 - 2:43 pm", "content": "From your drawing it seems the you are using an ESP8266-01, connected to an Arduino.\u00a0 If this is true, there is a much easier was to interact with the esp than the AT command set.\u00a0 You can use the Arduino IDE to program the ESP directly.\u00a0 Some people say there is an incompatibility with the 5 V outputs, but I have programmed many ESP8266-01 and found them to be 5 V tolerant for the TX and RX pins (not for VDD).\u00a0 Most of the Arduino examples in the examples section\u00a0of the ThingSpeak doc will work with small changes, and there are a few ESP8266 specific examples\u00a0 for reading and writing data with and without the ThingSpeak communication library.\u00a0Connect TX and RX straight into the TX and RX from the Arduino, pull up GPIO2 and CH_PD (and possibly RST), and pull GPIO0 to ground when programming.If I am wrong about the hardware, then we can stick to the AT commands. I think if you had a connection error, you would have seen it with these lines:if(softser.find('Error')) { Serial.println('AT+CIPSTART error ');Can you share what you see on the serial monitor?", "num_user_post": " 401", "author": "cstapels"}, {"date": "February 17, 2018 - 5:28 am", "content": "Serial monitor output is shown via link below:https://drive.google.com/open?id=1h7BNDskQYVlEMDmMAgBo6lGTG4F7KrVo\u00a0since esp8266 has three modes of operation: Access point,STA, bothin order to send data , esp8266 should remain in STA mode or something else. I fix mode at STA mode using AT+CWMODE=1 command.If I am wrong, please do correct me", "num_user_post": " 3", "author": "deokumardas"}, {"date": "February 20, 2018 - 4:22 pm", "content": "In this example code, they do not include the server name in the GET string.\u00a0 I would not suggest using software serial as they do in that example, I have seen issues with software serial on ESP8266-01 (possibly due to not shifting the voltage)....String getStr = 'GET /update?api_key=';..Also, they include some carriage returns that your code does not seem to have.\u00a0... getStr += '';...Is there a reason you need to use the AT commands instead of programming the ESP to do the communication itself?", "num_user_post": " 401", "author": "cstapels"}]}, {"url": "https://community.thingspeak.com/forum/arduino/data-not-uploading-to-thingspeak/", "posts": [{"date": "February 12, 2018 - 10:13 am", "content": "Hi,\u00a0I'm having issues with uploading my data to thingspeak, I'm not sure why my data is not uploading, as other code will upload data from the same sensors to a the channel.I've tried multiple locations for ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey); line, all of which will no upload data to the website.\u00a0It's not the case that new empty fields are added online as there are no new entires made, and I know that the API and channel are correct as another sample piece of code uploads data (only pressure and temperature).The difficulty comes when adding in the data for the additional sensors.However, all sensors are correctly outputting data to the serial.In short, I'm a little confused and not sure why it isn't uploading anything.Any pointers at all massively appreciated!Thanks\u00a0#include <OneWire.h>#include <Wire.h>#include <MS5803_14.h>#include <EEPROM.h>#include 'ThingSpeak.h'\u00a0#define USE_ETHERNET_SHIELD#include <SPI.h>#include <Ethernet.h>byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED};EthernetClient client;\u00a0#define StartConvert 0#define ReadTemperature 1#define EEPROM_write(address, p) {int i = 0; byte *pp = (byte*)&(p);for(; i < sizeof(p); i++) EEPROM.write(address+i, pp[i]);}#define EEPROM_read(address, p) {int i = 0; byte *pp = (byte*)&(p);for(; i < sizeof(p); i++) pp[i]=EEPROM.read(address+i);}#define compensationFactorAddress 8 //the address of the factor stored in the EEPROM#define VREF 5000 //for arduino uno, the ADC reference is the power(AVCC), that is 5000mVfloat compensationFactor;const byte numReadings = 20; //the number of sample timesbyte ECsensorPin = A1; //EC Meter analog output,pin on analog 1byte DS18B20_Pin = 2; //DS18B20 signal, pin on digital 2unsigned int AnalogSampleInterval = 25, printInterval = 1000, tempSampleInterval = 1000; //analog sample interval;serial print interval;temperature sample intervalunsigned int readings[numReadings]; // the readings from the analog inputbyte index = 0; // the index of the current readingunsigned long AnalogValueTotal = 0; // the running totalunsigned int AnalogAverage = 0, averageVoltage = 0; // the averageunsigned long AnalogSampleTime, printTime, tempSampleTime;float temperature, ECcurrent, ECcurrentRaw;//Temperature chip i/oOneWire ds(DS18B20_Pin); // on digital pin 2//Pressure sensorMS_5803 sensor = MS_5803(4096);float pressure;float prestemperature;unsigned long myChannelNumber = 413693;const char * myWriteAPIKey = '6RWGP1O11WFOGKDC';void setup() {Ethernet.begin(mac); ThingSpeak.begin(client); // initialize serial communication with computer: Serial.begin(9600);\u00a0// initialize all the readings to 0:for (byte thisReading = 0; thisReading < numReadings; thisReading++) readings[thisReading] = 0; TempProcess(StartConvert); //let the DS18B20 start the convert readCharacteristicValues(); AnalogSampleTime = millis(); printTime = millis(); tempSampleTime = millis(); if (sensor.initializeMS_5803()) { Serial.println( 'MS5803 CRC check OK.' ); } else { Serial.println( 'MS5803 CRC check FAILED!' ); } Serial.println('CLEARDATA'); Serial.println('Analog value,Voltage(mV),Temperature,EC, Pressure(mBar), Pressuretemp');\u00a0delay(3000);}void loop(){\u00a0/* Every once in a while,sample the analog value and calculate the average. */ sensor.readSensor(); float pressure = sensor.pressure(); float prestemperature = sensor.temperature();\u00a0if (millis() - AnalogSampleTime >= AnalogSampleInterval) { AnalogSampleTime = millis(); // subtract the last reading: AnalogValueTotal = AnalogValueTotal - readings[index]; // read from the sensor: readings[index] = analogRead(ECsensorPin); // add the reading to the total: AnalogValueTotal = AnalogValueTotal + readings[index]; // advance to the next position in the array: index = index + 1; // if we're at the end of the array... if (index >= numReadings) // ...wrap around to the beginning: index = 0; // calculate the average: AnalogAverage = AnalogValueTotal / numReadings; }/* Every once in a while,MCU read the temperature from the DS18B20 and then let the DS18B20 start the convert. Attention:The interval between start the convert and read the temperature should be greater than 750 millisecond,or the temperature is not accurate! */ if (millis() - tempSampleTime >= tempSampleInterval) { tempSampleTime = millis(); temperature = TempProcess(ReadTemperature); // read the current temperature from the DS18B20 TempProcess(StartConvert); //after the reading,start the convert for next reading } /* Every once in a while,print the information on the serial monitor. */ if (millis() - printTime >= printInterval) { printTime = millis(); averageVoltage = AnalogAverage * (float)5000 / 1024;ThingSpeak.setField( 1, String(AnalogAverage)); ThingSpeak.setField( 2, String(averageVoltage)); ThingSpeak.setField( 3, String(temperature)); Serial.print(AnalogAverage); //analog average,from 0 to 1023 Serial.print(', '); Serial.print(averageVoltage); //millivolt average,from 0mv to 4995mV Serial.print(', '); Serial.print(temperature); //current temperature Serial.print(', ');\u00a0float TempCoefficient = 1.0 + 0.0185 * (temperature - 25.0); //temperature compensation formula: fFinalResult(25^C) = fFinalResult(current)/(1.0+0.0185*(fTP-25.0)); float CoefficientVolatge = (float)averageVoltage / TempCoefficient;\u00a0if (CoefficientVolatge < 50) {ThingSpeak.setField( 5, String(pressure)); ThingSpeak.setField( 6, String(prestemperature)); Serial.print('No solution!'); //25^C 1413us/cm<-->about 216mv if the voltage(compensate)<150,that is <1ms/cm,out of the range Serial.print (', '); Serial.print(pressure); Serial.print(', '); Serial.println(prestemperature);\u00a0ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey);\u00a0}else if (CoefficientVolatge > 3300) {\u00a0ThingSpeak.setField( 5, String(pressure)); ThingSpeak.setField( 6, String(prestemperature)); Serial.println('Out of the range!'); //>20ms/cm,out of the range Serial.print (', '); //Serial.print(milli_time); Serial.print(pressure); Serial.print(', '); Serial.println(prestemperature);\u00a0ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey);\u00a0} else { if (CoefficientVolatge <= 448)ECcurrent = 6.84 * CoefficientVolatge - 64.32; //1ms/cm<EC<=3ms/cm else if (CoefficientVolatge <= 1457)ECcurrent = 6.98 * CoefficientVolatge - 127; //3ms/cm<EC<=10ms/cm else ECcurrent = 5.3 * CoefficientVolatge + 2278; //10ms/cm<EC<20ms/cm ECcurrentRaw = ECcurrent / 1000; ECcurrent = ECcurrent / compensationFactor / 1000;ThingSpeak.setField( 4, String(ECcurrent)); ThingSpeak.setField( 5, String(pressure)); ThingSpeak.setField( 6, String(prestemperature));Serial.print(ECcurrent, 2); //two decimal Serial.print(', '); Serial.print(pressure); Serial.print(', '); Serial.println(prestemperature);\u00a0ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey);\u00a0}\u00a0}delay (16000);}\u00a0int getMedianNum(int bArray[], int iFilterLen){ int bTab[iFilterLen]; for (byte i = 0; i < iFilterLen; i++) { bTab[i] = bArray[i]; } int i, j, bTemp; for (j = 0; j < iFilterLen - 1; j++) { for (i = 0; i < iFilterLen - j - 1; i++) { if (bTab[i] > bTab[i + 1]) { bTemp = bTab[i]; bTab[i] = bTab[i + 1]; bTab[i + 1] = bTemp; } } } if ((iFilterLen & 1) > 0) bTemp = bTab[(iFilterLen - 1) / 2]; else bTemp = (bTab[iFilterLen / 2] + bTab[iFilterLen / 2 - 1]) / 2; return bTemp;}void readCharacteristicValues(){ EEPROM_read(compensationFactorAddress, compensationFactor); if (EEPROM.read(compensationFactorAddress) == 0xFF && EEPROM.read(compensationFactorAddress + 1) == 0xFF && EEPROM.read(compensationFactorAddress + 2) == 0xFF && EEPROM.read(compensationFactorAddress + 3) == 0xFF) { compensationFactor = 1.0; // If the EEPROM is new, the compensationFactorAddress is 1.0(default). EEPROM_write(compensationFactorAddress, compensationFactor); }}/* ch=0,let the DS18B20 start the convert;ch=1,MCU read the current temperature from the DS18B20.*/float TempProcess(bool ch){ //returns the temperature from one DS18B20 in DEG Celsius static byte data[12]; static byte addr[8]; static float TemperatureSum; if (!ch) { if ( !ds.search(addr)) { Serial.println('no more sensors on chain, reset search!'); ds.reset_search(); return 0; } if ( OneWire::crc8( addr, 7) != addr[7]) { Serial.println('CRC is not valid!'); return 0; } if ( addr[0] != 0x10 && addr[0] != 0x28) { Serial.print('Device is not recognized!'); return 0; } ds.reset(); ds.select(addr); ds.write(0x44, 1); // start conversion, with parasite power on at the end } else { byte present = ds.reset(); ds.select(addr); ds.write(0xBE); // Read Scratchpad for (int i = 0; i < 9; i++) { // we need 9 bytes data[i] = ds.read(); } ds.reset_search(); byte MSB = data[1]; byte LSB = data[0]; float tempRead = ((MSB << 8) | LSB); //using two's compliment TemperatureSum = tempRead / 16; } return TemperatureSum;}", "num_user_post": " 4", "author": "Bird"}, {"date": "February 13, 2018 - 4:37 pm", "content": "It looks like you are doing a lot of rapid write fields commands.\u00a0 Im not sure about all the else conditions though. There is a limit on the rate of write operations, they are different for different users, but generally much slower than the arduino loop.\u00a0 You should only need one\u00a0ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey);for all set fields operations.\u00a0 Each writeFields command counts as a message against the rate limit for ThingSpeak.The format should be similar to this.setFields(1..).setFields(7..).setFields(4..).setFields(3..)....writeFields(..)Wait a while.repeat.You could try a simplified code that sets fixed numbers for your fields and then writes and then waits.\u00a0 That would also help debug if it is a memory issue.\u00a0 Let us know if that helps.", "num_user_post": " 401", "author": "cstapels"}]}, {"url": "https://community.thingspeak.com/forum/arduino/dragino-loragps-shield-and-arduino-uno/", "posts": [{"date": "January 31, 2018 - 7:34 am", "content": "I'm currently trying to set up a LoRa node to pass GPS data through a Dragino LG01 to my ThingSpeak channel 'test 912.'Has anyone got some guidance/examples? I'm hoping to run concurrent nodes.\u00a0I should add, I don't seem to be able to get gps data through software serial at all, only off hardware pins 0 and 1.", "num_user_post": " 1", "author": "raylockval"}]}, {"url": "https://community.thingspeak.com/forum/arduino/send-data-to-thingspeak-w-arduino-uno-and-esp8266/", "posts": [{"date": "January 22, 2018 - 3:00 pm", "content": "Hi everyone,For my last year project i am going to make an app that says where parkingspots are left empty.Now i have a esp8266 that has to send data from a hc-sr04 (distance sensor) to thingspeak both are connected to an arduino unoi already connected the esp8266 to my home wifi network but im already a few weeks bussy to find how to send data from the hc-sr04 with the esp8266 to thingspeak. So all of your help is welcome! I really don't know how to do that and i could never program it bymyself so tips please\u00a0Ps i already tried some of the examples as meassure the strength of your wifi network but none of it worked.", "num_user_post": " 2", "author": "arclary"}, {"date": "January 22, 2018 - 7:34 pm", "content": "Depending on which esp8266 board you have its likely that you do not need the Uno at all.\u00a0\u00a0\u00a0 Your distance sensor can connect direct to ESP8266 so long as it has 2 digital pins available.", "num_user_post": " 271", "author": "rw950431"}, {"date": "January 23, 2018 - 3:26 pm", "content": "Have a look at the\u00a0proximity sensor example.\u00a0 It shows you how to use an Arduino mkr1000 with the sonar sensor.\u00a0 You can use the schematic as a guide.\u00a0 You can also use the getDiatance function on your esp8266 project.The code in the temperature project uses an esp8266, so you can use those parts of the code for connecting to wifi and for posting to thingSpeak.", "num_user_post": " 401", "author": "cstapels"}, {"date": "January 24, 2018 - 10:10 am", "content": "Thanks for both responses but i don't have any of those ESP8266 i bought the ESP8266 from this link https://www.sparkfun.com/products/13678it has 8 pins that i can connect to my arduino uno is it possible to do it with this one and the arduino uno?\u00a0\u00a0I bought this combination with a large breadboard because i' ve got a lot of sensorsAnd after some research and your responses im really hesitating.\u00a0Besides that are realy good examples thanks already for that!", "num_user_post": " 2", "author": "arclary"}]}, {"url": "https://community.thingspeak.com/forum/arduino/how-to-send-two-data-values-to-thingspeak/", "posts": [{"date": "January 3, 2018 - 3:39 pm", "content": "I am trying to send the two sensor data values to thingspeak. Please tell me the command through which I can send the values to server. The basic code which I used to send data is given below.\u00a0#include <SoftwareSerial.h>/* Create object named SIM900 of the class SoftwareSerial */SoftwareSerial SIM900(8, 7);void setup(){ SIM900.begin(9600); /* Define baud rate for software serial communication */ Serial.begin(9600); /* Define baud rate for serial communication */}void loop() { Serial.println('HTTP post method :'); Serial.print('AT'); SIM900.println('AT'); /* Check Communication */ delay(500); ShowSerialData(); /* Print response on the serial monitor */ delay(500); /* Configure bearer profile 1 */ Serial.print('AT+SAPBR=3,1,'CONTYPE','GPRS''); SIM900.println('AT+SAPBR=3,1,'CONTYPE','GPRS''); /* Connection type GPRS */ delay(500); ShowSerialData(); delay(500); Serial.print('AT+SAPBR=3,1,'APN','airtelgprs.com''); SIM900.println('AT+SAPBR=3,1,'APN','airtelgprs.com''); /* APN of the provider */ delay(500); ShowSerialData(); delay(500); Serial.print('AT+SAPBR=1,1'); SIM900.println('AT+SAPBR=1,1'); /* Open GPRS context */ delay(500); ShowSerialData(); delay(500); Serial.print('AT+SAPBR=2,1'); SIM900.println('AT+SAPBR=2,1'); /* Query the GPRS context */ delay(500); ShowSerialData(); delay(2000); Serial.print('AT+HTTPINIT'); SIM900.println('AT+HTTPINIT'); /* Initialize HTTP service */ delay(2000); ShowSerialData(); delay(500); Serial.print('AT+HTTPPARA='CID',1'); SIM900.println('AT+HTTPPARA='CID',1'); /* Set parameters for HTTP session */ delay(500); ShowSerialData(); delay(500); Serial.print('AT+HTTPPARA='URL','api.thingspeak.com/update''); SIM900.println('AT+HTTPPARA='URL','api.thingspeak.com/update''); /* Set parameters for HTTP session */ delay(500); ShowSerialData(); delay(500); Serial.print('AT+HTTPDATA=33,10000'); SIM900.println('AT+HTTPDATA=33,10000'); /* POST data of size 33 Bytes with maximum latency time of 10seconds for inputting the data*/ delay(200); ShowSerialData(); delay(200); Serial.print('api_key=8MMR5DD7QC42NAUJ&field1=2'); /* Data to be sent */ SIM900.println('api_key=8MMR5DD7QC42NAUJ&field1=2'); delay(500); ShowSerialData(); delay(500); Serial.print('AT+HTTPACTION=1'); SIM900.println('AT+HTTPACTION=1'); /* Start POST session */ delay(1000); ShowSerialData(); delay(2000); Serial.print('AT+HTTPTERM'); SIM900.println('AT+HTTPTERM'); /* Terminate HTTP service */ delay(2000); ShowSerialData(); delay(500); Serial.print('AT+SAPBR=0,1'); SIM900.println('AT+SAPBR=0,1'); /* Close GPRS context */ delay(500); ShowSerialData(); delay(500);}void ShowSerialData(){ while(SIM900.available()!=0) /* If data is available on serial port */ Serial.write(char (SIM900.read())); /* Print character received on to the serial monitor */}", "num_user_post": " 3", "author": "MURLIDHAR ROY"}]}, {"url": "https://community.thingspeak.com/forum/arduino/thingspeak-multiple-field-updates-from-html/", "posts": [{"date": "December 17, 2017 - 1:31 pm", "content": "Background:\u00a0I have been dabbling with HTML for several years but I still have a limited skill set in this area.Recently have been introduced to the 'Arduino world' and the 'possibilities' and have just begun the 'learning curve'.I have a web page loaded via Micro SD on an ethernet shield.\u00a0With that in mind, I have downloaded an Arduino sketch I found online that sets up a web server with outputs (A2, A3). The html page I have created is a marriage between two different files found online. The web page functions as it should with one exception: I am only getting one Field updated in my Thingspeak channel. I have spent several hours researching the net looking for the solution but cannot find anything that 'fits' my coding given the way the page is formatted. The page is a 'test' model for a future version that will need to have 5-6 sensors (temperature) displayed and the values of, uploaded to Thingspeak. The other thing I should point out, is that the original script was 'voltage' related and not temperature, so I am not totally sure of the changes to make in those regards. My ultimate goal is create a web page that will display 5 temperature guages and 5 display graphs that will display temperatures from a solar panel (hot water augmentation).Here's a partial screen shot: I removed the Thingspeak 'write key' before taking the screen shot. It should also be noted that the original script had 'voltage' in place of where I now have 'data' (circled in red)I would greatly appreciate any help offered.Brian", "num_user_post": " 2", "author": "Stillub"}, {"date": "December 26, 2017 - 9:55 am", "content": "Can you copy ans paste the relevant parts of your code into the window instead of a screen shot?I think you are tying to update multiple fields of a ThingSpeak channel.\u00a0 It looks like your function call only has space for one field at a time.\u00a0 I am guessing that your device is calling that function multiple times within the\u00a0 update limit for ThingSpeak.\u00a0 If you have a free account that is 15 seconds.\u00a0 Even with a paid account, you are still limited to updates once every second, and your device probably calls much faster than that.\u00a0\u00a0If this is indeed the issue, there are two ways around that issue.\u00a0 One is to add a delay between every call, and the second is to update multiple fields at once.\u00a0\u00a0This example shows how to update fields from an Arduino device, though you already have some basic code.\u00a0 See the documentation on updating fields.\u00a0 The documentation describes using POST http commands.\u00a0 You can send multiple fields the the body of your post.\u00a0 \u00a0If you are using the GET HTTP method, you can append additional field data in the same call using the & to append further data.\u00a0\u00a0GET https://api.thingspeak.com/update?api_key=xxxxxxxxxxxxxxxx&field1=0orGET https://api.thingspeak.com/update?api_key=xxxxxxxxxxxxxxxx&field1=0&field2=24&field3=567 etc.You can also use MQTT publish, and this example shows how to update multiple fields simultaneously.\u00a0\u00a0Let us know if this helps.", "num_user_post": " 401", "author": "cstapels"}, {"date": "January 1, 2018 - 10:52 am", "content": "Thank you for response and suggestions. Much appreciated!I believe I have resolved the issue by making a few slight changes to both my HTML script and in the settings in ThingSpeak.My first issue was a mistake in how I had named the 'Fields'. The name I used in the ThingSpeak channel\u00a0did not match what was written in the script.function ThingSpeakSend(api_write_key, temperature) I had the word 'data' in place of 'temperature'. The Field name in ThingSpeak (Temperature) must match the name in the HTML script (temperature). It can be anything you want, but the two must match.The other thing I needed to do in order to get 'multiple Fields' updated all at once was to change the script to this:var req_str = 'http://api.thingspeak.com/update?key=' + api_write_key + '&field1=' + sensor1 + '&field2=' + sensor2;\u00a0At this point, everything appears to be working correctly. I have made changes so that ThingSpeak updates every 5 minutes. I have also tried settings in ThingSpeak to log 100 inputs which equates to just over 8hrs (based on 5 minute updates). The only thing I have noticed and it appears to be random, is that ThingSpeak stops updating at random times without reason. It doesn't do this all the time. Some days it runs flawless (8hrs+) and yet other days it will run for a few hours and then stop. I'm not sure if it's a hardware issue or something in the HTML script that needs tweaking.", "num_user_post": " 1", "author": "Brian_R"}]}, {"url": "https://community.thingspeak.com/forum/arduino/socket-error-error-146-connect-refused/", "posts": [{"date": "December 21, 2017 - 7:24 am", "content": "I try to upload the values of humidity and temperature to thingspeak, but the something be wrong..while the things.py (on Openwrt side) be executed, the result be showed as below.root@mylinkit:~# python things.pyTraceback (most recent call last): File 'things.py', line 31, in <module> p0 = value.get('PM2.5') File '/usr/lib/python2.7/bridge/bridgeclient.py', line 76, in get json = self.socket_open() File '/usr/lib/python2.7/bridge/bridgeclient.py', line 59, in socket_open self.json = TCPJSONClient('127.0.0.1', 5700) File '/usr/lib/python2.7/bridge/tcp.py', line 65, in __init__ TCPClient.__init__(self, address, port) File '/usr/lib/python2.7/bridge/tcp.py', line 38, in __init__ client.connect((address, port)) File '/usr/lib/python2.7/socket.py', line 224, in meth return getattr(self._sock,name)(*args)socket.error: [Errno 146] Connection refused\u00a0I do not know how to solve it, please help me, thank you so much.\u00a0Aurdino side..............................// MCU To MPU #include// DHT #include 'DHT.h' #define DHTPIN A0 #define DHTTYPE DHT11 DHT dht(DHTPIN, DHTTYPE);void setup() { Serial.begin(9600); dht.begin(); Bridge.begin(); }void loop() { // Get Temperature and Humidity float h = dht.readHumidity(); float t = dht.readTemperature();// Display Temperature and Humidity Value Serial.print('DHT-Humidity: '); Serial.print(h); Serial.print(' %t'); Serial.print('DHT-Temperature: '); Serial.print(t); Serial.println(' *Ct');// MCU To MPU Bridge.put('Humidity', String(h)); Bridge.put('Temperature', String(t));delay(1000); }\u00a0Openwrt side...............................things.py import sys import time import httplib, urllibsys.path.insert(0, '/usr/lib/python2.7/bridge/') from bridgeclient import BridgeClient as bridgeclient value = bridgeclient() thinkSpeakApiKey = 'PZ9BWVYAGTX3VUNU'def post_to_thingspeak(payload): headers = {'Content-type': 'application/x-www-form-urlencoded','Accept': 'text/plain'} not_connected = 1 while (not_connected): try: conn = httplib.HTTPConnection('api.thingspeak.com:80') conn.connect() not_connected = 0 except (httplib.HTTPException, socket.error) as ex: print 'Error: %s' % ex time.sleep(10) # sleep 10 secondsconn.request('POST', '/update', payload, headers) response = conn.getresponse() print( response.status, response.reason, payload, time.strftime('%c')) data = response.read() conn.close()while True: h0 = value.get('Humidity') t0 = value.get('Temperature') print 'Humi: ' + h0 print 'Temp: ' + t0 params = urllib.urlencode({'field1': t0, 'field2': h0, 'key': thinkSpeakApiKey}) post_to_thingspeak(params) time.sleep(5)", "num_user_post": " 2", "author": "dyu"}, {"date": "December 22, 2017 - 12:05 am", "content": "I got the answer myself. Only with a sketch and python script is the bridge working. It can work.", "num_user_post": " 2", "author": "dyu"}]}, {"url": "https://community.thingspeak.com/forum/arduino/response-handling/", "posts": [{"date": "December 20, 2017 - 10:06 am", "content": "Hi\u00a0I am using the library https://github.com/mathworks/thingspeak-arduinowith function writeFields\u00a0How can I get the response and control it.Did not understand it going through the example.\u00a0Thanks for an example sketch.\u00a0Cheers T", "num_user_post": " 2", "author": "riker1"}, {"date": "December 20, 2017 - 10:45 am", "content": "Have a look at the sonar example in the documentation.\u00a0 There is an example sketch there.\u00a0 That one uses the ThingSpeak Communication library to read and write data.\u00a0 The writeFields function returns the http status code, which is 200 if accepted.\u00a0 Let us know if this helps.", "num_user_post": " 401", "author": "cstapels"}]}, {"url": "https://community.thingspeak.com/forum/arduino/note-for-wifi101-and-mkr1000-users/", "posts": [{"date": "October 2, 2017 - 1:28 pm", "content": "There appears to be a bug in the WiFi101 library that affects the ThingSpeak library and examples.\u00a0 After a few transactions, the library stops working.Until the bug gets fixed by Arduino, you can use version 0.13.0 of the WiFi101 library.\u00a0To change the library version,\u00a0open up the Arduino IDE and go to Sketch > Include Library > Manage Libraries...Then search for WiFi101 and click 'More info' under the WiFi101 section.\u00a0 Select 'version 0.13.0' and click Install.After the library is done installing, you will need to recompile your project.", "num_user_post": " 34", "author": "JasonW"}, {"date": "October 2, 2017 - 6:09 pm", "content": "JasonW, you are my hero. And just thought I'm too stupid for this, thanks!!!", "num_user_post": " 5", "author": "beekeeper"}, {"date": "November 4, 2017 - 10:34 pm", "content": "Jason and beekeeper:\u00a0 I tried the 13 Library and I now get more than 2, but no more than 5 before it stops reporting.\u00a0 Did you get it to work continuously?", "num_user_post": " 6", "author": "wjpavalko"}, {"date": "December 5, 2017 - 3:50 pm", "content": "Yes it should work continuously. I had it running for a few hours.", "num_user_post": " 34", "author": "JasonW"}]}, {"url": "https://community.thingspeak.com/forum/arduino/read-back-status-of-thingspeak-with-arduino/", "posts": [{"date": "November 27, 2017 - 1:49 pm", "content": "Hi,\u00a0I'm using a Arduino Mega with a Ethernet Shield. The last 10 months it worked great.\u00a0But this month data is missing in the graphs. I've reset-ed the Arduino and updated the ThingSpeak library to 1.2.1. and now it only sends a very limited number of data points and then stops.Is there a method/command to put a read-back in the Arduino code to see on the Serial.plotter how ThingSpeak response to my write action?(I have put the data I'm sending to ThingSpeak on the Serial.plotter and it seems the right values).", "num_user_post": " 5", "author": "rico72"}, {"date": "November 27, 2017 - 5:58 pm", "content": "The thingSpeak communication library function ThingSpeak.writeField will return the HTTP status 200 if the transaction was successful.\u00a0 See the example for Arduino prototyping in the examples section.\u00a0 You can use a separate function for writing such as the one below.\u00a0 Then output the value of writeSuccess that is returned by this function to your serial monitor.\u00a0 If returns 200 or 202, you are good.\u00a0\u00a0int writeTSData(long TSChannel,unsigned int TSField,float data,char* ReadAPIKey){ int writeSuccess = ThingSpeak.writeField(TSChannel, TSField, data, writeAPIKey); //write the data to the channel return writeSuccess;}What library are you using for your wifi connection?", "num_user_post": " 401", "author": "cstapels"}, {"date": "November 28, 2017 - 2:46 pm", "content": "Thank you for the response. I will try this.Today just a few fields of a single channel were filled. Which is strange because I'm sending all eight fields of a single channel at once.And to answer your question: I'm not using Wifi but just a wired connection. My Arduino is located next to my router so that was the easiest.", "num_user_post": " 5", "author": "rico72"}, {"date": "November 28, 2017 - 2:57 pm", "content": "You may also want to look at the memory occupied by your code on the Arduino. If your code, or one of the libraries you use, is leaking memory or doing dynamic memory allocation, and the code is already occupying a high percentage of available memory, the allocation of memory at runtime can overwrite the program and result in behavior like this.One way to check this is to run your code on an Arduino compatible device that has more memory such as the MKR1000. If you see that the code behaves correctly on a device with more memory, I believe there is a high chance that your code is overwriting program memory at runtime.", "num_user_post": " 225", "author": "Vinod"}, {"date": "November 28, 2017 - 4:18 pm", "content": "I just opened the log file it shows 3 things:1) At start (first few minutes) I see on one channel WriteSuccess = -401 instead of 2002) One channel is giving regular writeSuccess = -302 instead of 2003) The channels that report back 200 do not always update all 8 fields. Some times half of them are updated.\u00a0Vinod I looked at the MKR1000 but to use that one I have to change my sensor inputs. At this moment I'm using 12 analog inputs. Sadly the MKR1000 has only 7 inputs.Is there another way to see if I have a problem with the memory? At this moment I dump the data also to the serial output just as commond before I send it to ThingSpeak, and it shows the right values on the Serial-monitor, but not in ThingSpeak. \u00a0I'm trying now to remember what I have changed (it worked great for almost a year)... the one thing that pops up is that I have added a serial-sensor as well. Directly connected to one of the serial inputs of the Mega. Is the ThingSpeak Arduino library using serial bus somewhere?", "num_user_post": " 5", "author": "rico72"}, {"date": "November 29, 2017 - 8:54 am", "content": "That is a very odd problem you are having.\u00a0 I second Vinod's idea about running out of resources.\u00a0 Because the write operation occurs at the same time for all the fields, it is puzzling how some fields are getting updated and others aren't.\u00a0 A corrupted string could be the reason.", "num_user_post": " 34", "author": "JasonW"}, {"date": "November 29, 2017 - 9:45 am", "content": "rico72 said  I'm trying now to remember what I have changed (it worked great for almost a year)... the one thing that pops up is that I have added a serial-sensor as well. Directly connected to one of the serial inputs of the Mega. Is the ThingSpeak Arduino library using serial bus somewhere?\u00a0\u00a0Can you try reverting to your old Arduino sketch (without changing any hardware connections) and seeing if the problem still occurs. That will help isolate if it is a software issue. Next step would be then to go to a setup without the new sensor and seeing if that configuration of old hardware + old software gets you the correct behavior. The only reason I suggest this is to rule out hardware interrupts from the newly added sensor messing with the data transmission to ThingSpeak.", "num_user_post": " 225", "author": "Vinod"}, {"date": "December 2, 2017 - 9:01 am", "content": "So the first results seems to be indeed pointing to a memory problem.During one day I have left out the serial sensor. And it reported to ThingSpeak without any problems.And the second day I have connected only the serial sensor and I logged also on Thingspeak the free Ram available in the Arduino memory. And that last logging was interesting. Over roughly one hour the free RAM in the Arduino went down from 3500 bytes to 200 bytes. And at that moment the sensor data was no longer visible on ThingSpeak (only empty fields were available in the downloaded CSV file).\u00a0So I have to check the library of the serial sensor to see what happens there.\u00a0Thank you very much for your support.", "num_user_post": " 5", "author": "rico72"}]}]}