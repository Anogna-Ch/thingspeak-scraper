{"url": "https://community.thingspeak.com/forum/arduino/page-6/", "threads": [{"url": "https://community.thingspeak.com/forum/arduino/upload-data-from-thingspeak-to-pvoutput/", "posts": [{"date": "September 7, 2016 - 12:36 am", "content": "I'm using an ESP8266 to upload data to thingspeak. I'd like to load this data from thingspeak to PVOutput. Can thingspeak code be written do this?Reason being, it is easy to use a MCU\u00a0to upload data in real time to thingspeak. It is more complex with PVOutput, as time & date stamps are required with each data upload, which means time retrieval from an NTP server, plus interval measurement in my microcontroller, or a RTC in my hardware.My programming skills are only at Arduino IDE level. I suspect thingspeak could do what I want, but I don't know how.Any help appreciated\u00a0", "num_user_post": " 1", "author": "rickylee64"}, {"date": "September 7, 2016 - 7:41 pm", "content": "Possibly you can set up a React which triggers a ThingHTTP to push to PVOutput every time data is inserted into Thingspeak.", "num_user_post": " 271", "author": "rw950431"}]}, {"url": "https://community.thingspeak.com/forum/arduino/a-couple-of-handy-snippets-of-code-for-debugging/", "posts": [{"date": "August 29, 2016 - 1:28 pm", "content": "Hello All,I thought I would share a couple of handy code fragments that I've been using while developing Arduino apps with\u00a0ThingSpeak.My use case is to have\u00a0the Arduino out in the field running 24x7 which makes debugging difficult, so I have opted for a Raspberry Pi connected to the serial port (USB) of the Arduino to collect the serial output and debug what's going on. \u00a0My solutions means I\u00a0can terminal into the PI from anywhere in the world and debug / reprogram it.\u00a0So on to the handy Lunix command...connect the\u00a0Arduio to the PI via a USB port then run the following command to capture\u00a0its\u00a0Serial.print\u00a0output into a log-file on the PI with each entry prefixed with a datestamp:cat /dev/ttyUSB0 | while IFS= read -r line; do echo '$(date) $line'; done >> logfile.txt\u00a0//That's\u00a0/dev/ttyUSB0 ZERO not oh//Additionally - if you want this to run continually just like a service simple add a & symbol after ...\u00a0$line'; done >> logfile.txt &The second tip is to automatically reboot the Arduino should it stop running, again this is handy if your use case is in the field and you can't spend all day monitoring it.As the Arduino is running you can call on its\u00a0'WatchDog' capability\u00a0which as the name suggests monitors the Arduino and if it stops responding automatically reboots it. \u00a0Essentially what the below code does is turn on the WatchDog\u00a0with wdt_enable(WDTO_8S); and tell it to wait 8 seconds before rebooting.You now have 8\u00a0seconds to tell the WatchDog within your code that all is well and RESET the 8 second timer using\u00a0wdt_reset();If after\u00a08 seconds you don't reset the timer the Arduino will automatically reboot. \u00a0For more information see this...#include <avr/wdt.h> \u00a0// You can just add this line as the library is included with every Arduino IDEvoid loop() {\u00a0 \u00a0 \u00a0 \u00a0wdt_enable(WDTO_8S); \u00a0//\u00a0Start the WatchDog\u00a0 \u00a0 \u00a0 \u00a0// Do something which must finish before 8 seconds is up\u00a0 \u00a0 \u00a0 wdt_reset(); \u00a0 // Reset the timer, all is well}Happy coding", "num_user_post": " 8", "author": "HydroponicsMAC"}, {"date": "August 30, 2016 - 1:23 am", "content": "Does your setup work properly if the power goes off and both the RPi and Arduino reboot?\u00a0\u00a0 I tried a similar setup a few years ago (see my stackexchange question) but found the arduino wasnt recognised after the RPi was power cycled.That was using an original RPi, so perhaps the later models behave better.", "num_user_post": " 271", "author": "rw950431"}, {"date": "August 30, 2016 - 10:59 am", "content": "I haven't experience the same non-recognition problem with the Raspberry Pi 3 and Arduino Mega that I'm using. \u00a0I'm powering the Arduino via a 9v power adaptor so its\u00a0USB port is just used for serial output to the Pi.At at guess when the power goes off/on the Arduino will be up and running before the Pi, then when Pi starts logging the Arduino's serial output the Arduino will reboot again (which can be disabled with some hardware mods)http://stackoverflow.com/questions/16224816/preventing-reset-on-serial-monitor-connect\u00a0", "num_user_post": " 8", "author": "HydroponicsMAC"}]}, {"url": "https://community.thingspeak.com/forum/arduino/gsm-shield-updates-only-once/", "posts": [{"date": "July 31, 2016 - 6:14 pm", "content": "Hi,I am using an Arduino Mega and a GSM Shield (M10 modem) to send data to ThingSpeak. I found some examples that show how to send one or more parameters after a given time period that work well, as long as I don't modify the loop code.If I add the examples code as part of a longer/bigger program the data is updated in Thingspeak ONLY the first time that the program runs.Has anyone have such issues before? I can post the code I used to update ThinSpeak.Thanks in advance!", "num_user_post": " 2", "author": "aelizondo"}, {"date": "July 31, 2016 - 10:40 pm", "content": "aelizondo said Hi, I am using an Arduino Mega and a GSM Shield (M10 modem) to send data to ThingSpeak. I found some examples that show how to send one or more parameters after a given time period that work well, as long as I don't modify the loop code. If I add the examples code as part of a longer/bigger program the data is updated in Thingspeak ONLY the first time that the program runs. Has anyone have such issues before? I can post the code I used to update ThinSpeak. Thanks in advance!\u00a0\u00a0Yes I also have same problem. I was able to see it also on mobile app ThingView. Then suddenly it stopped I see entries and last update information but no data on field chart. I see the chart records when I first connected .I can see total 139 entries. now no updates", "num_user_post": " 3", "author": "pramod"}, {"date": "August 1, 2016 - 6:57 pm", "content": "Can you test connectivity from your GSM shield? Are you sure the GSM shield is not going into some sort of hibernate mode? Before you send data to thingspeak, can you program your device to ping http://www.thingspeak.com or http://www.mathworks.com?\u00a0To troubleshoot, It would help if you\u00a0linked your sketch here.", "num_user_post": " 225", "author": "Vinod"}, {"date": "August 2, 2016 - 12:55 am", "content": "This is my code which is copied from ' GSM-ParticulateSensor' examplevoid thingspeakPost() {\u00a0\u00a0\u00a0 char itoaBuffer[8];\u00a0 char end_c[2];\u00a0 end_c[0] = 0x1a;\u00a0 end_c[1] = '0';// PM25 int to char\u00a0 char data25[50];\u00a0 String str25;\u00a0 str25 = String(Pm25);\u00a0 str25.toCharArray(data25, 50);\u00a0// PM10 int to char \u00a0\u00a0 char data10[50];\u00a0 String str10;\u00a0 str10 = String(Pm10);\u00a0 str10.toCharArray(data10, 50);if (inet.connectTCP(thingSpeakAddress, 80)) {\u00a0\u00a0 Serial.println('connected to thingspeak');\u00a0 \u00a0\u00a0\u00a0\u00a0 gsm.SimpleWrite('POST /update HTTP/1.1');\u00a0 \u00a0\u00a0\u00a0\u00a0 gsm.SimpleWrite('Host: api.thingspeak.com');\u00a0\u00a0\u00a0 gsm.SimpleWrite('Connection: close');\u00a0\u00a0\u00a0 gsm.SimpleWrite('X-THINGSPEAKAPIKEY:');\u00a0\u00a0\u00a0\u00a0 gsm.SimpleWrite(writeAPIKey);\u00a0\u00a0\u00a0 gsm.SimpleWrite('');\u00a0\u00a0\u00a0 gsm.SimpleWrite('Content-Type: application/x-www-form-urlencoded');\u00a0\u00a0\u00a0 gsm.SimpleWrite('Content-Length: ');\u00a0 \u00a0\u00a0\u00a0 sprintf(sentMsg, 'field1=%s', data25);\u00a0\u00a0 itoa(strlen(sentMsg), itoaBuffer, 10);\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 gsm.SimpleWrite(itoaBuffer);\u00a0\u00a0\u00a0 //inet.httpPOST('api.thingspeak.com', 80, '/update?key=B325M1U9WB2JGC9Z&field1= itoaBuffer');\u00a0 //gsm.SimpleWrite('PUT https://api.thingspeak.com/channels/137269/api_key=K9WNHI32J4346GL6');\u00a0\u00a0 // gsm.SimpleWrite(' api_key=K9WNHI32J4346GL6');\u00a0\u00a0 // gsm.SimpleWrite(' name=Updated Channel');\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 //gsm.SimpleWrite(Pm25);\u00a0\u00a0\u00a0\u00a0 gsm.SimpleWrite('');\u00a0\u00a0\u00a0\u00a0 gsm.SimpleWrite(sentMsg);\u00a0\u00a0\u00a0\u00a0 gsm.SimpleWrite('');\u00a0\u00a0\u00a0\u00a0 gsm.SimpleWrite(end_c);\u00a0\u00a0 delay(20000);\u00a0\u00a0\u00a0 Serial.println('update to thingspeak');", "num_user_post": " 3", "author": "pramod"}, {"date": "August 4, 2016 - 12:42 am", "content": "It appears that your code has\u00a0some debugging statements it prints to the serial port. You should be able to\u00a0program your arduino and monitor the output on the\u00a0serial port to look at the\u00a0messages are being printed. That will help you isolate the problem. Your starting point\u00a0is to see what messages are being printed to the arduino serial monitor (Ctrl+Shift+M) in the Arduino IDE when your sketch is running. Try to\u00a0write out some more messages using Serial.println() as debugging\u00a0aids\u00a0between the different steps. If your sketch is based on this one, are you seeing 'failed' messages in your serial monitor? This would indicate that the connection is being dropped. etc.Note that based on just this code snippet, depending on\u00a0how often you call this function, you could be trying to post to http://www.thingspeak.com every 0.02 seconds. This is\u00a0likely just wasting your GPRS data as\u00a0the current data rate to http://www.thingspeak.com is one write per channel every 15 seconds.", "num_user_post": " 225", "author": "Vinod"}, {"date": "August 18, 2016 - 11:24 pm", "content": "Hi,Thanks for the recommendations and sorry about my delayed reply Vinod. I was using a different code than the one posted by pramod and I found the problem on mine. There were a couple of validations made every time the code ran, reading data from the website I was trying to connect to and then validating whether the client was still connected.The example I used as a baseline made updates every 5 minutes and in my case I needed to send the udpates that were event triggered, so I got read of the two validations, forcing the client to connect when the event took place and diisconnect right after the update was made.I hope this makes sense.Alonso", "num_user_post": " 2", "author": "aelizondo"}]}, {"url": "https://community.thingspeak.com/forum/arduino/arduino-mega-with-yun-shield/", "posts": [{"date": "July 3, 2016 - 1:39 pm", "content": "Hello guys,\u00a0I want to collect data to thingspeak by a analog A0 input with WiFi communication, the problem is that I\u00b4cannot setup by yun shield to send data.I test with a ethernet shield and everything is correct, but with the yun shield the data is not be send, look the code:\u00a0#ifdef SPARK #include 'ThingSpeak/ThingSpeak.h'#else #include 'ThingSpeak.h'#endif#define VOLTAGE_MAX 5.0#define VOLTAGE_MAXCOUNTS 1023.0#define USE_WIFI_SHIELD#include 'BridgeClient.h'BridgeClient client;unsigned long myChannelNumber = 1XX47;const char * myWriteAPIKey = 'XXXXXXXXXXT7SVDMCJ5';#include <SPI.h>#include <WiFi.h> char ssid[] = 'MySSID';\u00a0 char pass[] = 'MyPASSWORD';\u00a0 int status = WL_IDLE_STATUS;void setup() {Bridge.begin(); WiFi.begin(ssid, pass); ThingSpeak.begin(client);}void loop() {int sensorValue = analogRead(A0);float voltage = sensorValue * (VOLTAGE_MAX / VOLTAGE_MAXCOUNTS); ThingSpeak.writeField(myChannelNumber, 1, voltage, myWriteAPIKey); delay(20000); // ThingSpeak will only accept updates every 15 seconds. }\u00a0what is wrog, any ideia?\u00a0Thanks in advance", "num_user_post": " 3", "author": "Luis_Filipe"}, {"date": "July 4, 2016 - 11:45 pm", "content": "I believe you just need to remove these:#includeWiFi.begin(ssid, pass);I use a Yun Shield on a Mega2560 as well. The Yun Shield connects to my local network and then sends results either to ThingSpeak.com or to a local install of ThingSpeak.Also, did you put a jumper across the very first pair\u00a0of pins (directly below\u00a0from the mounting hole in the board on the top left side) for the ICSP for 16U2 USB interface when the Yun Shield is mounted to the Mega2560? That pair of pins need to be jumpered for the Yun Shield to work with the Mega2560. You will then compile your sketch and save the .hex file to disk, and then log into the Yun Shield and upload that .hex file from the directory where it was placed (same as the location of the .ino file). 2 versions of the .hex file will be created, 1 with a boot loader and 1 without. I use the one without the boot loader and it seems to work okay.More details can be found here:\u00a0http://wiki.dragino.com/index.php?title=Yun_Shield#Connect_to_Arduino_Mega2560", "num_user_post": " 4", "author": "jpsabo"}, {"date": "July 7, 2016 - 7:05 pm", "content": "OK, solve the issue, Thanks a lot!", "num_user_post": " 3", "author": "Luis_Filipe"}]}, {"url": "https://community.thingspeak.com/forum/arduino/multiple-1-wire-bus-on-digital-pin/", "posts": [{"date": "June 30, 2016 - 2:38 am", "content": "How best to achieve this ...Not getting a successful compile from the below sketch ....Very much a newb with ThingSpeak and Arduino ...\u00a0/* Arduino Mega 2560 WiFi Weather Station *\u00a0 * July 2016 By John D Smith ZL4CO * */\u00a0#include <Ethernet.h>#include <OneWire.h>#include <DallasTemperature.h>#include <ThingSpeak.h>byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED};// assign an IP address for the controller:IPAddress ip(0.0.0.0);// Initialize Arduino Ethernet ClientEthernetClient client;// Initialize the Ethernet server library// with the IP address and port you want to use// (port 80 is default for HTTP):EthernetServer server(80);// ThingSpeak Settingsunsigned long myChannelNumber = secret;const char * myWriteAPIKey = '';// There are currently 2 x Trial DS18B20 '1-Wire' digital Temperature sensors.// 1 Wire Data wire is plugged into Digital pin 12 on the Arduino#define ONE_WIRE_BUS 12// Setup a oneWire instance to communicate with any OneWire devicesOneWire oneWire(ONE_WIRE_BUS);// Pass our oneWire reference to Dallas Temperature.DallasTemperature sensors(&oneWire);// Assign the addresses of the 1-Wire temp sensors.DeviceAddress Temp1 = { 0x28, 0xFF, 0x7F, 0x71, 0x2C, 0x04, 0x00, 0x79 };DeviceAddress Temp2 = { 0x28, 0xEC, 0xAB, 0x1E, 0x00, 0x00, 0x80, 0xA8 };void setup(void){ // start serial port Serial.begin(9600); // Start up the library sensors.begin(); // set the resolution to 10 bit (good enough?) sensors.setResolution(Temp1, 10); sensors.setResolution(Temp2, 10); ThingSpeak.begin(client);}void printTemperature(DeviceAddress deviceAddress){ float tempC = sensors.getTempC(deviceAddress); if (tempC == -127.00) { Serial.print('Error getting temperature'); } else { Serial.print('C: '); Serial.print(tempC); Serial.print(' F: '); Serial.print(DallasTemperature::toFahrenheit(tempC)); }}void loop (void){ delay(10000);*/ Serial.print('Getting temperatures...'); sensors.requestTemperatures(); Serial.print('Temp 1 is: '); printTemperature(Temp1); Serial.print(''); Serial.print('Temp 2 is: '); printTemperature(Temp2); Serial.print(''); Serial.print('');delay(200);}//Update the ThingSpeak Channel float pinVoltage = sensors.(Temp1) ; ThingSpeak.setField(1,pinVoltage); pinVoltage = sensors.(Temp2) ThingSpeak.setField(2,pinVoltage);// Write the fields that you've set all at once. ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey);  Serial.print('Temperatures Uploaded to Cloud...'); delay(80000);It is in this part here I am not sure how to Access my Temp1 and Temp2 values for ThingSpeak", "num_user_post": " 1", "author": "Smitty"}, {"date": "June 30, 2016 - 8:58 pm", "content": "For a start the Thingspeak section is outside the loop() so probably wont compile. Use the arduino IDE Tools->Format menu to nicely indent your code so its easy to pick these things up.\u00a0I suggest you work through some of the Examples that come with the Thingspeak library and go from there.", "num_user_post": " 271", "author": "rw950431"}, {"date": "July 6, 2016 - 5:18 pm", "content": "Here's the code I'm using which is doing something similar.#include 'ThingSpeak.h'unsigned long myChannelNumber = 123456789;const char * myWriteAPIKey = 'ABCDEFGHIJK';#include <SPI.h>#include <Ethernet.h>byte mac[] = {0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED}; //DE:AD:BE:EF:FE:ED, Internal static IP is 192.168.0.52EthernetClient client;#include <OneWire.h>#include <DallasTemperature.h>OneWire oneWire(3);DallasTemperature OneWire_Sensors(&oneWire);#include 'DHT.h'#define PLANT_DHTPIN 2#define DHTTYPE DHT11DHT Plant_dht(PLANT_DHTPIN, DHTTYPE);#define RAIN_SENSOR_DIGITAL 4float fltEnviromentTemp = 0, fltPlantTemp = 0, fltReservoirTemp = 0;int i, intPlantHumidity = 0, intSensorAlarm = 0, intRainAlarm = 0;boolean blnRainAlarmNotified = false;void setup() { Serial.begin(9600);pinMode(RAIN_SENSOR_DIGITAL, INPUT);Serial.println(F('v.' __DATE__ ', ' __TIME__ ''));Serial.print(F('Starting network')); Ethernet.begin(mac);Serial.print(F(', ThingSpeak')); ThingSpeak.begin(client);Serial.println(F(' and sensors.')); OneWire_Sensors.begin(); Plant_dht.begin();}void loop() { Serial.println(F('Reading sensors'));// Rain sensor if (!(digitalRead(RAIN_SENSOR_DIGITAL))) { Serial.println(F('WARNING: Rain detected, ALARM activated')); intRainAlarm = 1; blnRainAlarmNotified = true; } else { intRainAlarm = 0; blnRainAlarmNotified = false; }//Onewire sensors OneWire_Sensors.requestTemperatures(); fltEnviromentTemp = OneWire_Sensors.getTempCByIndex(0); fltPlantTemp = OneWire_Sensors.getTempCByIndex(1); fltReservoirTemp = OneWire_Sensors.getTempCByIndex(2);//DHT11 sensor intPlantHumidity = Plant_dht.readHumidity();Serial.print(F('Environment = ')); Serial.print(fltEnviromentTemp); Serial.println(F('*C')); Serial.print(F('Plant = ')); Serial.print(fltPlantTemp); Serial.println(F('*C')); Serial.print(F('PlantHumidity=')); Serial.print(intPlantHumidity); Serial.println(F('%')); Serial.print(F('Reservoir = ')); Serial.print(fltReservoirTemp); Serial.println(F('*C')); Serial.print(F('RainAlarm = ')); Serial.println(intRainAlarm);if ((fltEnviromentTemp == -127.00) || (fltPlantTemp == -127.00) || (fltReservoirTemp == -127.00) || isnan(intPlantHumidity) || (intPlantHumidity == 0)) { Serial.println(F('WARNING: Sensor problem, ALARM activated')); intSensorAlarm = 1; } else { Serial.println(F('Sensors are OK')); intSensorAlarm = 0; }ThingSpeak.setField(1, fltEnviromentTemp); ThingSpeak.setField(2, fltPlantTemp); ThingSpeak.setField(3, intPlantHumidity); ThingSpeak.setField(4, fltReservoirTemp); ThingSpeak.setField(5, intRainAlarm); ThingSpeak.setField(6, intSensorAlarm);Serial.println(F('Updating ThingSpeak'));ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey); // ThingSpeak only accept updates every 15 secondsSerial.println(F('Finished updating'));Serial.println(F('Sleeping for 15 minutes'));for (i = 0; i < 45; i++) { //15 minutes = 45 * 20,000 = 900,000 delay(20000); //Wait 20 seconds Serial.println(F('Checking for rain'));if (!(digitalRead(RAIN_SENSOR_DIGITAL))) { Serial.println(F('WARNING: Rain detected, ALARM activated'));if (blnRainAlarmNotified == false) { Serial.println(F('Updating ThingSpeak')); ThingSpeak.writeField(myChannelNumber, 5, 1, myWriteAPIKey); Serial.println(F('Finished updating'));blnRainAlarmNotified = true;} else { Serial.println(F('Already updated ThingSpeak')); } } }}", "num_user_post": " 8", "author": "HydroponicsMAC"}]}, {"url": "https://community.thingspeak.com/forum/arduino/not-all-ds18b20-sensors-present-on-thingspeak/", "posts": [{"date": "July 3, 2016 - 11:45 pm", "content": "I have successfully compiled a sketch that collects and displays an analog temperature, 2 (of 4) \u00a0DS18B20 sensors, and a digital temperature and humidity output from a DHT11 sensor. \u00a0All sensor data mirrors on the COM port, but 2 of the DS18B20 fields do not display on ThingSpeak. \u00a0When I include those fields no data is updated on ThingSpeak. \u00a0When I comment them out all other data is updated.The sketch follows:/* WriteMultipleSensors This sketch builds upon V5 by trying to incorporate 2 more DS18B20 sensors for Field 4 and 5 independant of the Field 2 and 3 sensors This sketch successfully logs 1 analog, 2 DS18B20 signals, and 1 set of DHT11 data. It doesn't transmit Field 3 and Field 4 from the DS18B20 sensor. Don't know if it is a voltage issue or a String composition limitation*/ #include 'ThingSpeak.h' #include <OneWire.h> #include <SPI.h> #include <DallasTemperature.h> #include <DHT.h> // Use wired ethernet shield #include <SPI.h> #include <Ethernet2.h> // Make sure there is a 2 after Ethernet! byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED}; EthernetClient client; // Analog Pin setup - // On Arduino: 0 - 1023 maps to 0 - 5 volts #define VOLTAGE_MAX 5.0 #define VOLTAGE_MAXCOUNTS 1023.0// Define DHT11 for room temperature and humidity measurement #define DHTPIN 4 // what digital pin we're connected to.. Digital Pin 4 in this case #define DHTTYPE DHT11 // DHT 11 DHT dht(DHTPIN, DHTTYPE); // DS1820 Setup.... A oneWire instance to communicate with any OneWire devices // Data wire is plugged into pin 3 on the Arduino #define ONE_WIRE_BUS 3 //#define ONE_WIRE_BUS 5 OneWire oneWire(ONE_WIRE_BUS); // Pass our oneWire reference to Dallas Temperature. DallasTemperature sensors(&oneWire); // Assign the addresses of 1-Wire temp sensors. DeviceAddress HPWH_TempOut = { 0x28, 0x37, 0x08, 0x1E, 0x07, 0x00, 0x00, 0x1F }; // Tested DeviceAddress HPWH_TempIn = { 0x28, 0x80, 0x8D, 0x1C, 0x07, 0x00, 0x00, 0x83 }; // Tested DeviceAddress DWH_TempOut = { 0x28, 0x92, 0x38, 0x1D, 0x07, 0x00, 0x00, 0xA4 }; // Not working when DHT11 robs power DeviceAddress DWH_TempIn = { 0x28, 0xA4, 0xA8, 0x2A, 0x07, 0x00, 0x00, 0x82 }; // Shows at Serial Print but not on ThinkSpeak: maybe voltage problemunsigned long myChannelNumber = 130737;const char * myWriteAPIKey = 'F0QA9UVAQWWQ0G1E';void setup() { // Start Serial for debugging on the Serial Monitor Serial.begin(9600); Ethernet.begin(mac); ThingSpeak.begin(client); sensors.begin(); // set the resolution to 10 bit (way more than I need) sensors.setResolution(HPWH_TempOut, 10); sensors.setResolution(HPWH_TempIn, 10); sensors.setResolution(DWH_TempOut, 10); sensors.setResolution(DWH_TempIn, 10);// Temp debugging of the DHT11 sensor Serial.println('DHTxx test!'); dht.begin();}void loop() { // Reading DHT11 temperature or humidity takes about 250 milliseconds! // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor) int h = dht.readHumidity(); int humidity = h * 1.25; // Correction multiplier // Read temperature as Celsius (the default) float t = dht.readTemperature(); // Read temperature as Fahrenheit (isFahrenheit = true) float f = dht.readTemperature(true); // Check if any reads failed and exit early (to try again). if (isnan(h) || isnan(t) || isnan(f)) { Serial.println('Failed to read from DHT sensor!'); return; } // Read the input on each pin, convert the reading, and set each field to be sent to ThingSpeak. // On Arduino: 0 - 1023 maps to 0 - 5 voltsfloat pinVoltage = analogRead(A0) * (VOLTAGE_MAX / VOLTAGE_MAXCOUNTS);float TMP36 = (pinVoltage - 0.5) * 100 * 9 / 5 + 32; //Print Temperatures Serial.print ('Getting temperatures...'); Serial.print('TMP36... Room Temperature....'); Serial.println(TMP36); sensors.requestTemperatures(); float HPwhTempOut = sensors.getTempF(HPWH_TempOut); float HPwhTempIn = sensors.getTempF(HPWH_TempIn); float DWHTempOut = sensors.getTempF(DWH_TempOut); float DWHTempIn = sensors.getTempF(DWH_TempIn);Serial.print('Heat Pump Water Temp out is:(Field 2)'); Serial.print(HPwhTempOut); Serial.print('F: '); Serial.print(''); Serial.print('Heat Pump Water Temp in is: (Field 3)'); Serial.print(HPwhTempIn); Serial.print('F: '); Serial.print(''); Serial.print('Water tank Temp out is: (Field 4)'); Serial.print(DWHTempOut); Serial.print('F: '); Serial.print(''); Serial.print('Water tank Temp in is: (Field 5)'); Serial.print(DWHTempIn); Serial.print('F: '); Serial.print('');Serial.print('Humidity: '); Serial.print(humidity); Serial.println(' %RH'); Serial.print('DHT11 Temperature: '); Serial.print(f*.9); Serial.println(' *Ft');// The following lines of code convert the DHT11 individual values to strings that ThingSpeak can us String(h,DEC); String(f,DEC);/*//The following lines of code convert DS19B20 to a string value that ThingSpeak can use String(HPwhTempOut,DEC); // ThingSpeak Field 2 String(HPwhTempIn, DEC); // ThingSpeak Field 3 String(DWHTempOut, DEC); // ThingSpeak Field 4 String(DWHTempIn, DEC); // ThingSpeak Field 5 */ /*char buffer[12]; String tempStr=dtostrf(HPwhTempOut,6,2,buffer); String tempStr2=dtostrf(HPwhTempIn,6,2,buffer); String tempStr3=dtostrf(DWHTempOut,6,2,buffer); */ ThingSpeak.setField(1,TMP36); //pinVoltage = analogRead(A1) * (VOLTAGE_MAX / VOLTAGE_MAXCOUNTS); ThingSpeak.setField(2,HPwhTempOut); ThingSpeak.setField(3,HPwhTempIn); //ThingSpeak.setField(4,DWHTempOut); //ThingSpeak.setField(5,DWHTempIn); ThingSpeak.setField(6,f); ThingSpeak.setField(7,humidity); // pinVoltage = analogRead(A7) * (VOLTAGE_MAX / VOLTAGE_MAXCOUNTS); //ThingSpeak.setField(8,pinVoltage); // Write the fields that you've set all at once. ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey);delay(20000); // ThingSpeak will only accept updates every 15 seconds.}", "num_user_post": " 3", "author": "hickse"}, {"date": "July 4, 2016 - 12:47 am", "content": "Have you tried setting DWHTempIn to a fixed value and testing if that updates correctly?\u00a0 Are you sure you have enabled channels 4 and 5 on your thingspeak channel and that the value is within the range you set?\u00a0Does it work if you disable the DHT11 and send only the DS1820 temps?I've not used the arduino TS client but these may narrow down the problem a bit.\u00a0(You may wish to change your API key now that you've posted the old one to the internet...)", "num_user_post": " 271", "author": "rw950431"}, {"date": "July 4, 2016 - 11:04 am", "content": "Thanks for looking at this. \u00a0I tried to set DWHTemp to a fixed value and uncomment it and that did not work.When I disable the DHT11 temp I can include 1 more DS18B20 sensor and get it to show in a ThingSpeak Field for a total of 5 fields.That made me think there is a limit to 4 - 5 Fields\u00a0without changing some parameter.I then created a sketch with 8 identical analog Fields. None presented to ThingSpeak.I then eliminated all but the first Field and it showed 1 field on ThingSpeak....\u00a0I then included 1 more and tested out the presentation. \u00a02 fields presented.I than kept incrementing the number of fields included in the sketch and when I got to 5 none were presenting / updating.This is consistent with what I'm experiencing in the original sketch. \u00a0This indicates to me that it isn't' an issue of String configuration, as I tried the above test with and without the variable being labeled as a String.Any thoughts or guidance would be very much appreciated.", "num_user_post": " 3", "author": "hickse"}, {"date": "July 4, 2016 - 3:50 pm", "content": "I got the WriteMultipleVoltages sketch to produce 8 fields so it has something to do with the digital reads..... Damn. \u00a0DS18B20's are more accurate than TMS36s.", "num_user_post": " 3", "author": "hickse"}, {"date": "July 4, 2016 - 10:50 pm", "content": "Thats weird.. maybe its a memory corruption problem or something with the Thingspeak arduino client. Or maybe the total length of the data being sent exceeds some preset limit and gets chopped off.Is it that it only sends field1 to field5 or will it work with, say, field3 to field8?\u00a0Unfortunately Thingspeak doesnt have a debug console so you can view.\u00a0 You might try saving the return code from writeFields() and printing it out to see if you can spot a pattern\u00a0Otherwise you might be forced to hack into the source code. According to https://github.com/mathworks/thingspeak-arduino/blob/master/src/ThingSpeak.h if you locate the file ThingSpeak.h on your computer and add#define PRINT_DEBUG_MESSAGESNear the other define statements it might produce some helpful comments.", "num_user_post": " 271", "author": "rw950431"}]}, {"url": "https://community.thingspeak.com/forum/arduino/problem-using-thingspeak-library-with-local-thingspeak-installation/", "posts": [{"date": "April 6, 2016 - 5:25 pm", "content": "I just installed Thingspeak locally on a Raspberry Pi. The server seems to be working well, and I can successfully update my channels using python scripts.But when using the official Thingspeak library for Arduino, I am unable to make a connection to the local server. Previously I had been using the library successfully for updating data to api.thingspeak.com.I've tried using:\u00a0ThingSpeak.begin(client,'192.168.0.178', 3000);, which contains the correct URL and port number of my local installation, but that doesn't work.I've tried modifying the library .h file and replacing 'api.thingspeak.com' with my URL, and the port 80 in the code with my local port number, but that doesn't work either.Is there a known problem with using the Thingspeak library with a local installation? Is there a way I can get this to work? Alternatively I'll just go back to the older way of doing it, by not using the library.Thanks!", "num_user_post": " 6", "author": "Coolio11"}, {"date": "April 7, 2016 - 10:11 am", "content": "I tried it like this too:\u00a0ThingSpeak.begin(client,IPAddress(192,168,0,178), 3000); ,\u00a0but that didn't work either.Then I enabled debug printing from the library, and this is the result I get (I removed the writeAPIKey):ts::setField (field: 1 value: '0')ts::setField (field: 2 value: '0')ts::setField (field: 3 value: '0')ts::setField (field: 4 value: '0')ts::setField (field: 5 value: '0')ts::setField (field: 6 value: '0')ts::writeRaw (channelNumber: 3 writeAPIKey: XXXXXXXXXX\u00a0postMessage: 'field1=0&field2=0&field3=0&field4=0&field5=0&field6=0') Connect to 192.168.0.178...Success. POST 'field1=0&field2=0&field3=0&field4=0&field5=0&field6=0&headers=false'Result Code: 200It looks like it's connecting okay, and the result code is '200' which should mean that there are no problems. But no data gets posted to the channel.I've tried changing to a different channel with a different API key, but still it doesn't work. Everything else is working with my local installation, including reading data from multiple channels, and writing data with python. I just can't get the Arduino to post the data, with the library or without.", "num_user_post": " 6", "author": "Coolio11"}, {"date": "April 7, 2016 - 12:39 pm", "content": "I finally figured it out. It only works if Rails is using Webrick, instead of the default Thin server. If I do 'rails server webrick', then I'm able to upload data from the arduino, either from the official library or without the library.", "num_user_post": " 6", "author": "Coolio11"}, {"date": "July 2, 2016 - 3:58 pm", "content": "Thanks for the posting\u2026this is just what I needed to get an Arduino Yun talking to my local ThingSpeak server (ubuntu-14.04.4-server-amd64 on VMWare Fusion 6.0.6):void setup() {// pass custom IP address (10.0.1.196) and port number (3000) to ThingSpeakThingSpeak.begin(client, IPAddress(10, 0, 1, 196), 3000); \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2026other setup code}\u00a0Complete test sketch// Upload random numbers to a local ThingSpeak server.// ThingSpeak server is running as a virtual machine in VMWare.// Optimally, assign a static IP address to the virtual machine so that IP address can stay fixed in the sketch.#include <ThingSpeak.h>#define myChannelNumber\u00a0put_ThingSpeak_channel_here#define myWriteAPIKey 'API write key goes inside the quotes'#include <YunClient.h>YunClient client;void setup() { pinMode(13, OUTPUT); // initialize digital pin 13 as an outputBridge.begin(); // start BridgeThingSpeak.begin(client, IPAddress(10, 0, 1, 196), 3000); // pass custom IP address and port (local VMWare ThingSpeak server) to ThingSpeak}void loop() { float v1, v2, v3, v4;digitalWrite(13, HIGH); // turn the LED on (HIGH is the voltage level) delay(500); digitalWrite(13, LOW); // turn the LED off by making the voltage LOW delay(500); digitalWrite(13, HIGH); // turn the LED on (HIGH is the voltage level) delay(500); digitalWrite(13, LOW); // turn the LED off by making the voltage LOW ThingSpeak.setField(1, random(5, 9) * 10.0F / random(5, 9) * 1.0F); // place data into ThingSpeak fields ThingSpeak.setField(2, random(5, 9) * 10.0F / random(5, 9) * 1.0F); ThingSpeak.setField(3, random(5, 9) * 10.0F / random(5, 9) * 1.0F); ThingSpeak.setField(4, random(5, 9) * 10.0F / random(5, 9) * 1.0F);ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey); // Write the fields all at once to the ThingSpeak serverdelay(15000); // delay next write for 15 sec (ThingSpeak minimum update frequency)}", "num_user_post": " 4", "author": "jpsabo"}]}, {"url": "https://community.thingspeak.com/forum/arduino/hackpod-smartphone-like-mcu-platform-powered-by-arduino/", "posts": [{"date": "June 12, 2016 - 2:14 am", "content": "Hi guys,Let me introduce you to HackPOD, an advanced microcontroller platform we developed over the last 2 years.HackPOD is a fast and powerful electronics development platform in a portable smartphone form factor. It is based on a 32-bit ARM Cortex-M4 chip running at a clock speed of 72 MHz and is programmable by the Arduino IDE and C language. It also features an integrated touchscreen LCD, in-built protoboard and SMT space, expandable memory , and a rechargeable battery.Please check it out atOur website: https://hackpod.github.ioOur blog: https://hackpod.gitbooks.io/blog/content/Our Facebook page: http://www.facebook.com/gethackpodWe welcome you to post your feedback and suggestions. Thanks in advance for your support.We will be crowdfunding\u00a0 via Indiegogo starting this June 15th. To be notified when we launch, please fill this form: https://hackpod.github.io/notify.To avail an Early Bird offer on HackPOD, you may sign up here: https://hackpod.github.io/earlybird.", "num_user_post": " 1", "author": "sayanbhattacharyya"}]}, {"url": "https://community.thingspeak.com/forum/arduino/thingspeak-with-enc28j60-arduino/", "posts": [{"date": "May 17, 2015 - 11:24 pm", "content": "below is the code which i run sucessful to upload Analogread A0 successful. /*| Post temp. values from a DS18B20 to ThingSpeak using the Ethercard interface based on the| ENC28J60 chip.| Based on the Ethercard example from http://www.jeelabs.org| Phil Grant Jan 2014*/#include// change these settings to match your own setup#define APIKEY  'xxxxxxxxxxxx'  // write API key// ethernet interface mac address, must be unique on the LANbyte mymac[] = { 0x74,0x69,0x69,0x2D,0x30,0x31 };char website[] PROGMEM = 'api.thingspeak.com';byte Ethernet::buffer[700];uint32_t timer;Stash stash;void setup () {  Serial.begin(57600);  Serial.println('[webClient]');  if (ether.begin(sizeof Ethernet::buffer, mymac) == 0)    Serial.println( 'Failed to access Ethernet controller');  if (!ether.dhcpSetup())    Serial.println('DHCP failed');  ether.printIp('IP:  ', ether.myip);  ether.printIp('GW:  ', ether.gwip);  ether.printIp('DNS: ', ether.dnsip);    if (!ether.dnsLookup(website))    Serial.println('DNS failed');  ether.printIp('SRV: ', ether.hisip);}void loop () {  ether.packetLoop(ether.packetReceive());  if (millis() > timer) {    timer = millis() + 16000; //Transmit every minute   // sensors.requestTemperatures();    delay(200);    // generate two fake values as payload - by using a separate stash,    // we can determine the size of the generated message ahead of time    byte sd = stash.create();    stash.print('field1=');    stash.println(String(analogRead (A0),DEC));    stash.save();    // generate the header with payload - note that the stash size is used,    // and that a 'stash descriptor' is passed in as argument using '$H'    Stash::prepare(PSTR('POST /update HTTP/1.1' ''                        'Host: $F' ''                        'Connection: close' ''                        'X-THINGSPEAKAPIKEY: $F' ''                        'Content-Type: application/x-www-form-urlencoded' ''                        'Content-Length: $D' ''                        ''                        '$H'),            website, PSTR(APIKEY), stash.size(), sd);    // send the packet - this also releases all stash buffers once done    ether.tcpSend();  }}", "num_user_post": " 4", "author": "hanguyen"}, {"date": "June 2, 2016 - 3:09 pm", "content": "Great Job!!!Which library works??? Do you have a link???Thank u", "num_user_post": " 1", "author": "angeloventura"}]}, {"url": "https://community.thingspeak.com/forum/arduino/esp8266-arduino/", "posts": [{"date": "May 31, 2016 - 9:43 am", "content": "Hey there,The last week I was working to create an sketch that uploads and retrieve data from a thingspeak channel. Even though it was quite tough (the reason why I am sharing it), I did quite quick and not taking in consideration much of clean and reusable code. I will work in the next days to clean everything and work on a library.\u00a0Here you have the GitHub link if you want to take a look and get some ideas.\u00a0Josep\u00a0https://github.com/josepbordesjove/ESP8266_IoT", "num_user_post": " 1", "author": "josepbj"}]}, {"url": "https://community.thingspeak.com/forum/arduino/i-have-4-ts-channels-how-to-update-16-values-via-one-arduino-sketch/", "posts": [{"date": "May 28, 2016 - 8:13 am", "content": "\u00a0i have tried so many iterations!for example:#include 'ThingSpeak.h'unsigned long upstairsPlenumCh1APIKeyChNum = xx;const char * upstairsPlenumCh1APIKey = '123';unsigned long upstairsPlenumCh2APIKeyChNum = yy;const char * upstairsPlenumCh2APIKey = '456';unsigned long upstairsPlenumCh3APIKeyChNum = zz;const char * upstairsPlenumCh3APIKey = '789';unsigned long upstairsPlenumCh4APIKeyChNum = ww;const char * upstairsPlenumCh4APIKey = '987';then do stuffthen:void dataLoggingThingspeakCh1(){ //sends the Ch1 variables to ThingspeakThingSpeak.writeField(upstairsPlenumCh1APIKeyChNum, 1, medianRoofTemp, upstairsPlenumCh1APIKey); ThingSpeak.writeField(upstairsPlenumCh1APIKeyChNum, 2, roofVapourPres, upstairsPlenumCh1APIKey); ThingSpeak.writeField(upstairsPlenumCh1APIKeyChNum, 3, medianHouseTemp, upstairsPlenumCh1APIKey); ThingSpeak.writeField(upstairsPlenumCh1APIKeyChNum, 4, houseVapourPres, upstairsPlenumCh1APIKey); ThingSpeak.writeField(upstairsPlenumCh1APIKeyChNum, 5, medianExternTemp, upstairsPlenumCh1APIKey); ThingSpeak.writeField(upstairsPlenumCh1APIKeyChNum, 6, externVapourPres, upstairsPlenumCh1APIKey); ThingSpeak.writeField(upstairsPlenumCh1APIKeyChNum, 7, medianLivingTemp, upstairsPlenumCh1APIKey); ThingSpeak.writeField(upstairsPlenumCh1APIKeyChNum, 8, livingVapourPres, upstairsPlenumCh1APIKey);}void dataLoggingThingspeakCh2(){ //sends the Ch2 variables to ThingspeakThingSpeak.writeField(upstairsPlenumCh2APIKeyChNum, 1, medianBed1Temp, upstairsPlenumCh2APIKey); ThingSpeak.writeField(upstairsPlenumCh2APIKeyChNum, 2, bed1VapourPres, upstairsPlenumCh2APIKey); ThingSpeak.writeField(upstairsPlenumCh2APIKeyChNum, 3, medianBed2Temp, upstairsPlenumCh2APIKey); ThingSpeak.writeField(upstairsPlenumCh2APIKeyChNum, 4, bed2VapourPres, upstairsPlenumCh2APIKey); ThingSpeak.writeField(upstairsPlenumCh2APIKeyChNum, 5, roofDewPoint, upstairsPlenumCh2APIKey); ThingSpeak.writeField(upstairsPlenumCh2APIKeyChNum, 6, houseDewPoint, upstairsPlenumCh2APIKey); ThingSpeak.writeField(upstairsPlenumCh2APIKeyChNum, 7, externDewPoint, upstairsPlenumCh2APIKey); ThingSpeak.writeField(upstairsPlenumCh2APIKeyChNum, 8, livingDewPoint, upstairsPlenumCh2APIKey);}void dataLoggingThingspeakCh3(){ //sends the Ch3 variables to ThingspeakThingSpeak.writeField(upstairsPlenumCh3APIKeyChNum, 1, bed1DewPoint, upstairsPlenumCh3APIKey); ThingSpeak.writeField(upstairsPlenumCh3APIKeyChNum, 2, bed2DewPoint, upstairsPlenumCh3APIKey); ThingSpeak.writeField(upstairsPlenumCh3APIKeyChNum, 3, setTarget, upstairsPlenumCh3APIKey); ThingSpeak.writeField(upstairsPlenumCh3APIKeyChNum, 4, setCooling, upstairsPlenumCh3APIKey); ThingSpeak.writeField(upstairsPlenumCh3APIKeyChNum, 5, setWarming, upstairsPlenumCh3APIKey); ThingSpeak.writeField(upstairsPlenumCh3APIKeyChNum, 6, setShutOffFunction, upstairsPlenumCh3APIKey); ThingSpeak.writeField(upstairsPlenumCh3APIKeyChNum, 7, setLivingOutlet, upstairsPlenumCh3APIKey); ThingSpeak.writeField(upstairsPlenumCh3APIKeyChNum, 8, setBedsOutlet, upstairsPlenumCh3APIKey);dataLoggingThingspeakCh4();}void dataLoggingThingspeakCh4(){ //sends the Ch4 variables to ThingspeakThingSpeak.writeField(upstairsPlenumCh4APIKeyChNum, 1, closeLivingOutlet, upstairsPlenumCh4APIKey); ThingSpeak.writeField(upstairsPlenumCh4APIKeyChNum, 2, closeBedroomsOutlet, upstairsPlenumCh4APIKey); ThingSpeak.writeField(upstairsPlenumCh4APIKeyChNum, 3, setToiletOff, upstairsPlenumCh4APIKey); ThingSpeak.writeField(upstairsPlenumCh4APIKeyChNum, 4, upstairsPlenumSmoke, upstairsPlenumCh4APIKey); ThingSpeak.writeField(upstairsPlenumCh4APIKeyChNum, 5, upstairsPlenumCO2, upstairsPlenumCh4APIKey); ThingSpeak.writeField(upstairsPlenumCh4APIKeyChNum, 6, basementPlenumSmoke, upstairsPlenumCh4APIKey); ThingSpeak.writeField(upstairsPlenumCh4APIKeyChNum, 7, basementPlenumCO2, upstairsPlenumCh4APIKey); // ThingSpeak.writeField(upstairsPlenumCh4APIKeyChNum, 8,NEWVARIABLE, upstairsPlenumCh4APIKey);}\u00a0but getting error:call of overloaded 'writeField(long unsigned int&, int, double&, const char*&)' is ambiguousany suggestions?", "num_user_post": " 1", "author": "dave1829"}, {"date": "May 29, 2016 - 10:24 pm", "content": "Did you look at the 'WriteMultipleVoltages' example from the TS library? Even if you solve your compile errors it wont work because TS limits updates to one every 15 seconds per channel so only the field 1 update will succeed.Its possible you have the wrong board type set, can you compile and run any of the example programs that came with the library? I always find that getting the examples to run is a good way to ensure your environment is set up correctly.Alternatively I note that the examples use 'float' for the value but the error implies you supply 'double' - perhaps this is tripping up the compiler?", "num_user_post": " 271", "author": "rw950431"}]}, {"url": "https://community.thingspeak.com/forum/arduino/talkback-how-to-make-an-led-blink-when-thingspeak-data-exceeds-a-particular-value/", "posts": [{"date": "May 3, 2016 - 3:56 am", "content": "Hi,I can successfully upload data using Arduino, ESP8266 and Thingspeak.\u00a0Now i need your help on how i can control my Arduino, example; blink an LED using Thingspeak Talkback. Another example would be, Lets say i want to turn any device on or off using internet only, ie, if someone is not near the Arduino, to which all components are connected, and he/she wishes to control my devices using the thingspeak and the internet.Any suggestions would be deeply appreciated. Thank you.Regards,K. Raghavendran", "num_user_post": " 2", "author": "sinet666"}, {"date": "May 3, 2016 - 9:05 pm", "content": "Have you looked at the section off the thingspeak documentation call 'update a channel and Execute the next talkback command'?Your program needs to read through the response it gets from Thingspeak and look for the text set by the talkback.\u00a0 There is some example code at http://bildr.org/2011/06/arduino-ethernet-client/ but you may have to adapt it to ESP8266", "num_user_post": " 271", "author": "rw950431"}, {"date": "May 25, 2016 - 6:29 am", "content": "i have same problem with sinet666, and i already look at the example code but dont have any idea with that tho. Anyone can help with other example for arduino and esp8266?", "num_user_post": " 3", "author": "auliandini"}]}]}